syntax = "proto3";

package solo.io.envoy.config.trace.v3;

import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";

import "udpa/annotations/migrate.proto";
import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

import "github.com/solo-io/solo-kit/api/v1/ref.proto";

option java_package = "io.envoyproxy.solo.io.envoy.config.trace.v3";
option java_outer_classname = "DatadogProto";
option java_multiple_files = true;
option (solo.io.udpa.annotations.file_migrate).move_to_package = "envoy.extensions.tracers.datadog.v4alpha";
option (solo.io.udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Datadog tracer]

// Configuration for the Remote Configuration feature.
message DatadogRemoteConfig {
  // Frequency at which new configuration updates are queried.
  // If no value is provided, the default value is delegated to the Datadog tracing library.
  google.protobuf.Duration polling_interval = 1;

  // Disabled remote config.
  // This field does not exist in envoy's config but allow us to preserve the default behavior 
  // when upgrading to envoy v1.31
  google.protobuf.BoolValue disabled = 2;
}

// Configuration for the Datadog tracer.
// [#extension: envoy.tracers.datadog]
message DatadogConfig {
  option (solo.io.udpa.annotations.versioning).previous_message_type =
      "envoy.config.trace.v2.DatadogConfig";

  // The cluster to use for submitting traces to the Datadog agent.
  oneof collector_cluster {
    // The upstream to use for submitting traces to the Datadog agent.
    core.solo.io.ResourceRef collector_upstream_ref = 1;

    // The name of the cluster to use for submitting traces to the Datadog agent. Note that the
    // cluster must be defined in the :ref:`Bootstrap static cluster
    // resources <envoy_api_field_config.bootstrap.v3.Bootstrap.StaticResources.clusters>`.
    string cluster_name = 3;
  }

  // The name used for the service when traces are generated by envoy.
  google.protobuf.StringValue service_name = 2 [(validate.rules).string = {min_len: 1}];

  // Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
  // that require a specific hostname. Defaults to collector_cluster above.
  string collector_hostname = 4;

  // Configures remote configuration.
  // Remote Configuration allows to configure the tracer from Datadog's user interface.
  // This feature can drastically increase the number of connections to the Datadog Agent.
  // Each tracer regularly polls for configuration updates, and the number of tracers is the product
  // of the number of listeners and worker threads.
  DatadogRemoteConfig remote_config = 5;
}
option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/config/trace/v3";
import "extproto/ext.proto";
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;
option (extproto.equal_all) = true;
