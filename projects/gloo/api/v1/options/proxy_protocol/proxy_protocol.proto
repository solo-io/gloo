syntax = "proto3";
package proxy_protocol.options.gloo.solo.io;

option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/proxy_protocol";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

import "validate/validate.proto";

message ProxyProtocol {

  message KeyValuePair {
    // The namespace â€” if this is empty, the filter's namespace will be used.
    string metadata_namespace = 1;

    // The key to use within the namespace.
    string key = 2 [(validate.rules).string = {min_len: 1}];
  }

  // A Rule defines what metadata to apply when a header is present or missing.
  message Rule {
    // The type that triggers the rule - required
    // TLV type is defined as uint8_t in proxy protocol. See [the spec](https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt) for details.
    uint32 tlv_type = 1 [(validate.rules).uint32 = {lt: 256}];

    // If the TLV type is present, apply this metadata KeyValuePair.
    KeyValuePair on_tlv_present = 2;
  }

  // The list of rules to apply to requests.
  repeated Rule rules = 1;

  // Allow requests through that don't use proxy protocol. Defaults to false.
  //
  // **Attention**:
  //
  //   The true setting is only honored in Gloo Edge Enterprise.
  //   This breaks conformance with the specification.
  //   Only enable if ALL traffic to the listener comes from a trusted source.
  //   For more information on the security implications of this feature, see
  //   https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt
  //
  bool allow_requests_without_proxy_protocol = 2;
}
