syntax = "proto3";
package caching.options.gloo.solo.io;
option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/enterprise/options/caching";


import "github.com/solo-io/gloo/projects/gloo/api/external/envoy/type/matcher/v3/string.proto";
import "github.com/solo-io/solo-kit/api/v1/ref.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

// DEPRECATED: the cache filter is deprecated and scheduled for removal in Gloo 1.21. This file should not be modified further.

message Settings {
  // The basic reference for the service. Details name and namespace.
  core.solo.io.ResourceRef caching_service_ref = 1;
  // A list of string matchers that state what headers are allowed to vary
  // and still be cached. Per upstream envoy allowed vary headers.
  repeated .solo.io.envoy.type.matcher.v3.StringMatcher allowed_vary_headers = 2;

   // Connection timeout  for retrieval from an sync cache
   google.protobuf.Duration timeout = 3;

   // Max payload size to cache. If unset defaults to a reasonable value.
   // If explicitly set to 0 will prevent anything with a body from
   // being cached.
   google.protobuf.UInt32Value max_payload_size = 4;


}
