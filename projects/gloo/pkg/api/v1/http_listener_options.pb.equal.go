// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/v1/http_listener_options.proto

package v1

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/golang/protobuf/proto"
	equality "github.com/solo-io/protoc-gen-ext/pkg/equality"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = equality.Equalizer(nil)
	_ = proto.Message(nil)
)

// Equal function
func (m *HttpListenerOptions) Equal(that interface{}) bool {
	if that == nil {
		return m == nil
	}

	target, ok := that.(*HttpListenerOptions)
	if !ok {
		that2, ok := that.(HttpListenerOptions)
		if ok {
			target = &that2
		} else {
			return false
		}
	}
	if target == nil {
		return m == nil
	} else if m == nil {
		return false
	}

	if h, ok := interface{}(m.GetGrpcWeb()).(equality.Equalizer); ok {
		if !h.Equal(target.GetGrpcWeb()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetGrpcWeb(), target.GetGrpcWeb()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetHttpConnectionManagerSettings()).(equality.Equalizer); ok {
		if !h.Equal(target.GetHttpConnectionManagerSettings()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetHttpConnectionManagerSettings(), target.GetHttpConnectionManagerSettings()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetHealthCheck()).(equality.Equalizer); ok {
		if !h.Equal(target.GetHealthCheck()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetHealthCheck(), target.GetHealthCheck()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetExtensions()).(equality.Equalizer); ok {
		if !h.Equal(target.GetExtensions()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetExtensions(), target.GetExtensions()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetWaf()).(equality.Equalizer); ok {
		if !h.Equal(target.GetWaf()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetWaf(), target.GetWaf()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetDlp()).(equality.Equalizer); ok {
		if !h.Equal(target.GetDlp()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetDlp(), target.GetDlp()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetWasm()).(equality.Equalizer); ok {
		if !h.Equal(target.GetWasm()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetWasm(), target.GetWasm()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetExtauth()).(equality.Equalizer); ok {
		if !h.Equal(target.GetExtauth()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetExtauth(), target.GetExtauth()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetRatelimitServer()).(equality.Equalizer); ok {
		if !h.Equal(target.GetRatelimitServer()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetRatelimitServer(), target.GetRatelimitServer()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetCaching()).(equality.Equalizer); ok {
		if !h.Equal(target.GetCaching()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetCaching(), target.GetCaching()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetGzip()).(equality.Equalizer); ok {
		if !h.Equal(target.GetGzip()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetGzip(), target.GetGzip()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetProxyLatency()).(equality.Equalizer); ok {
		if !h.Equal(target.GetProxyLatency()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetProxyLatency(), target.GetProxyLatency()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetBuffer()).(equality.Equalizer); ok {
		if !h.Equal(target.GetBuffer()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetBuffer(), target.GetBuffer()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetCsrf()).(equality.Equalizer); ok {
		if !h.Equal(target.GetCsrf()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetCsrf(), target.GetCsrf()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetGrpcJsonTranscoder()).(equality.Equalizer); ok {
		if !h.Equal(target.GetGrpcJsonTranscoder()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetGrpcJsonTranscoder(), target.GetGrpcJsonTranscoder()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetSanitizeClusterHeader()).(equality.Equalizer); ok {
		if !h.Equal(target.GetSanitizeClusterHeader()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetSanitizeClusterHeader(), target.GetSanitizeClusterHeader()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetLeftmostXffAddress()).(equality.Equalizer); ok {
		if !h.Equal(target.GetLeftmostXffAddress()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetLeftmostXffAddress(), target.GetLeftmostXffAddress()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetDynamicForwardProxy()).(equality.Equalizer); ok {
		if !h.Equal(target.GetDynamicForwardProxy()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetDynamicForwardProxy(), target.GetDynamicForwardProxy()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetConnectionLimit()).(equality.Equalizer); ok {
		if !h.Equal(target.GetConnectionLimit()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetConnectionLimit(), target.GetConnectionLimit()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetNetworkLocalRatelimit()).(equality.Equalizer); ok {
		if !h.Equal(target.GetNetworkLocalRatelimit()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetNetworkLocalRatelimit(), target.GetNetworkLocalRatelimit()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetHttpLocalRatelimit()).(equality.Equalizer); ok {
		if !h.Equal(target.GetHttpLocalRatelimit()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetHttpLocalRatelimit(), target.GetHttpLocalRatelimit()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetRouter()).(equality.Equalizer); ok {
		if !h.Equal(target.GetRouter()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetRouter(), target.GetRouter()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetTap()).(equality.Equalizer); ok {
		if !h.Equal(target.GetTap()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetTap(), target.GetTap()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetStatefulSession()).(equality.Equalizer); ok {
		if !h.Equal(target.GetStatefulSession()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetStatefulSession(), target.GetStatefulSession()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetHeaderValidationSettings()).(equality.Equalizer); ok {
		if !h.Equal(target.GetHeaderValidationSettings()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetHeaderValidationSettings(), target.GetHeaderValidationSettings()) {
			return false
		}
	}

	switch m.ExtProcConfig.(type) {

	case *HttpListenerOptions_DisableExtProc:
		if _, ok := target.ExtProcConfig.(*HttpListenerOptions_DisableExtProc); !ok {
			return false
		}

		if h, ok := interface{}(m.GetDisableExtProc()).(equality.Equalizer); ok {
			if !h.Equal(target.GetDisableExtProc()) {
				return false
			}
		} else {
			if !proto.Equal(m.GetDisableExtProc(), target.GetDisableExtProc()) {
				return false
			}
		}

	case *HttpListenerOptions_ExtProc:
		if _, ok := target.ExtProcConfig.(*HttpListenerOptions_ExtProc); !ok {
			return false
		}

		if h, ok := interface{}(m.GetExtProc()).(equality.Equalizer); ok {
			if !h.Equal(target.GetExtProc()) {
				return false
			}
		} else {
			if !proto.Equal(m.GetExtProc(), target.GetExtProc()) {
				return false
			}
		}

	default:
		// m is nil but target is not nil
		if m.ExtProcConfig != target.ExtProcConfig {
			return false
		}
	}

	return true
}
