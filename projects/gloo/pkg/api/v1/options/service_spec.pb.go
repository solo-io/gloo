// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/service_spec.proto

package options

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/grpc"
	_ "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/grpc_json"
	_ "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/rest"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes APIs and application-level information for services
// Gloo routes to. ServiceSpec is contained within the UpstreamSpec for certain types
// of upstreams, including Kubernetes, Consul, and Static.
// ServiceSpec configuration is opaque to Gloo and handled by Service Options.
type ServiceSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceSpec) Reset() {
	*x = ServiceSpec{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec) ProtoMessage() {}

func (x *ServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec.ProtoReflect.Descriptor instead.
func (*ServiceSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescGZIP(), []int{0}
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDesc = "" +
	"\n" +
	"Ggithub.com/solo-io/gloo/projects/gloo/api/v1/options/service_spec.proto\x12\x14options.gloo.solo.io\x1aDgithub.com/solo-io/gloo/projects/gloo/api/v1/options/rest/rest.proto\x1aDgithub.com/solo-io/gloo/projects/gloo/api/v1/options/grpc/grpc.proto\x1aNgithub.com/solo-io/gloo/projects/gloo/api/v1/options/grpc_json/grpc_json.proto\x1a\x12extproto/ext.proto\"P\n" +
	"\vServiceSpecJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05R\x04restR\x04grpcR\x14grpc_json_transcoderR\agraphqlBF\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z8github.com/solo-io/gloo/projects/gloo/pkg/api/v1/optionsb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_goTypes = []any{
	(*ServiceSpec)(nil), // 0: options.gloo.solo.io.ServiceSpec
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_init() }
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_service_spec_proto_depIdxs = nil
}
