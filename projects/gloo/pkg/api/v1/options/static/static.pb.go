// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/static/static.proto

package static

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	options "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Static upstreams are used to route request to services listening at fixed IP/Host & Port pairs.
// Static upstreams can be used to proxy any kind of service, and therefore contain a ServiceSpec
// for additional service-specific configuration.
// Unlike upstreams created by service discovery, Static Upstreams must be created manually by users
type UpstreamSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of addresses and ports
	// at least one must be specified
	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Attempt to use outbound TLS
	// If not explicitly set, Gloo will automatically set this to true for port 443
	UseTls *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	// An optional Service Spec describing the service listening at this address
	ServiceSpec *options.ServiceSpec `protobuf:"bytes,5,opt,name=service_spec,json=serviceSpec,proto3" json:"service_spec,omitempty"`
	// When set, automatically set the sni address to use to the addr field.
	// If both this and host.sni_addr are set, host.sni_addr has priority.
	// defaults to "true".
	AutoSniRewrite *wrapperspb.BoolValue `protobuf:"bytes,6,opt,name=auto_sni_rewrite,json=autoSniRewrite,proto3" json:"auto_sni_rewrite,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpstreamSpec) Reset() {
	*x = UpstreamSpec{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamSpec) ProtoMessage() {}

func (x *UpstreamSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamSpec.ProtoReflect.Descriptor instead.
func (*UpstreamSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescGZIP(), []int{0}
}

func (x *UpstreamSpec) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *UpstreamSpec) GetUseTls() *wrapperspb.BoolValue {
	if x != nil {
		return x.UseTls
	}
	return nil
}

func (x *UpstreamSpec) GetServiceSpec() *options.ServiceSpec {
	if x != nil {
		return x.ServiceSpec
	}
	return nil
}

func (x *UpstreamSpec) GetAutoSniRewrite() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoSniRewrite
	}
	return nil
}

// Represents a single instance of an upstream
type Host struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Address (hostname or IP)
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// Port the instance is listening on
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Address to use for SNI if using ssl.
	SniAddr string `protobuf:"bytes,4,opt,name=sni_addr,json=sniAddr,proto3" json:"sni_addr,omitempty"`
	// The optional load balancing weight of the upstream host; at least 1.
	// Envoy uses the load balancing weight in some of the built in load
	// balancers. The load balancing weight for an endpoint is divided by the sum
	// of the weights of all endpoints in the endpoint's locality to produce a
	// percentage of traffic for the endpoint. This percentage is then further
	// weighted by the endpoint's locality's load balancing weight from
	// LocalityLbEndpoints. If unspecified, each host is presumed to have equal
	// weight in a locality.
	LoadBalancingWeight *wrapperspb.UInt32Value `protobuf:"bytes,5,opt,name=load_balancing_weight,json=loadBalancingWeight,proto3" json:"load_balancing_weight,omitempty"`
	// (Enterprise Only): Host specific health checking configuration.
	HealthCheckConfig *Host_HealthCheckConfig `protobuf:"bytes,3,opt,name=health_check_config,json=healthCheckConfig,proto3" json:"health_check_config,omitempty"`
	// Additional metadata to add to the endpoint. This metadata can be used in upstream HTTP filters
	// or other specific Envoy configurations.
	// The following keys are added by Gloo Edge and are ignored if set:
	// - "envoy.transport_socket_match"
	// - "io.solo.health_checkers.advanced_http"
	Metadata      map[string]*structpb.Struct `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescGZIP(), []int{1}
}

func (x *Host) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Host) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Host) GetSniAddr() string {
	if x != nil {
		return x.SniAddr
	}
	return ""
}

func (x *Host) GetLoadBalancingWeight() *wrapperspb.UInt32Value {
	if x != nil {
		return x.LoadBalancingWeight
	}
	return nil
}

func (x *Host) GetHealthCheckConfig() *Host_HealthCheckConfig {
	if x != nil {
		return x.HealthCheckConfig
	}
	return nil
}

func (x *Host) GetMetadata() map[string]*structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Host_HealthCheckConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// (Enterprise Only): Path to use when health checking this specific host.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// (Enterprise Only): Method to use when health checking this specific host.
	Method        string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Host_HealthCheckConfig) Reset() {
	*x = Host_HealthCheckConfig{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host_HealthCheckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_HealthCheckConfig) ProtoMessage() {}

func (x *Host_HealthCheckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_HealthCheckConfig.ProtoReflect.Descriptor instead.
func (*Host_HealthCheckConfig) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Host_HealthCheckConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Host_HealthCheckConfig) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDesc = "" +
	"\n" +
	"Hgithub.com/solo-io/gloo/projects/gloo/api/v1/options/static/static.proto\x12\x1bstatic.options.gloo.solo.io\x1a\x12extproto/ext.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1cgoogle/protobuf/struct.proto\x1aGgithub.com/solo-io/gloo/projects/gloo/api/v1/options/service_spec.proto\x1a\x17validate/validate.proto\"\x88\x02\n" +
	"\fUpstreamSpec\x127\n" +
	"\x05hosts\x18\x01 \x03(\v2!.static.options.gloo.solo.io.HostR\x05hosts\x123\n" +
	"\ause_tls\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueR\x06useTls\x12D\n" +
	"\fservice_spec\x18\x05 \x01(\v2!.options.gloo.solo.io.ServiceSpecR\vserviceSpec\x12D\n" +
	"\x10auto_sni_rewrite\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\x0eautoSniRewrite\"\xed\x03\n" +
	"\x04Host\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x19\n" +
	"\bsni_addr\x18\x04 \x01(\tR\asniAddr\x12Y\n" +
	"\x15load_balancing_weight\x18\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueB\a\xfaB\x04*\x02(\x01R\x13loadBalancingWeight\x12c\n" +
	"\x13health_check_config\x18\x03 \x01(\v23.static.options.gloo.solo.io.Host.HealthCheckConfigR\x11healthCheckConfig\x12K\n" +
	"\bmetadata\x18\x06 \x03(\v2/.static.options.gloo.solo.io.Host.MetadataEntryR\bmetadata\x1a?\n" +
	"\x11HealthCheckConfig\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x1aT\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05value:\x028\x01BM\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z?github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/staticb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_goTypes = []any{
	(*UpstreamSpec)(nil),           // 0: static.options.gloo.solo.io.UpstreamSpec
	(*Host)(nil),                   // 1: static.options.gloo.solo.io.Host
	(*Host_HealthCheckConfig)(nil), // 2: static.options.gloo.solo.io.Host.HealthCheckConfig
	nil,                            // 3: static.options.gloo.solo.io.Host.MetadataEntry
	(*wrapperspb.BoolValue)(nil),   // 4: google.protobuf.BoolValue
	(*options.ServiceSpec)(nil),    // 5: options.gloo.solo.io.ServiceSpec
	(*wrapperspb.UInt32Value)(nil), // 6: google.protobuf.UInt32Value
	(*structpb.Struct)(nil),        // 7: google.protobuf.Struct
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_depIdxs = []int32{
	1, // 0: static.options.gloo.solo.io.UpstreamSpec.hosts:type_name -> static.options.gloo.solo.io.Host
	4, // 1: static.options.gloo.solo.io.UpstreamSpec.use_tls:type_name -> google.protobuf.BoolValue
	5, // 2: static.options.gloo.solo.io.UpstreamSpec.service_spec:type_name -> options.gloo.solo.io.ServiceSpec
	4, // 3: static.options.gloo.solo.io.UpstreamSpec.auto_sni_rewrite:type_name -> google.protobuf.BoolValue
	6, // 4: static.options.gloo.solo.io.Host.load_balancing_weight:type_name -> google.protobuf.UInt32Value
	2, // 5: static.options.gloo.solo.io.Host.health_check_config:type_name -> static.options.gloo.solo.io.Host.HealthCheckConfig
	3, // 6: static.options.gloo.solo.io.Host.metadata:type_name -> static.options.gloo.solo.io.Host.MetadataEntry
	7, // 7: static.options.gloo.solo.io.Host.MetadataEntry.value:type_name -> google.protobuf.Struct
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_init() }
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_static_static_proto_depIdxs = nil
}
