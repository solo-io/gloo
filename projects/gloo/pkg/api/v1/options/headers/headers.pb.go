// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/headers/headers.proto

package headers

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/external/envoy/api/v2/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This plugin provides configuration options to append and remove headers from
// requests and responses
// HeaderManipulation can be specified on routes, virtual hosts, or weighted destinations
type HeaderManipulation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies a list of HTTP headers that should be added to each request
	// handled by this route or virtual host. For more information, including
	// details on header value syntax, see the
	// [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers.html#) .
	RequestHeadersToAdd []*core.HeaderValueOption `protobuf:"bytes,1,rep,name=request_headers_to_add,json=requestHeadersToAdd,proto3" json:"request_headers_to_add,omitempty"`
	// Specifies a list of HTTP headers that should be removed from each request
	// handled by this route or virtual host.
	RequestHeadersToRemove []string `protobuf:"bytes,2,rep,name=request_headers_to_remove,json=requestHeadersToRemove,proto3" json:"request_headers_to_remove,omitempty"`
	// Specifies a list of HTTP headers that should be added to each response
	// handled by this route or host. For more information, including
	// details on header value syntax, see the
	// [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers.html# .
	ResponseHeadersToAdd []*HeaderValueOption `protobuf:"bytes,3,rep,name=response_headers_to_add,json=responseHeadersToAdd,proto3" json:"response_headers_to_add,omitempty"`
	// Specifies a list of HTTP headers that should be removed from each response
	// handled by this route or virtual host.
	ResponseHeadersToRemove []string `protobuf:"bytes,4,rep,name=response_headers_to_remove,json=responseHeadersToRemove,proto3" json:"response_headers_to_remove,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *HeaderManipulation) Reset() {
	*x = HeaderManipulation{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderManipulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderManipulation) ProtoMessage() {}

func (x *HeaderManipulation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderManipulation.ProtoReflect.Descriptor instead.
func (*HeaderManipulation) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescGZIP(), []int{0}
}

func (x *HeaderManipulation) GetRequestHeadersToAdd() []*core.HeaderValueOption {
	if x != nil {
		return x.RequestHeadersToAdd
	}
	return nil
}

func (x *HeaderManipulation) GetRequestHeadersToRemove() []string {
	if x != nil {
		return x.RequestHeadersToRemove
	}
	return nil
}

func (x *HeaderManipulation) GetResponseHeadersToAdd() []*HeaderValueOption {
	if x != nil {
		return x.ResponseHeadersToAdd
	}
	return nil
}

func (x *HeaderManipulation) GetResponseHeadersToRemove() []string {
	if x != nil {
		return x.ResponseHeadersToRemove
	}
	return nil
}

// EarlyHeaderManipulation can be specified on Gateways to manipulate headers before significant processing
// has happened and routing decisions are made.
// Early header manipulation allows adding/removing headers that affect request processing
// and can be used to implement override headers.
// Note: The adding of headers happens before the removal of headers.
type EarlyHeaderManipulation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies a list of HTTP headers that should be added to each request
	// handled by this gateway. For more information, including
	// details on header value syntax, see the
	// [Envoy documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers.html#) .
	HeadersToAdd []*core.HeaderValueOption `protobuf:"bytes,1,rep,name=headers_to_add,json=headersToAdd,proto3" json:"headers_to_add,omitempty"`
	// Specifies a list of HTTP headers that should be removed from each request
	// handled by this gateway.
	HeadersToRemove []string `protobuf:"bytes,2,rep,name=headers_to_remove,json=headersToRemove,proto3" json:"headers_to_remove,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EarlyHeaderManipulation) Reset() {
	*x = EarlyHeaderManipulation{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EarlyHeaderManipulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarlyHeaderManipulation) ProtoMessage() {}

func (x *EarlyHeaderManipulation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarlyHeaderManipulation.ProtoReflect.Descriptor instead.
func (*EarlyHeaderManipulation) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescGZIP(), []int{1}
}

func (x *EarlyHeaderManipulation) GetHeadersToAdd() []*core.HeaderValueOption {
	if x != nil {
		return x.HeadersToAdd
	}
	return nil
}

func (x *EarlyHeaderManipulation) GetHeadersToRemove() []string {
	if x != nil {
		return x.HeadersToRemove
	}
	return nil
}

// Header name/value pair plus option to control append behavior.
type HeaderValueOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header name/value pair that this option applies to.
	Header *HeaderValue `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Specifies if the value should be appended or overwrite an existing header. Defaults to true.
	// If set to true, this maps to Envoy's `append_value: APPEND_IF_EXISTS_OR_ADD`, where the value gets be appended the header's value(s) if exists, or created if it does not.
	// If set to false, this maps to Envoy's `append_value: OVERWRITE_IF_EXISTS_OR_ADD`, where the header's value will be overwritten if it exists, or created if it does not.
	Append        *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=append,proto3" json:"append,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderValueOption) Reset() {
	*x = HeaderValueOption{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderValueOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValueOption) ProtoMessage() {}

func (x *HeaderValueOption) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderValueOption.ProtoReflect.Descriptor instead.
func (*HeaderValueOption) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescGZIP(), []int{2}
}

func (x *HeaderValueOption) GetHeader() *HeaderValue {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HeaderValueOption) GetAppend() *wrapperspb.BoolValue {
	if x != nil {
		return x.Append
	}
	return nil
}

// Header name/value pair.
type HeaderValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header name.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Header value.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderValue) Reset() {
	*x = HeaderValue{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValue) ProtoMessage() {}

func (x *HeaderValue) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderValue.ProtoReflect.Descriptor instead.
func (*HeaderValue) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescGZIP(), []int{3}
}

func (x *HeaderValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeaderValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDesc = "" +
	"\n" +
	"Jgithub.com/solo-io/gloo/projects/gloo/api/v1/options/headers/headers.proto\x12\x1cheaders.options.gloo.solo.io\x1a\x12extproto/ext.proto\x1aEgithub.com/solo-io/solo-kit/api/external/envoy/api/v2/core/base.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xd7\x02\n" +
	"\x12HeaderManipulation\x12a\n" +
	"\x16request_headers_to_add\x18\x01 \x03(\v2,.solo.io.envoy.api.v2.core.HeaderValueOptionR\x13requestHeadersToAdd\x129\n" +
	"\x19request_headers_to_remove\x18\x02 \x03(\tR\x16requestHeadersToRemove\x12f\n" +
	"\x17response_headers_to_add\x18\x03 \x03(\v2/.headers.options.gloo.solo.io.HeaderValueOptionR\x14responseHeadersToAdd\x12;\n" +
	"\x1aresponse_headers_to_remove\x18\x04 \x03(\tR\x17responseHeadersToRemove\"\x99\x01\n" +
	"\x17EarlyHeaderManipulation\x12R\n" +
	"\x0eheaders_to_add\x18\x01 \x03(\v2,.solo.io.envoy.api.v2.core.HeaderValueOptionR\fheadersToAdd\x12*\n" +
	"\x11headers_to_remove\x18\x02 \x03(\tR\x0fheadersToRemove\"\x8a\x01\n" +
	"\x11HeaderValueOption\x12A\n" +
	"\x06header\x18\x01 \x01(\v2).headers.options.gloo.solo.io.HeaderValueR\x06header\x122\n" +
	"\x06append\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x06append\"5\n" +
	"\vHeaderValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05valueBN\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z@github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/headersb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_goTypes = []any{
	(*HeaderManipulation)(nil),      // 0: headers.options.gloo.solo.io.HeaderManipulation
	(*EarlyHeaderManipulation)(nil), // 1: headers.options.gloo.solo.io.EarlyHeaderManipulation
	(*HeaderValueOption)(nil),       // 2: headers.options.gloo.solo.io.HeaderValueOption
	(*HeaderValue)(nil),             // 3: headers.options.gloo.solo.io.HeaderValue
	(*core.HeaderValueOption)(nil),  // 4: solo.io.envoy.api.v2.core.HeaderValueOption
	(*wrapperspb.BoolValue)(nil),    // 5: google.protobuf.BoolValue
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_depIdxs = []int32{
	4, // 0: headers.options.gloo.solo.io.HeaderManipulation.request_headers_to_add:type_name -> solo.io.envoy.api.v2.core.HeaderValueOption
	2, // 1: headers.options.gloo.solo.io.HeaderManipulation.response_headers_to_add:type_name -> headers.options.gloo.solo.io.HeaderValueOption
	4, // 2: headers.options.gloo.solo.io.EarlyHeaderManipulation.headers_to_add:type_name -> solo.io.envoy.api.v2.core.HeaderValueOption
	3, // 3: headers.options.gloo.solo.io.HeaderValueOption.header:type_name -> headers.options.gloo.solo.io.HeaderValue
	5, // 4: headers.options.gloo.solo.io.HeaderValueOption.append:type_name -> google.protobuf.BoolValue
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_init() }
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_headers_headers_proto_depIdxs = nil
}
