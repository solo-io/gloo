// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/shadowing/shadowing.proto

package shadowing

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Specifies traffic shadowing configuration for the associated route.
// If set, Envoy will send a portion of the route's traffic to the shadowed upstream. This can be a useful way to
// preview a new service's behavior before putting the service in the critical path.
// Note that this plugin is only applicable to routes with upstream destinations (not redirect or direct response routes).
// See here for additional information on Envoy's shadowing capabilities: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto#envoy-api-msg-route-routeaction-requestmirrorpolicy
type RouteShadowing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The upstream to which the shadowed traffic should be sent.
	Upstream *core.ResourceRef `protobuf:"bytes,1,opt,name=upstream,proto3" json:"upstream,omitempty"`
	// This should be a value between 0.0 and 100.0, with up to 6 significant digits.
	Percentage    float32 `protobuf:"fixed32,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteShadowing) Reset() {
	*x = RouteShadowing{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteShadowing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteShadowing) ProtoMessage() {}

func (x *RouteShadowing) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteShadowing.ProtoReflect.Descriptor instead.
func (*RouteShadowing) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescGZIP(), []int{0}
}

func (x *RouteShadowing) GetUpstream() *core.ResourceRef {
	if x != nil {
		return x.Upstream
	}
	return nil
}

func (x *RouteShadowing) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDesc = "" +
	"\n" +
	"Ngithub.com/solo-io/gloo/projects/gloo/api/v1/options/shadowing/shadowing.proto\x12\x1eshadowing.options.gloo.solo.io\x1a,github.com/solo-io/solo-kit/api/v1/ref.proto\x1a\x12extproto/ext.proto\"g\n" +
	"\x0eRouteShadowing\x125\n" +
	"\bupstream\x18\x01 \x01(\v2\x19.core.solo.io.ResourceRefR\bupstream\x12\x1e\n" +
	"\n" +
	"percentage\x18\x02 \x01(\x02R\n" +
	"percentageBP\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01ZBgithub.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/shadowingb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_goTypes = []any{
	(*RouteShadowing)(nil),   // 0: shadowing.options.gloo.solo.io.RouteShadowing
	(*core.ResourceRef)(nil), // 1: core.solo.io.ResourceRef
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_depIdxs = []int32{
	1, // 0: shadowing.options.gloo.solo.io.RouteShadowing.upstream:type_name -> core.solo.io.ResourceRef
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_shadowing_shadowing_proto_depIdxs = nil
}
