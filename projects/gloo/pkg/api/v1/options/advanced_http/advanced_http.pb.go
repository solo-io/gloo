// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/advanced_http/advanced_http.proto

package advanced_http

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResult int32

const (
	HealthCheckResult_default   HealthCheckResult = 0 // context-specific, defaults to one of the following values
	HealthCheckResult_healthy   HealthCheckResult = 1
	HealthCheckResult_degraded  HealthCheckResult = 2
	HealthCheckResult_unhealthy HealthCheckResult = 3
)

// Enum value maps for HealthCheckResult.
var (
	HealthCheckResult_name = map[int32]string{
		0: "default",
		1: "healthy",
		2: "degraded",
		3: "unhealthy",
	}
	HealthCheckResult_value = map[string]int32{
		"default":   0,
		"healthy":   1,
		"degraded":  2,
		"unhealthy": 3,
	}
)

func (x HealthCheckResult) Enum() *HealthCheckResult {
	p := new(HealthCheckResult)
	*p = x
	return p
}

func (x HealthCheckResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResult) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResult) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_enumTypes[0]
}

func (x HealthCheckResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResult.Descriptor instead.
func (HealthCheckResult) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP(), []int{0}
}

type ResponseAssertions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A bunch of match rules, the first match wins out and short-circuits
	ResponseMatchers []*ResponseMatcher `protobuf:"bytes,1,rep,name=response_matchers,json=responseMatchers,proto3" json:"response_matchers,omitempty"`
	// The default health response if none of the response health checks were matches.
	// If omitted, defaults to unhealthy.
	NoMatchHealth HealthCheckResult `protobuf:"varint,2,opt,name=no_match_health,json=noMatchHealth,proto3,enum=advancedhttp.options.gloo.solo.io.HealthCheckResult" json:"no_match_health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseAssertions) Reset() {
	*x = ResponseAssertions{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAssertions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAssertions) ProtoMessage() {}

func (x *ResponseAssertions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAssertions.ProtoReflect.Descriptor instead.
func (*ResponseAssertions) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseAssertions) GetResponseMatchers() []*ResponseMatcher {
	if x != nil {
		return x.ResponseMatchers
	}
	return nil
}

func (x *ResponseAssertions) GetNoMatchHealth() HealthCheckResult {
	if x != nil {
		return x.NoMatchHealth
	}
	return HealthCheckResult_default
}

// Defines a transformation template.
type ResponseMatcher struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines the parameters to determine a single match
	ResponseMatch *ResponseMatch `protobuf:"bytes,1,opt,name=response_match,json=responseMatch,proto3" json:"response_match,omitempty"`
	// The health response if this response_match is a match.
	// If omitted, defaults to healthy
	MatchHealth   HealthCheckResult `protobuf:"varint,2,opt,name=match_health,json=matchHealth,proto3,enum=advancedhttp.options.gloo.solo.io.HealthCheckResult" json:"match_health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseMatcher) Reset() {
	*x = ResponseMatcher{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMatcher) ProtoMessage() {}

func (x *ResponseMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMatcher.ProtoReflect.Descriptor instead.
func (*ResponseMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseMatcher) GetResponseMatch() *ResponseMatch {
	if x != nil {
		return x.ResponseMatch
	}
	return nil
}

func (x *ResponseMatcher) GetMatchHealth() HealthCheckResult {
	if x != nil {
		return x.MatchHealth
	}
	return HealthCheckResult_default
}

// ResponseMatches can be used to extract information from the request/response.
type ResponseMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration to get the json key.
	// Treats the body as raw text if omitted.
	JsonKey *JsonKey `protobuf:"bytes,1,opt,name=json_key,json=jsonKey,proto3" json:"json_key,omitempty"`
	// If set to true, Envoy will not throw an exception in case the json body parsing
	// fails.
	IgnoreErrorOnParse bool `protobuf:"varint,2,opt,name=ignore_error_on_parse,json=ignoreErrorOnParse,proto3" json:"ignore_error_on_parse,omitempty"`
	// The source of the extraction
	//
	// Types that are valid to be assigned to Source:
	//
	//	*ResponseMatch_Header
	//	*ResponseMatch_Body
	Source isResponseMatch_Source `protobuf_oneof:"source"`
	// Only strings matching this regular expression will be considered a match.
	// The most simple value for this field is '.*', which matches the
	// whole source. The field is required.
	Regex         string `protobuf:"bytes,5,opt,name=regex,proto3" json:"regex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseMatch) Reset() {
	*x = ResponseMatch{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMatch) ProtoMessage() {}

func (x *ResponseMatch) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMatch.ProtoReflect.Descriptor instead.
func (*ResponseMatch) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseMatch) GetJsonKey() *JsonKey {
	if x != nil {
		return x.JsonKey
	}
	return nil
}

func (x *ResponseMatch) GetIgnoreErrorOnParse() bool {
	if x != nil {
		return x.IgnoreErrorOnParse
	}
	return false
}

func (x *ResponseMatch) GetSource() isResponseMatch_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ResponseMatch) GetHeader() string {
	if x != nil {
		if x, ok := x.Source.(*ResponseMatch_Header); ok {
			return x.Header
		}
	}
	return ""
}

func (x *ResponseMatch) GetBody() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Source.(*ResponseMatch_Body); ok {
			return x.Body
		}
	}
	return nil
}

func (x *ResponseMatch) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

type isResponseMatch_Source interface {
	isResponseMatch_Source()
}

type ResponseMatch_Header struct {
	// Extract information from headers
	Header string `protobuf:"bytes,3,opt,name=header,proto3,oneof"`
}

type ResponseMatch_Body struct {
	// Extract information from the request/response body
	Body *emptypb.Empty `protobuf:"bytes,4,opt,name=body,proto3,oneof"`
}

func (*ResponseMatch_Header) isResponseMatch_Source() {}

func (*ResponseMatch_Body) isResponseMatch_Source() {}

type JsonKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The path to retrieve the Value.
	Path          []*JsonKey_PathSegment `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonKey) Reset() {
	*x = JsonKey{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonKey) ProtoMessage() {}

func (x *JsonKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonKey.ProtoReflect.Descriptor instead.
func (*JsonKey) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP(), []int{3}
}

func (x *JsonKey) GetPath() []*JsonKey_PathSegment {
	if x != nil {
		return x.Path
	}
	return nil
}

// Specifies the segment in a path to retrieve value.
type JsonKey_PathSegment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Segment:
	//
	//	*JsonKey_PathSegment_Key
	Segment       isJsonKey_PathSegment_Segment `protobuf_oneof:"segment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonKey_PathSegment) Reset() {
	*x = JsonKey_PathSegment{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonKey_PathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonKey_PathSegment) ProtoMessage() {}

func (x *JsonKey_PathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonKey_PathSegment.ProtoReflect.Descriptor instead.
func (*JsonKey_PathSegment) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP(), []int{3, 0}
}

func (x *JsonKey_PathSegment) GetSegment() isJsonKey_PathSegment_Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *JsonKey_PathSegment) GetKey() string {
	if x != nil {
		if x, ok := x.Segment.(*JsonKey_PathSegment_Key); ok {
			return x.Key
		}
	}
	return ""
}

type isJsonKey_PathSegment_Segment interface {
	isJsonKey_PathSegment_Segment()
}

type JsonKey_PathSegment_Key struct {
	// If specified, use the key to retrieve the value.
	// If the key is not found, the value defaults to empty string.
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

func (*JsonKey_PathSegment_Key) isJsonKey_PathSegment_Segment() {}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDesc = "" +
	"\n" +
	"Vgithub.com/solo-io/gloo/projects/gloo/api/v1/options/advanced_http/advanced_http.proto\x12!advancedhttp.options.gloo.solo.io\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17validate/validate.proto\"\xd3\x01\n" +
	"\x12ResponseAssertions\x12_\n" +
	"\x11response_matchers\x18\x01 \x03(\v22.advancedhttp.options.gloo.solo.io.ResponseMatcherR\x10responseMatchers\x12\\\n" +
	"\x0fno_match_health\x18\x02 \x01(\x0e24.advancedhttp.options.gloo.solo.io.HealthCheckResultR\rnoMatchHealth\"\xc3\x01\n" +
	"\x0fResponseMatcher\x12W\n" +
	"\x0eresponse_match\x18\x01 \x01(\v20.advancedhttp.options.gloo.solo.io.ResponseMatchR\rresponseMatch\x12W\n" +
	"\fmatch_health\x18\x02 \x01(\x0e24.advancedhttp.options.gloo.solo.io.HealthCheckResultR\vmatchHealth\"\xf1\x01\n" +
	"\rResponseMatch\x12E\n" +
	"\bjson_key\x18\x01 \x01(\v2*.advancedhttp.options.gloo.solo.io.JsonKeyR\ajsonKey\x121\n" +
	"\x15ignore_error_on_parse\x18\x02 \x01(\bR\x12ignoreErrorOnParse\x12\x18\n" +
	"\x06header\x18\x03 \x01(\tH\x00R\x06header\x12,\n" +
	"\x04body\x18\x04 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x04body\x12\x14\n" +
	"\x05regex\x18\x05 \x01(\tR\x05regexB\b\n" +
	"\x06source\"\x9b\x01\n" +
	"\aJsonKey\x12T\n" +
	"\x04path\x18\x02 \x03(\v26.advancedhttp.options.gloo.solo.io.JsonKey.PathSegmentB\b\xfaB\x05\x92\x01\x02\b\x01R\x04path\x1a:\n" +
	"\vPathSegment\x12\x1b\n" +
	"\x03key\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01H\x00R\x03keyB\x0e\n" +
	"\asegment\x12\x03\xf8B\x01*J\n" +
	"\x11HealthCheckResult\x12\v\n" +
	"\adefault\x10\x00\x12\v\n" +
	"\ahealthy\x10\x01\x12\f\n" +
	"\bdegraded\x10\x02\x12\r\n" +
	"\tunhealthy\x10\x03B\x94\x01\n" +
	":io.envoyproxy.envoy.config.health_checker.advanced_http.v2B\fAdvancedHttpP\x01ZFgithub.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/advanced_httpb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_goTypes = []any{
	(HealthCheckResult)(0),      // 0: advancedhttp.options.gloo.solo.io.HealthCheckResult
	(*ResponseAssertions)(nil),  // 1: advancedhttp.options.gloo.solo.io.ResponseAssertions
	(*ResponseMatcher)(nil),     // 2: advancedhttp.options.gloo.solo.io.ResponseMatcher
	(*ResponseMatch)(nil),       // 3: advancedhttp.options.gloo.solo.io.ResponseMatch
	(*JsonKey)(nil),             // 4: advancedhttp.options.gloo.solo.io.JsonKey
	(*JsonKey_PathSegment)(nil), // 5: advancedhttp.options.gloo.solo.io.JsonKey.PathSegment
	(*emptypb.Empty)(nil),       // 6: google.protobuf.Empty
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_depIdxs = []int32{
	2, // 0: advancedhttp.options.gloo.solo.io.ResponseAssertions.response_matchers:type_name -> advancedhttp.options.gloo.solo.io.ResponseMatcher
	0, // 1: advancedhttp.options.gloo.solo.io.ResponseAssertions.no_match_health:type_name -> advancedhttp.options.gloo.solo.io.HealthCheckResult
	3, // 2: advancedhttp.options.gloo.solo.io.ResponseMatcher.response_match:type_name -> advancedhttp.options.gloo.solo.io.ResponseMatch
	0, // 3: advancedhttp.options.gloo.solo.io.ResponseMatcher.match_health:type_name -> advancedhttp.options.gloo.solo.io.HealthCheckResult
	4, // 4: advancedhttp.options.gloo.solo.io.ResponseMatch.json_key:type_name -> advancedhttp.options.gloo.solo.io.JsonKey
	6, // 5: advancedhttp.options.gloo.solo.io.ResponseMatch.body:type_name -> google.protobuf.Empty
	5, // 6: advancedhttp.options.gloo.solo.io.JsonKey.path:type_name -> advancedhttp.options.gloo.solo.io.JsonKey.PathSegment
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto != nil {
		return
	}
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[2].OneofWrappers = []any{
		(*ResponseMatch_Header)(nil),
		(*ResponseMatch_Body)(nil),
	}
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes[4].OneofWrappers = []any{
		(*JsonKey_PathSegment_Key)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_advanced_http_advanced_http_proto_depIdxs = nil
}
