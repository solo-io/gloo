// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/local_ratelimit/local_ratelimit.proto

package local_ratelimit

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	_ "github.com/solo-io/solo-kit/pkg/api/external/envoy/api/v2/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configures the token bucket, used for rate limiting.
// Ref. https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/local_rate_limit_filter
type TokenBucket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum tokens that the bucket can hold. This is also the number of tokens that the bucket initially contains.
	// Must be greater than or equal to one.
	MaxTokens uint32 `protobuf:"varint,1,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	// The number of tokens added to the bucket during each fill interval. If not specified, defaults to a single token.
	// Must be greater than zero.
	TokensPerFill *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=tokens_per_fill,json=tokensPerFill,proto3" json:"tokens_per_fill,omitempty"`
	// The fill interval that tokens are added to the bucket. During each fill interval tokens_per_fill are added to the bucket.
	// The bucket will never contain more than max_tokens tokens.
	// The fill_interval must be >= 50ms and defaults to 1 second.
	FillInterval  *durationpb.Duration `protobuf:"bytes,3,opt,name=fill_interval,json=fillInterval,proto3" json:"fill_interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenBucket) Reset() {
	*x = TokenBucket{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBucket) ProtoMessage() {}

func (x *TokenBucket) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBucket.ProtoReflect.Descriptor instead.
func (*TokenBucket) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescGZIP(), []int{0}
}

func (x *TokenBucket) GetMaxTokens() uint32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *TokenBucket) GetTokensPerFill() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TokensPerFill
	}
	return nil
}

func (x *TokenBucket) GetFillInterval() *durationpb.Duration {
	if x != nil {
		return x.FillInterval
	}
	return nil
}

// The Local Rate Limit settings define the default local rate limit token bucket to apply as well as other configurations
type Settings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The token bucket configuration to use for rate limiting requests.
	// These options provide the ability to locally rate limit the connections in envoy. Each request processed by the filter consumes a single token.
	// If the token is available, the request will be allowed. If no tokens are available, the request will receive the configured rate limit status.
	// This default limit can be overridden in the vHost or route options.localRatelimit
	DefaultLimit *TokenBucket `protobuf:"bytes,1,opt,name=default_limit,json=defaultLimit,proto3" json:"default_limit,omitempty"`
	// Specifies the scope of the rate limiterâ€™s token bucket. If set to false, the token bucket is shared across all worker threads, thus the rate limits are applied per Envoy process.
	// If set to true, a token bucket is allocated for each connection, thus the rate limits are applied per connection thereby allowing one to rate limit requests on a per connection basis.
	// This setting applies to all token buckets in the vHost and route as well.
	// Defaults to false
	LocalRateLimitPerDownstreamConnection *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=local_rate_limit_per_downstream_connection,json=localRateLimitPerDownstreamConnection,proto3" json:"local_rate_limit_per_downstream_connection,omitempty"`
	// Set this to true to return Envoy's X-RateLimit headers to the downstream.
	// reference docs here: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/common/ratelimit/v3/ratelimit.proto#envoy-v3-api-enum-extensions-common-ratelimit-v3-xratelimitheadersrfcversion
	// This setting applies at the vHost and route local rate limit as well
	// Defaults to false
	EnableXRatelimitHeaders *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=enable_x_ratelimit_headers,json=enableXRatelimitHeaders,proto3" json:"enable_x_ratelimit_headers,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Settings) Reset() {
	*x = Settings{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescGZIP(), []int{1}
}

func (x *Settings) GetDefaultLimit() *TokenBucket {
	if x != nil {
		return x.DefaultLimit
	}
	return nil
}

func (x *Settings) GetLocalRateLimitPerDownstreamConnection() *wrapperspb.BoolValue {
	if x != nil {
		return x.LocalRateLimitPerDownstreamConnection
	}
	return nil
}

func (x *Settings) GetEnableXRatelimitHeaders() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableXRatelimitHeaders
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDesc = "" +
	"\n" +
	"Zgithub.com/solo-io/gloo/projects/gloo/api/v1/options/local_ratelimit/local_ratelimit.proto\x12$local_ratelimit.options.gloo.solo.io\x1a\x12extproto/ext.proto\x1aEgithub.com/solo-io/solo-kit/api/external/envoy/api/v2/core/base.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xb2\x01\n" +
	"\vTokenBucket\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\x01 \x01(\rR\tmaxTokens\x12D\n" +
	"\x0ftokens_per_fill\x18\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\rtokensPerFill\x12>\n" +
	"\rfill_interval\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\ffillInterval\"\xb2\x02\n" +
	"\bSettings\x12V\n" +
	"\rdefault_limit\x18\x01 \x01(\v21.local_ratelimit.options.gloo.solo.io.TokenBucketR\fdefaultLimit\x12u\n" +
	"*local_rate_limit_per_downstream_connection\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR%localRateLimitPerDownstreamConnection\x12W\n" +
	"\x1aenable_x_ratelimit_headers\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueR\x17enableXRatelimitHeadersBV\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01ZHgithub.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/local_ratelimitb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_goTypes = []any{
	(*TokenBucket)(nil),            // 0: local_ratelimit.options.gloo.solo.io.TokenBucket
	(*Settings)(nil),               // 1: local_ratelimit.options.gloo.solo.io.Settings
	(*wrapperspb.UInt32Value)(nil), // 2: google.protobuf.UInt32Value
	(*durationpb.Duration)(nil),    // 3: google.protobuf.Duration
	(*wrapperspb.BoolValue)(nil),   // 4: google.protobuf.BoolValue
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_depIdxs = []int32{
	2, // 0: local_ratelimit.options.gloo.solo.io.TokenBucket.tokens_per_fill:type_name -> google.protobuf.UInt32Value
	3, // 1: local_ratelimit.options.gloo.solo.io.TokenBucket.fill_interval:type_name -> google.protobuf.Duration
	0, // 2: local_ratelimit.options.gloo.solo.io.Settings.default_limit:type_name -> local_ratelimit.options.gloo.solo.io.TokenBucket
	4, // 3: local_ratelimit.options.gloo.solo.io.Settings.local_rate_limit_per_downstream_connection:type_name -> google.protobuf.BoolValue
	4, // 4: local_ratelimit.options.gloo.solo.io.Settings.enable_x_ratelimit_headers:type_name -> google.protobuf.BoolValue
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_local_ratelimit_local_ratelimit_proto_depIdxs = nil
}
