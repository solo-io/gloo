// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/graphql/graphql.proto

package graphql

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated: The GraphQL feature of Gloo Gateway will be removed in a future release.
// Only supported in enterprise with the GraphQL addon.
// This is the service spec describing GraphQL upstreams. This will usually be filled
// automatically via function discovery (if the upstream supports introspection).
// If your upstream service is a GraphQL service, use this service spec (an empty
// spec is fine).
type ServiceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Endpoint provides the endpoint information, and how to call the GraphQL Server.
	// This endpoint must be called via HTTP POST sending form data as mentioned in [the GraphQL Docs](https://graphql.org/learn/serving-over-http/#post-request).
	Endpoint      *ServiceSpec_Endpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceSpec) Reset() {
	*x = ServiceSpec{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec) ProtoMessage() {}

func (x *ServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec.ProtoReflect.Descriptor instead.
func (*ServiceSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceSpec) GetEndpoint() *ServiceSpec_Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

// Describes a GraphQL Endpoint information
type ServiceSpec_Endpoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The url for the graphql endpoint. Automation via Discovery only supports `http://<host>/graphql` ie: http://myurl.com/graphql
	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceSpec_Endpoint) Reset() {
	*x = ServiceSpec_Endpoint{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceSpec_Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec_Endpoint) ProtoMessage() {}

func (x *ServiceSpec_Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec_Endpoint.ProtoReflect.Descriptor instead.
func (*ServiceSpec_Endpoint) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServiceSpec_Endpoint) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDesc = "" +
	"\n" +
	"Jgithub.com/solo-io/gloo/projects/gloo/api/v1/options/graphql/graphql.proto\x12\x1cgraphql.options.gloo.solo.io\x1a\x12extproto/ext.proto\"{\n" +
	"\vServiceSpec\x12N\n" +
	"\bendpoint\x18\x01 \x01(\v22.graphql.options.gloo.solo.io.ServiceSpec.EndpointR\bendpoint\x1a\x1c\n" +
	"\bEndpoint\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03urlBN\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z@github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/graphqlb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_goTypes = []any{
	(*ServiceSpec)(nil),          // 0: graphql.options.gloo.solo.io.ServiceSpec
	(*ServiceSpec_Endpoint)(nil), // 1: graphql.options.gloo.solo.io.ServiceSpec.Endpoint
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_depIdxs = []int32{
	1, // 0: graphql.options.gloo.solo.io.ServiceSpec.endpoint:type_name -> graphql.options.gloo.solo.io.ServiceSpec.Endpoint
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_init() }
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_graphql_graphql_proto_depIdxs = nil
}
