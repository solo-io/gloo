// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/tap/tap.proto

package tap

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Tap filter: a filter that copies the contents of HTTP requests and responses
// to an external tap server. The full HTTP headers and bodies are reported in
// full to the configured address, and data can be reported using either over
// HTTP or GRPC.
type Tap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sinks to which tap data should be output. Currently, only a single sink
	// is supported.
	Sinks []*Sink `protobuf:"bytes,1,rep,name=sinks,proto3" json:"sinks,omitempty"`
	// For buffered tapping, the maximum amount of received body that will be buffered
	// prior to truncation. If truncation occurs, the truncated field will be set.
	// If not specified, the default is 1KiB.
	MaxBufferedRxBytes *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=max_buffered_rx_bytes,json=maxBufferedRxBytes,proto3" json:"max_buffered_rx_bytes,omitempty"`
	// For buffered tapping, the maximum amount of transmitted body that will be buffered
	// prior to truncation. If truncation occurs, the truncated field will be set.
	// If not specified, the default is 1KiB.
	MaxBufferedTxBytes *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=max_buffered_tx_bytes,json=maxBufferedTxBytes,proto3" json:"max_buffered_tx_bytes,omitempty"`
	// Indicates whether tap filter records the time stamp for request/response headers.
	// Request headers time stamp is stored after receiving request headers.
	// Response headers time stamp is stored after receiving response headers.
	RecordHeadersReceivedTime *wrapperspb.BoolValue `protobuf:"bytes,4,opt,name=record_headers_received_time,json=recordHeadersReceivedTime,proto3" json:"record_headers_received_time,omitempty"`
	// Indicates whether report downstream connection info
	RecordDownstreamConnection *wrapperspb.BoolValue `protobuf:"bytes,5,opt,name=record_downstream_connection,json=recordDownstreamConnection,proto3" json:"record_downstream_connection,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Tap) Reset() {
	*x = Tap{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tap) ProtoMessage() {}

func (x *Tap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tap.ProtoReflect.Descriptor instead.
func (*Tap) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescGZIP(), []int{0}
}

func (x *Tap) GetSinks() []*Sink {
	if x != nil {
		return x.Sinks
	}
	return nil
}

func (x *Tap) GetMaxBufferedRxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MaxBufferedRxBytes
	}
	return nil
}

func (x *Tap) GetMaxBufferedTxBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MaxBufferedTxBytes
	}
	return nil
}

func (x *Tap) GetRecordHeadersReceivedTime() *wrapperspb.BoolValue {
	if x != nil {
		return x.RecordHeadersReceivedTime
	}
	return nil
}

func (x *Tap) GetRecordDownstreamConnection() *wrapperspb.BoolValue {
	if x != nil {
		return x.RecordDownstreamConnection
	}
	return nil
}

type Sink struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the output sink to which tap data should be written
	//
	// Types that are valid to be assigned to SinkType:
	//
	//	*Sink_GrpcService
	//	*Sink_HttpService
	SinkType      isSink_SinkType `protobuf_oneof:"SinkType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sink) Reset() {
	*x = Sink{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sink) ProtoMessage() {}

func (x *Sink) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sink.ProtoReflect.Descriptor instead.
func (*Sink) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescGZIP(), []int{1}
}

func (x *Sink) GetSinkType() isSink_SinkType {
	if x != nil {
		return x.SinkType
	}
	return nil
}

func (x *Sink) GetGrpcService() *GrpcService {
	if x != nil {
		if x, ok := x.SinkType.(*Sink_GrpcService); ok {
			return x.GrpcService
		}
	}
	return nil
}

func (x *Sink) GetHttpService() *HttpService {
	if x != nil {
		if x, ok := x.SinkType.(*Sink_HttpService); ok {
			return x.HttpService
		}
	}
	return nil
}

type isSink_SinkType interface {
	isSink_SinkType()
}

type Sink_GrpcService struct {
	// Write tap data out to a GRPC service
	GrpcService *GrpcService `protobuf:"bytes,1,opt,name=grpc_service,json=grpcService,proto3,oneof"`
}

type Sink_HttpService struct {
	// Write tap data out to a HTTP service
	HttpService *HttpService `protobuf:"bytes,2,opt,name=http_service,json=httpService,proto3,oneof"`
}

func (*Sink_GrpcService) isSink_SinkType() {}

func (*Sink_HttpService) isSink_SinkType() {}

// A tap sink over a GRPC service
type GrpcService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Upstream reference to the tap server
	TapServer     *core.ResourceRef `protobuf:"bytes,1,opt,name=tap_server,json=tapServer,proto3" json:"tap_server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcService) Reset() {
	*x = GrpcService{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcService) ProtoMessage() {}

func (x *GrpcService) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcService.ProtoReflect.Descriptor instead.
func (*GrpcService) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescGZIP(), []int{2}
}

func (x *GrpcService) GetTapServer() *core.ResourceRef {
	if x != nil {
		return x.TapServer
	}
	return nil
}

// A tap sink over a HTTP service
type HttpService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Upstream reference to the tap server
	TapServer *core.ResourceRef `protobuf:"bytes,1,opt,name=tap_server,json=tapServer,proto3" json:"tap_server,omitempty"`
	// Connection timeout
	Timeout       *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpService) Reset() {
	*x = HttpService{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpService) ProtoMessage() {}

func (x *HttpService) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpService.ProtoReflect.Descriptor instead.
func (*HttpService) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescGZIP(), []int{3}
}

func (x *HttpService) GetTapServer() *core.ResourceRef {
	if x != nil {
		return x.TapServer
	}
	return nil
}

func (x *HttpService) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDesc = "" +
	"\n" +
	"Mgithub.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/tap/tap.proto\x12\x18tap.options.gloo.solo.io\x1a,github.com/solo-io/solo-kit/api/v1/ref.proto\x1a\x17validate/validate.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1egoogle/protobuf/duration.proto\"\xa4\x03\n" +
	"\x03Tap\x12@\n" +
	"\x05sinks\x18\x01 \x03(\v2\x1e.tap.options.gloo.solo.io.SinkB\n" +
	"\xfaB\a\x92\x01\x04\b\x01\x10\x01R\x05sinks\x12O\n" +
	"\x15max_buffered_rx_bytes\x18\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12maxBufferedRxBytes\x12O\n" +
	"\x15max_buffered_tx_bytes\x18\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12maxBufferedTxBytes\x12[\n" +
	"\x1crecord_headers_received_time\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueR\x19recordHeadersReceivedTime\x12\\\n" +
	"\x1crecord_downstream_connection\x18\x05 \x01(\v2\x1a.google.protobuf.BoolValueR\x1arecordDownstreamConnection\"\xaf\x01\n" +
	"\x04Sink\x12J\n" +
	"\fgrpc_service\x18\x01 \x01(\v2%.tap.options.gloo.solo.io.GrpcServiceH\x00R\vgrpcService\x12J\n" +
	"\fhttp_service\x18\x02 \x01(\v2%.tap.options.gloo.solo.io.HttpServiceH\x00R\vhttpServiceB\x0f\n" +
	"\bSinkType\x12\x03\xf8B\x01\"Q\n" +
	"\vGrpcService\x12B\n" +
	"\n" +
	"tap_server\x18\x01 \x01(\v2\x19.core.solo.io.ResourceRefB\b\xfaB\x05\x8a\x01\x02\x10\x01R\ttapServer\"\x90\x01\n" +
	"\vHttpService\x12B\n" +
	"\n" +
	"tap_server\x18\x01 \x01(\v2\x19.core.solo.io.ResourceRefB\b\xfaB\x05\x8a\x01\x02\x10\x01R\ttapServer\x12=\n" +
	"\atimeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationB\b\xfaB\x05\x8a\x01\x02\x10\x01R\atimeoutB>Z<github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/tapb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_goTypes = []any{
	(*Tap)(nil),                    // 0: tap.options.gloo.solo.io.Tap
	(*Sink)(nil),                   // 1: tap.options.gloo.solo.io.Sink
	(*GrpcService)(nil),            // 2: tap.options.gloo.solo.io.GrpcService
	(*HttpService)(nil),            // 3: tap.options.gloo.solo.io.HttpService
	(*wrapperspb.UInt32Value)(nil), // 4: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),   // 5: google.protobuf.BoolValue
	(*core.ResourceRef)(nil),       // 6: core.solo.io.ResourceRef
	(*durationpb.Duration)(nil),    // 7: google.protobuf.Duration
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_depIdxs = []int32{
	1,  // 0: tap.options.gloo.solo.io.Tap.sinks:type_name -> tap.options.gloo.solo.io.Sink
	4,  // 1: tap.options.gloo.solo.io.Tap.max_buffered_rx_bytes:type_name -> google.protobuf.UInt32Value
	4,  // 2: tap.options.gloo.solo.io.Tap.max_buffered_tx_bytes:type_name -> google.protobuf.UInt32Value
	5,  // 3: tap.options.gloo.solo.io.Tap.record_headers_received_time:type_name -> google.protobuf.BoolValue
	5,  // 4: tap.options.gloo.solo.io.Tap.record_downstream_connection:type_name -> google.protobuf.BoolValue
	2,  // 5: tap.options.gloo.solo.io.Sink.grpc_service:type_name -> tap.options.gloo.solo.io.GrpcService
	3,  // 6: tap.options.gloo.solo.io.Sink.http_service:type_name -> tap.options.gloo.solo.io.HttpService
	6,  // 7: tap.options.gloo.solo.io.GrpcService.tap_server:type_name -> core.solo.io.ResourceRef
	6,  // 8: tap.options.gloo.solo.io.HttpService.tap_server:type_name -> core.solo.io.ResourceRef
	7,  // 9: tap.options.gloo.solo.io.HttpService.timeout:type_name -> google.protobuf.Duration
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto != nil {
		return
	}
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes[1].OneofWrappers = []any{
		(*Sink_GrpcService)(nil),
		(*Sink_HttpService)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_enterprise_options_tap_tap_proto_depIdxs = nil
}
