// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/connection.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protocol "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/protocol"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Fine tune the settings for connections to an upstream
type ConnectionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum requests for a single upstream connection (unspecified or zero = no limit)
	MaxRequestsPerConnection uint32 `protobuf:"varint,1,opt,name=max_requests_per_connection,json=maxRequestsPerConnection,proto3" json:"max_requests_per_connection,omitempty"`
	// The timeout for new network connections to hosts in the cluster
	ConnectTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	// Configure OS-level tcp keepalive checks
	TcpKeepalive *ConnectionConfig_TcpKeepAlive `protobuf:"bytes,3,opt,name=tcp_keepalive,json=tcpKeepalive,proto3" json:"tcp_keepalive,omitempty"`
	// Soft limit on size of the clusterâ€™s connections read and write buffers. If unspecified, an implementation defined default is applied (1MiB).
	// For more info, see the [envoy docs](https://www.envoyproxy.io/docs/envoy/v1.14.1/api-v2/api/v2/cluster.proto#cluster)
	PerConnectionBufferLimitBytes *wrapperspb.UInt32Value `protobuf:"bytes,4,opt,name=per_connection_buffer_limit_bytes,json=perConnectionBufferLimitBytes,proto3" json:"per_connection_buffer_limit_bytes,omitempty"`
	// Additional options when handling HTTP requests upstream. These options will be applicable to
	// both HTTP1 and HTTP2 requests.
	CommonHttpProtocolOptions *protocol.HttpProtocolOptions `protobuf:"bytes,5,opt,name=common_http_protocol_options,json=commonHttpProtocolOptions,proto3" json:"common_http_protocol_options,omitempty"`
	// Additional Options when handling HTTP requests upstream. These options will be applicable only to HTTP1 requests.
	Http1ProtocolOptions *protocol.Http1ProtocolOptions `protobuf:"bytes,6,opt,name=http1_protocol_options,json=http1ProtocolOptions,proto3" json:"http1_protocol_options,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ConnectionConfig) Reset() {
	*x = ConnectionConfig{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionConfig) ProtoMessage() {}

func (x *ConnectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionConfig.ProtoReflect.Descriptor instead.
func (*ConnectionConfig) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionConfig) GetMaxRequestsPerConnection() uint32 {
	if x != nil {
		return x.MaxRequestsPerConnection
	}
	return 0
}

func (x *ConnectionConfig) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectTimeout
	}
	return nil
}

func (x *ConnectionConfig) GetTcpKeepalive() *ConnectionConfig_TcpKeepAlive {
	if x != nil {
		return x.TcpKeepalive
	}
	return nil
}

func (x *ConnectionConfig) GetPerConnectionBufferLimitBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.PerConnectionBufferLimitBytes
	}
	return nil
}

func (x *ConnectionConfig) GetCommonHttpProtocolOptions() *protocol.HttpProtocolOptions {
	if x != nil {
		return x.CommonHttpProtocolOptions
	}
	return nil
}

func (x *ConnectionConfig) GetHttp1ProtocolOptions() *protocol.Http1ProtocolOptions {
	if x != nil {
		return x.Http1ProtocolOptions
	}
	return nil
}

// If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
// see more info here: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#config-core-v3-tcpkeepalive
type ConnectionConfig_TcpKeepAlive struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of keepalive probes to send without response before deciding the connection is dead.
	KeepaliveProbes uint32 `protobuf:"varint,1,opt,name=keepalive_probes,json=keepaliveProbes,proto3" json:"keepalive_probes,omitempty"`
	// The number of seconds a connection needs to be idle before keep-alive probes start being sent. This is rounded up to the second.
	KeepaliveTime *durationpb.Duration `protobuf:"bytes,2,opt,name=keepalive_time,json=keepaliveTime,proto3" json:"keepalive_time,omitempty"`
	// The number of seconds between keep-alive probes. This is rounded up to the second.
	KeepaliveInterval *durationpb.Duration `protobuf:"bytes,3,opt,name=keepalive_interval,json=keepaliveInterval,proto3" json:"keepalive_interval,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConnectionConfig_TcpKeepAlive) Reset() {
	*x = ConnectionConfig_TcpKeepAlive{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionConfig_TcpKeepAlive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionConfig_TcpKeepAlive) ProtoMessage() {}

func (x *ConnectionConfig_TcpKeepAlive) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionConfig_TcpKeepAlive.ProtoReflect.Descriptor instead.
func (*ConnectionConfig_TcpKeepAlive) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ConnectionConfig_TcpKeepAlive) GetKeepaliveProbes() uint32 {
	if x != nil {
		return x.KeepaliveProbes
	}
	return 0
}

func (x *ConnectionConfig_TcpKeepAlive) GetKeepaliveTime() *durationpb.Duration {
	if x != nil {
		return x.KeepaliveTime
	}
	return nil
}

func (x *ConnectionConfig_TcpKeepAlive) GetKeepaliveInterval() *durationpb.Duration {
	if x != nil {
		return x.KeepaliveInterval
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDesc = "" +
	"\n" +
	"=github.com/solo-io/gloo/projects/gloo/api/v1/connection.proto\x12\fgloo.solo.io\x1aLgithub.com/solo-io/gloo/projects/gloo/api/v1/options/protocol/protocol.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x12extproto/ext.proto\"\xf7\x05\n" +
	"\x10ConnectionConfig\x12=\n" +
	"\x1bmax_requests_per_connection\x18\x01 \x01(\rR\x18maxRequestsPerConnection\x12B\n" +
	"\x0fconnect_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0econnectTimeout\x12P\n" +
	"\rtcp_keepalive\x18\x03 \x01(\v2+.gloo.solo.io.ConnectionConfig.TcpKeepAliveR\ftcpKeepalive\x12f\n" +
	"!per_connection_buffer_limit_bytes\x18\x04 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x1dperConnectionBufferLimitBytes\x12s\n" +
	"\x1ccommon_http_protocol_options\x18\x05 \x01(\v22.protocol.options.gloo.solo.io.HttpProtocolOptionsR\x19commonHttpProtocolOptions\x12i\n" +
	"\x16http1_protocol_options\x18\x06 \x01(\v23.protocol.options.gloo.solo.io.Http1ProtocolOptionsR\x14http1ProtocolOptions\x1a\xc5\x01\n" +
	"\fTcpKeepAlive\x12)\n" +
	"\x10keepalive_probes\x18\x01 \x01(\rR\x0fkeepaliveProbes\x12@\n" +
	"\x0ekeepalive_time\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\rkeepaliveTime\x12H\n" +
	"\x12keepalive_interval\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x11keepaliveIntervalB>\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z0github.com/solo-io/gloo/projects/gloo/pkg/api/v1b\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_goTypes = []any{
	(*ConnectionConfig)(nil),              // 0: gloo.solo.io.ConnectionConfig
	(*ConnectionConfig_TcpKeepAlive)(nil), // 1: gloo.solo.io.ConnectionConfig.TcpKeepAlive
	(*durationpb.Duration)(nil),           // 2: google.protobuf.Duration
	(*wrapperspb.UInt32Value)(nil),        // 3: google.protobuf.UInt32Value
	(*protocol.HttpProtocolOptions)(nil),  // 4: protocol.options.gloo.solo.io.HttpProtocolOptions
	(*protocol.Http1ProtocolOptions)(nil), // 5: protocol.options.gloo.solo.io.Http1ProtocolOptions
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_depIdxs = []int32{
	2, // 0: gloo.solo.io.ConnectionConfig.connect_timeout:type_name -> google.protobuf.Duration
	1, // 1: gloo.solo.io.ConnectionConfig.tcp_keepalive:type_name -> gloo.solo.io.ConnectionConfig.TcpKeepAlive
	3, // 2: gloo.solo.io.ConnectionConfig.per_connection_buffer_limit_bytes:type_name -> google.protobuf.UInt32Value
	4, // 3: gloo.solo.io.ConnectionConfig.common_http_protocol_options:type_name -> protocol.options.gloo.solo.io.HttpProtocolOptions
	5, // 4: gloo.solo.io.ConnectionConfig.http1_protocol_options:type_name -> protocol.options.gloo.solo.io.Http1ProtocolOptions
	2, // 5: gloo.solo.io.ConnectionConfig.TcpKeepAlive.keepalive_time:type_name -> google.protobuf.Duration
	2, // 6: gloo.solo.io.ConnectionConfig.TcpKeepAlive.keepalive_interval:type_name -> google.protobuf.Duration
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_init() }
func file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_connection_proto_depIdxs = nil
}
