// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/load_balancer.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LoadBalancerConfig is the settings for the load balancer used to send requests to the Upstream endpoints.
type LoadBalancerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configures envoy's panic threshold Percent between 0-100. Once the number of non health hosts
	// reaches this percentage, envoy disregards health information.
	// see more info [here](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/panic_threshold.html).
	HealthyPanicThreshold *wrapperspb.DoubleValue `protobuf:"bytes,1,opt,name=healthy_panic_threshold,json=healthyPanicThreshold,proto3" json:"healthy_panic_threshold,omitempty"`
	// This allows batch updates of endpoints health/weight/metadata that happen during a time window.
	// this help lower cpu usage when endpoint change rate is high. defaults to 1 second.
	// Set to 0 to disable and have changes applied immediately.
	UpdateMergeWindow *durationpb.Duration `protobuf:"bytes,2,opt,name=update_merge_window,json=updateMergeWindow,proto3" json:"update_merge_window,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*LoadBalancerConfig_RoundRobin_
	//	*LoadBalancerConfig_LeastRequest_
	//	*LoadBalancerConfig_Random_
	//	*LoadBalancerConfig_RingHash_
	//	*LoadBalancerConfig_Maglev_
	Type isLoadBalancerConfig_Type `protobuf_oneof:"type"`
	// Types that are valid to be assigned to LocalityConfig:
	//
	//	*LoadBalancerConfig_LocalityWeightedLbConfig
	LocalityConfig isLoadBalancerConfig_LocalityConfig `protobuf_oneof:"locality_config"`
	// Default: false, If set to true, the hostname will be used for hashing when using maglev for example, useful when using multiple host in the upstreams that resolve to the same IP.
	UseHostnameForHashing *wrapperspb.BoolValue `protobuf:"bytes,9,opt,name=use_hostname_for_hashing,json=useHostnameForHashing,proto3" json:"use_hostname_for_hashing,omitempty"`
	// If set to true, the load balancer will drain connections when the host set changes.
	//
	// Ring Hash or Maglev can be used to ensure that clients with the same key
	// are routed to the same upstream host.
	// Distruptions can cause new connections with the same key as existing connections
	// to be routed to different hosts.
	// Enabling this feature will cause the load balancer to drain existing connections
	// when the host set changes, ensuring that new connections with the same key are
	// consistently routed to the same host.
	// Connections are not immediately closed, but are allowed to drain.
	CloseConnectionsOnHostSetChange bool `protobuf:"varint,10,opt,name=close_connections_on_host_set_change,json=closeConnectionsOnHostSetChange,proto3" json:"close_connections_on_host_set_change,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *LoadBalancerConfig) Reset() {
	*x = LoadBalancerConfig{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig) ProtoMessage() {}

func (x *LoadBalancerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0}
}

func (x *LoadBalancerConfig) GetHealthyPanicThreshold() *wrapperspb.DoubleValue {
	if x != nil {
		return x.HealthyPanicThreshold
	}
	return nil
}

func (x *LoadBalancerConfig) GetUpdateMergeWindow() *durationpb.Duration {
	if x != nil {
		return x.UpdateMergeWindow
	}
	return nil
}

func (x *LoadBalancerConfig) GetType() isLoadBalancerConfig_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *LoadBalancerConfig) GetRoundRobin() *LoadBalancerConfig_RoundRobin {
	if x != nil {
		if x, ok := x.Type.(*LoadBalancerConfig_RoundRobin_); ok {
			return x.RoundRobin
		}
	}
	return nil
}

func (x *LoadBalancerConfig) GetLeastRequest() *LoadBalancerConfig_LeastRequest {
	if x != nil {
		if x, ok := x.Type.(*LoadBalancerConfig_LeastRequest_); ok {
			return x.LeastRequest
		}
	}
	return nil
}

func (x *LoadBalancerConfig) GetRandom() *LoadBalancerConfig_Random {
	if x != nil {
		if x, ok := x.Type.(*LoadBalancerConfig_Random_); ok {
			return x.Random
		}
	}
	return nil
}

func (x *LoadBalancerConfig) GetRingHash() *LoadBalancerConfig_RingHash {
	if x != nil {
		if x, ok := x.Type.(*LoadBalancerConfig_RingHash_); ok {
			return x.RingHash
		}
	}
	return nil
}

func (x *LoadBalancerConfig) GetMaglev() *LoadBalancerConfig_Maglev {
	if x != nil {
		if x, ok := x.Type.(*LoadBalancerConfig_Maglev_); ok {
			return x.Maglev
		}
	}
	return nil
}

func (x *LoadBalancerConfig) GetLocalityConfig() isLoadBalancerConfig_LocalityConfig {
	if x != nil {
		return x.LocalityConfig
	}
	return nil
}

func (x *LoadBalancerConfig) GetLocalityWeightedLbConfig() *emptypb.Empty {
	if x != nil {
		if x, ok := x.LocalityConfig.(*LoadBalancerConfig_LocalityWeightedLbConfig); ok {
			return x.LocalityWeightedLbConfig
		}
	}
	return nil
}

func (x *LoadBalancerConfig) GetUseHostnameForHashing() *wrapperspb.BoolValue {
	if x != nil {
		return x.UseHostnameForHashing
	}
	return nil
}

func (x *LoadBalancerConfig) GetCloseConnectionsOnHostSetChange() bool {
	if x != nil {
		return x.CloseConnectionsOnHostSetChange
	}
	return false
}

type isLoadBalancerConfig_Type interface {
	isLoadBalancerConfig_Type()
}

type LoadBalancerConfig_RoundRobin_ struct {
	// Use round robin for load balancing. Round robin is the default load balancing method.
	RoundRobin *LoadBalancerConfig_RoundRobin `protobuf:"bytes,3,opt,name=round_robin,json=roundRobin,proto3,oneof"`
}

type LoadBalancerConfig_LeastRequest_ struct {
	// Use least request for load balancing.
	LeastRequest *LoadBalancerConfig_LeastRequest `protobuf:"bytes,4,opt,name=least_request,json=leastRequest,proto3,oneof"`
}

type LoadBalancerConfig_Random_ struct {
	// Use random for load balancing.
	Random *LoadBalancerConfig_Random `protobuf:"bytes,5,opt,name=random,proto3,oneof"`
}

type LoadBalancerConfig_RingHash_ struct {
	// Use ring hash for load balancing.
	RingHash *LoadBalancerConfig_RingHash `protobuf:"bytes,6,opt,name=ring_hash,json=ringHash,proto3,oneof"`
}

type LoadBalancerConfig_Maglev_ struct {
	// Use maglev for load balancing.
	Maglev *LoadBalancerConfig_Maglev `protobuf:"bytes,7,opt,name=maglev,proto3,oneof"`
}

func (*LoadBalancerConfig_RoundRobin_) isLoadBalancerConfig_Type() {}

func (*LoadBalancerConfig_LeastRequest_) isLoadBalancerConfig_Type() {}

func (*LoadBalancerConfig_Random_) isLoadBalancerConfig_Type() {}

func (*LoadBalancerConfig_RingHash_) isLoadBalancerConfig_Type() {}

func (*LoadBalancerConfig_Maglev_) isLoadBalancerConfig_Type() {}

type isLoadBalancerConfig_LocalityConfig interface {
	isLoadBalancerConfig_LocalityConfig()
}

type LoadBalancerConfig_LocalityWeightedLbConfig struct {
	// (Enterprise Only)
	// https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight#locality-weighted-load-balancing
	// Locality weighted load balancing enables weighting assignments across different zones and geographical locations by using explicit weights.
	// This field is required to enable locality weighted load balancing
	LocalityWeightedLbConfig *emptypb.Empty `protobuf:"bytes,8,opt,name=locality_weighted_lb_config,json=localityWeightedLbConfig,proto3,oneof"`
}

func (*LoadBalancerConfig_LocalityWeightedLbConfig) isLoadBalancerConfig_LocalityConfig() {}

type LoadBalancerConfig_RoundRobin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration for slow start mode. If this configuration is not set, slow start will not be not enabled.
	SlowStartConfig *LoadBalancerConfig_SlowStartConfig `protobuf:"bytes,1,opt,name=slow_start_config,json=slowStartConfig,proto3" json:"slow_start_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LoadBalancerConfig_RoundRobin) Reset() {
	*x = LoadBalancerConfig_RoundRobin{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_RoundRobin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_RoundRobin) ProtoMessage() {}

func (x *LoadBalancerConfig_RoundRobin) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_RoundRobin.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_RoundRobin) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LoadBalancerConfig_RoundRobin) GetSlowStartConfig() *LoadBalancerConfig_SlowStartConfig {
	if x != nil {
		return x.SlowStartConfig
	}
	return nil
}

type LoadBalancerConfig_LeastRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How many choices to take into account. defaults to 2.
	ChoiceCount uint32 `protobuf:"varint,1,opt,name=choice_count,json=choiceCount,proto3" json:"choice_count,omitempty"`
	// Configuration for slow start mode. If this configuration is not set, slow start will not be not enabled.
	SlowStartConfig *LoadBalancerConfig_SlowStartConfig `protobuf:"bytes,2,opt,name=slow_start_config,json=slowStartConfig,proto3" json:"slow_start_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LoadBalancerConfig_LeastRequest) Reset() {
	*x = LoadBalancerConfig_LeastRequest{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_LeastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_LeastRequest) ProtoMessage() {}

func (x *LoadBalancerConfig_LeastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_LeastRequest.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_LeastRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 1}
}

func (x *LoadBalancerConfig_LeastRequest) GetChoiceCount() uint32 {
	if x != nil {
		return x.ChoiceCount
	}
	return 0
}

func (x *LoadBalancerConfig_LeastRequest) GetSlowStartConfig() *LoadBalancerConfig_SlowStartConfig {
	if x != nil {
		return x.SlowStartConfig
	}
	return nil
}

type LoadBalancerConfig_Random struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadBalancerConfig_Random) Reset() {
	*x = LoadBalancerConfig_Random{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_Random) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_Random) ProtoMessage() {}

func (x *LoadBalancerConfig_Random) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_Random.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_Random) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 2}
}

// Customizes the parameters used in the hashing algorithm to refine performance or resource usage.
type LoadBalancerConfig_RingHashConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum hash ring size. The larger the ring is (that is, the more hashes there are for each provided host)
	// the better the request distribution will reflect the desired weights. Defaults to 1024 entries, and limited
	// to 8M entries.
	MinimumRingSize uint64 `protobuf:"varint,1,opt,name=minimum_ring_size,json=minimumRingSize,proto3" json:"minimum_ring_size,omitempty"`
	// Maximum hash ring size. Defaults to 8M entries, and limited to 8M entries, but can be lowered to further
	// constrain resource use.
	MaximumRingSize uint64 `protobuf:"varint,2,opt,name=maximum_ring_size,json=maximumRingSize,proto3" json:"maximum_ring_size,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LoadBalancerConfig_RingHashConfig) Reset() {
	*x = LoadBalancerConfig_RingHashConfig{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_RingHashConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_RingHashConfig) ProtoMessage() {}

func (x *LoadBalancerConfig_RingHashConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_RingHashConfig.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_RingHashConfig) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 3}
}

func (x *LoadBalancerConfig_RingHashConfig) GetMinimumRingSize() uint64 {
	if x != nil {
		return x.MinimumRingSize
	}
	return 0
}

func (x *LoadBalancerConfig_RingHashConfig) GetMaximumRingSize() uint64 {
	if x != nil {
		return x.MaximumRingSize
	}
	return 0
}

type LoadBalancerConfig_RingHash struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional, customizes the parameters used in the hashing algorithm
	RingHashConfig *LoadBalancerConfig_RingHashConfig `protobuf:"bytes,1,opt,name=ring_hash_config,json=ringHashConfig,proto3" json:"ring_hash_config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LoadBalancerConfig_RingHash) Reset() {
	*x = LoadBalancerConfig_RingHash{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_RingHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_RingHash) ProtoMessage() {}

func (x *LoadBalancerConfig_RingHash) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_RingHash.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_RingHash) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 4}
}

func (x *LoadBalancerConfig_RingHash) GetRingHashConfig() *LoadBalancerConfig_RingHashConfig {
	if x != nil {
		return x.RingHashConfig
	}
	return nil
}

type LoadBalancerConfig_Maglev struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadBalancerConfig_Maglev) Reset() {
	*x = LoadBalancerConfig_Maglev{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_Maglev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_Maglev) ProtoMessage() {}

func (x *LoadBalancerConfig_Maglev) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_Maglev.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_Maglev) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 5}
}

type LoadBalancerConfig_SlowStartConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Represents the size of slow start window.
	// If set, the newly created host remains in slow start mode starting from its creation time
	// for the duration of slow start window.
	SlowStartWindow *durationpb.Duration `protobuf:"bytes,1,opt,name=slow_start_window,json=slowStartWindow,proto3" json:"slow_start_window,omitempty"`
	// This parameter controls the speed of traffic increase over the slow start window. Defaults to 1.0,
	// so that endpoint would get linearly increasing amount of traffic.
	// When increasing the value for this parameter, the speed of traffic ramp-up increases non-linearly.
	// The value of aggression parameter should be greater than 0.0.
	// By tuning the parameter, is possible to achieve polynomial or exponential shape of ramp-up curve.
	//
	// During slow start window, effective weight of an endpoint would be scaled with time factor and aggression:
	// `new_weight = weight * max(min_weight_percent, time_factor ^ (1 / aggression))`,
	// where `time_factor=(time_since_start_seconds / slow_start_time_seconds)`.
	//
	// As time progresses, more and more traffic would be sent to endpoint, which is in slow start window.
	// Once host exits slow start, time_factor and aggression no longer affect its weight.
	Aggression *wrapperspb.DoubleValue `protobuf:"bytes,2,opt,name=aggression,proto3" json:"aggression,omitempty"`
	// Configures the minimum percentage of origin weight that avoids too small new weight,
	// which may cause endpoints in slow start mode receive no traffic in slow start window.
	// If not specified, the default is 10%.
	MinWeightPercent *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=min_weight_percent,json=minWeightPercent,proto3" json:"min_weight_percent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LoadBalancerConfig_SlowStartConfig) Reset() {
	*x = LoadBalancerConfig_SlowStartConfig{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancerConfig_SlowStartConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancerConfig_SlowStartConfig) ProtoMessage() {}

func (x *LoadBalancerConfig_SlowStartConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancerConfig_SlowStartConfig.ProtoReflect.Descriptor instead.
func (*LoadBalancerConfig_SlowStartConfig) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP(), []int{0, 6}
}

func (x *LoadBalancerConfig_SlowStartConfig) GetSlowStartWindow() *durationpb.Duration {
	if x != nil {
		return x.SlowStartWindow
	}
	return nil
}

func (x *LoadBalancerConfig_SlowStartConfig) GetAggression() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Aggression
	}
	return nil
}

func (x *LoadBalancerConfig_SlowStartConfig) GetMinWeightPercent() *wrapperspb.DoubleValue {
	if x != nil {
		return x.MinWeightPercent
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDesc = "" +
	"\n" +
	"@github.com/solo-io/gloo/projects/gloo/api/v1/load_balancer.proto\x12\fgloo.solo.io\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x12extproto/ext.proto\"\x8b\f\n" +
	"\x12LoadBalancerConfig\x12T\n" +
	"\x17healthy_panic_threshold\x18\x01 \x01(\v2\x1c.google.protobuf.DoubleValueR\x15healthyPanicThreshold\x12I\n" +
	"\x13update_merge_window\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x11updateMergeWindow\x12N\n" +
	"\vround_robin\x18\x03 \x01(\v2+.gloo.solo.io.LoadBalancerConfig.RoundRobinH\x00R\n" +
	"roundRobin\x12T\n" +
	"\rleast_request\x18\x04 \x01(\v2-.gloo.solo.io.LoadBalancerConfig.LeastRequestH\x00R\fleastRequest\x12A\n" +
	"\x06random\x18\x05 \x01(\v2'.gloo.solo.io.LoadBalancerConfig.RandomH\x00R\x06random\x12H\n" +
	"\tring_hash\x18\x06 \x01(\v2).gloo.solo.io.LoadBalancerConfig.RingHashH\x00R\bringHash\x12A\n" +
	"\x06maglev\x18\a \x01(\v2'.gloo.solo.io.LoadBalancerConfig.MaglevH\x00R\x06maglev\x12W\n" +
	"\x1blocality_weighted_lb_config\x18\b \x01(\v2\x16.google.protobuf.EmptyH\x01R\x18localityWeightedLbConfig\x12S\n" +
	"\x18use_hostname_for_hashing\x18\t \x01(\v2\x1a.google.protobuf.BoolValueR\x15useHostnameForHashing\x12M\n" +
	"$close_connections_on_host_set_change\x18\n" +
	" \x01(\bR\x1fcloseConnectionsOnHostSetChange\x1aj\n" +
	"\n" +
	"RoundRobin\x12\\\n" +
	"\x11slow_start_config\x18\x01 \x01(\v20.gloo.solo.io.LoadBalancerConfig.SlowStartConfigR\x0fslowStartConfig\x1a\x8f\x01\n" +
	"\fLeastRequest\x12!\n" +
	"\fchoice_count\x18\x01 \x01(\rR\vchoiceCount\x12\\\n" +
	"\x11slow_start_config\x18\x02 \x01(\v20.gloo.solo.io.LoadBalancerConfig.SlowStartConfigR\x0fslowStartConfig\x1a\b\n" +
	"\x06Random\x1ah\n" +
	"\x0eRingHashConfig\x12*\n" +
	"\x11minimum_ring_size\x18\x01 \x01(\x04R\x0fminimumRingSize\x12*\n" +
	"\x11maximum_ring_size\x18\x02 \x01(\x04R\x0fmaximumRingSize\x1ae\n" +
	"\bRingHash\x12Y\n" +
	"\x10ring_hash_config\x18\x01 \x01(\v2/.gloo.solo.io.LoadBalancerConfig.RingHashConfigR\x0eringHashConfig\x1a\b\n" +
	"\x06Maglev\x1a\xe2\x01\n" +
	"\x0fSlowStartConfig\x12E\n" +
	"\x11slow_start_window\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0fslowStartWindow\x12<\n" +
	"\n" +
	"aggression\x18\x02 \x01(\v2\x1c.google.protobuf.DoubleValueR\n" +
	"aggression\x12J\n" +
	"\x12min_weight_percent\x18\x03 \x01(\v2\x1c.google.protobuf.DoubleValueR\x10minWeightPercentB\x06\n" +
	"\x04typeB\x11\n" +
	"\x0flocality_configB>\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z0github.com/solo-io/gloo/projects/gloo/pkg/api/v1b\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_goTypes = []any{
	(*LoadBalancerConfig)(nil),                 // 0: gloo.solo.io.LoadBalancerConfig
	(*LoadBalancerConfig_RoundRobin)(nil),      // 1: gloo.solo.io.LoadBalancerConfig.RoundRobin
	(*LoadBalancerConfig_LeastRequest)(nil),    // 2: gloo.solo.io.LoadBalancerConfig.LeastRequest
	(*LoadBalancerConfig_Random)(nil),          // 3: gloo.solo.io.LoadBalancerConfig.Random
	(*LoadBalancerConfig_RingHashConfig)(nil),  // 4: gloo.solo.io.LoadBalancerConfig.RingHashConfig
	(*LoadBalancerConfig_RingHash)(nil),        // 5: gloo.solo.io.LoadBalancerConfig.RingHash
	(*LoadBalancerConfig_Maglev)(nil),          // 6: gloo.solo.io.LoadBalancerConfig.Maglev
	(*LoadBalancerConfig_SlowStartConfig)(nil), // 7: gloo.solo.io.LoadBalancerConfig.SlowStartConfig
	(*wrapperspb.DoubleValue)(nil),             // 8: google.protobuf.DoubleValue
	(*durationpb.Duration)(nil),                // 9: google.protobuf.Duration
	(*emptypb.Empty)(nil),                      // 10: google.protobuf.Empty
	(*wrapperspb.BoolValue)(nil),               // 11: google.protobuf.BoolValue
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_depIdxs = []int32{
	8,  // 0: gloo.solo.io.LoadBalancerConfig.healthy_panic_threshold:type_name -> google.protobuf.DoubleValue
	9,  // 1: gloo.solo.io.LoadBalancerConfig.update_merge_window:type_name -> google.protobuf.Duration
	1,  // 2: gloo.solo.io.LoadBalancerConfig.round_robin:type_name -> gloo.solo.io.LoadBalancerConfig.RoundRobin
	2,  // 3: gloo.solo.io.LoadBalancerConfig.least_request:type_name -> gloo.solo.io.LoadBalancerConfig.LeastRequest
	3,  // 4: gloo.solo.io.LoadBalancerConfig.random:type_name -> gloo.solo.io.LoadBalancerConfig.Random
	5,  // 5: gloo.solo.io.LoadBalancerConfig.ring_hash:type_name -> gloo.solo.io.LoadBalancerConfig.RingHash
	6,  // 6: gloo.solo.io.LoadBalancerConfig.maglev:type_name -> gloo.solo.io.LoadBalancerConfig.Maglev
	10, // 7: gloo.solo.io.LoadBalancerConfig.locality_weighted_lb_config:type_name -> google.protobuf.Empty
	11, // 8: gloo.solo.io.LoadBalancerConfig.use_hostname_for_hashing:type_name -> google.protobuf.BoolValue
	7,  // 9: gloo.solo.io.LoadBalancerConfig.RoundRobin.slow_start_config:type_name -> gloo.solo.io.LoadBalancerConfig.SlowStartConfig
	7,  // 10: gloo.solo.io.LoadBalancerConfig.LeastRequest.slow_start_config:type_name -> gloo.solo.io.LoadBalancerConfig.SlowStartConfig
	4,  // 11: gloo.solo.io.LoadBalancerConfig.RingHash.ring_hash_config:type_name -> gloo.solo.io.LoadBalancerConfig.RingHashConfig
	9,  // 12: gloo.solo.io.LoadBalancerConfig.SlowStartConfig.slow_start_window:type_name -> google.protobuf.Duration
	8,  // 13: gloo.solo.io.LoadBalancerConfig.SlowStartConfig.aggression:type_name -> google.protobuf.DoubleValue
	8,  // 14: gloo.solo.io.LoadBalancerConfig.SlowStartConfig.min_weight_percent:type_name -> google.protobuf.DoubleValue
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_init() }
func file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto != nil {
		return
	}
	file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes[0].OneofWrappers = []any{
		(*LoadBalancerConfig_RoundRobin_)(nil),
		(*LoadBalancerConfig_LeastRequest_)(nil),
		(*LoadBalancerConfig_Random_)(nil),
		(*LoadBalancerConfig_RingHash_)(nil),
		(*LoadBalancerConfig_Maglev_)(nil),
		(*LoadBalancerConfig_LocalityWeightedLbConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_load_balancer_proto_depIdxs = nil
}
