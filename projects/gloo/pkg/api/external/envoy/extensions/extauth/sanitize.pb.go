// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/extauth/sanitize.proto

package extauth

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sanitize struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	HeadersToRemove []string               `protobuf:"bytes,1,rep,name=headers_to_remove,json=headersToRemove,proto3" json:"headers_to_remove,omitempty"`
	// The name of the custom ext auth server
	// This is only set in the case where multiple auth servers exist.
	CustomAuthServerName string `protobuf:"bytes,2,opt,name=custom_auth_server_name,json=customAuthServerName,proto3" json:"custom_auth_server_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Sanitize) Reset() {
	*x = Sanitize{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sanitize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sanitize) ProtoMessage() {}

func (x *Sanitize) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sanitize.ProtoReflect.Descriptor instead.
func (*Sanitize) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescGZIP(), []int{0}
}

func (x *Sanitize) GetHeadersToRemove() []string {
	if x != nil {
		return x.HeadersToRemove
	}
	return nil
}

func (x *Sanitize) GetCustomAuthServerName() string {
	if x != nil {
		return x.CustomAuthServerName
	}
	return ""
}

type SanitizePerRoute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the custom ext auth server
	// This is only set in the case where multiple auth servers exist.
	CustomAuthServerName string `protobuf:"bytes,1,opt,name=custom_auth_server_name,json=customAuthServerName,proto3" json:"custom_auth_server_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SanitizePerRoute) Reset() {
	*x = SanitizePerRoute{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizePerRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizePerRoute) ProtoMessage() {}

func (x *SanitizePerRoute) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizePerRoute.ProtoReflect.Descriptor instead.
func (*SanitizePerRoute) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescGZIP(), []int{1}
}

func (x *SanitizePerRoute) GetCustomAuthServerName() string {
	if x != nil {
		return x.CustomAuthServerName
	}
	return ""
}

var File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDesc = "" +
	"\n" +
	"Zgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/extauth/sanitize.proto\x12$envoy.config.filter.http.sanitize.v2\"m\n" +
	"\bSanitize\x12*\n" +
	"\x11headers_to_remove\x18\x01 \x03(\tR\x0fheadersToRemove\x125\n" +
	"\x17custom_auth_server_name\x18\x02 \x01(\tR\x14customAuthServerName\"I\n" +
	"\x10SanitizePerRoute\x125\n" +
	"\x17custom_auth_server_name\x18\x01 \x01(\tR\x14customAuthServerNameBQZOgithub.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/extensions/extauthb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_goTypes = []any{
	(*Sanitize)(nil),         // 0: envoy.config.filter.http.sanitize.v2.Sanitize
	(*SanitizePerRoute)(nil), // 1: envoy.config.filter.http.sanitize.v2.SanitizePerRoute
}
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_extauth_sanitize_proto_depIdxs = nil
}
