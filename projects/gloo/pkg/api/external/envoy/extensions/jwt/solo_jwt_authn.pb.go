// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/jwt/solo_jwt_authn.proto

package jwt

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v3 "github.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/extensions/filters/http/jwt_authn/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JwtWithStage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The JwtAuthentication config for this filter.
	JwtAuthn *v3.JwtAuthentication `protobuf:"bytes,1,opt,name=jwt_authn,json=jwtAuthn,proto3" json:"jwt_authn,omitempty"`
	// Only SoloJwtAuthnPerRoute.JwtAuthnPerRoute with matching stage will be
	// used with this filter
	Stage         uint32 `protobuf:"varint,2,opt,name=stage,proto3" json:"stage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtWithStage) Reset() {
	*x = JwtWithStage{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtWithStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtWithStage) ProtoMessage() {}

func (x *JwtWithStage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtWithStage.ProtoReflect.Descriptor instead.
func (*JwtWithStage) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescGZIP(), []int{0}
}

func (x *JwtWithStage) GetJwtAuthn() *v3.JwtAuthentication {
	if x != nil {
		return x.JwtAuthn
	}
	return nil
}

func (x *JwtWithStage) GetStage() uint32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

type SoloJwtAuthnPerRoute struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Requirement string                 `protobuf:"bytes,1,opt,name=requirement,proto3" json:"requirement,omitempty"`
	// Copy the claims from the payload field is the key.
	// non-existant fields are ignored.
	ClaimsToHeaders map[string]*SoloJwtAuthnPerRoute_ClaimToHeaders `protobuf:"bytes,2,rep,name=claims_to_headers,json=claimsToHeaders,proto3" json:"claims_to_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// clear the route cache if claims were added to the header
	ClearRouteCache bool `protobuf:"varint,3,opt,name=clear_route_cache,json=clearRouteCache,proto3" json:"clear_route_cache,omitempty"`
	// To easly integrate with other filters, this will copy the payload to this
	// name in the dynamic metadata. The payload will only be copied if one
	// payload is present (i.e. or match)
	PayloadInMetadata string `protobuf:"bytes,4,opt,name=payload_in_metadata,json=payloadInMetadata,proto3" json:"payload_in_metadata,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SoloJwtAuthnPerRoute) Reset() {
	*x = SoloJwtAuthnPerRoute{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoloJwtAuthnPerRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoloJwtAuthnPerRoute) ProtoMessage() {}

func (x *SoloJwtAuthnPerRoute) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoloJwtAuthnPerRoute.ProtoReflect.Descriptor instead.
func (*SoloJwtAuthnPerRoute) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescGZIP(), []int{1}
}

func (x *SoloJwtAuthnPerRoute) GetRequirement() string {
	if x != nil {
		return x.Requirement
	}
	return ""
}

func (x *SoloJwtAuthnPerRoute) GetClaimsToHeaders() map[string]*SoloJwtAuthnPerRoute_ClaimToHeaders {
	if x != nil {
		return x.ClaimsToHeaders
	}
	return nil
}

func (x *SoloJwtAuthnPerRoute) GetClearRouteCache() bool {
	if x != nil {
		return x.ClearRouteCache
	}
	return false
}

func (x *SoloJwtAuthnPerRoute) GetPayloadInMetadata() string {
	if x != nil {
		return x.PayloadInMetadata
	}
	return ""
}

type StagedJwtAuthnPerRoute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map from stage number to jwt config
	// This jwt config will only be processed by filters with the same stage number.
	JwtConfigs    map[uint32]*SoloJwtAuthnPerRoute `protobuf:"bytes,5,rep,name=jwt_configs,json=jwtConfigs,proto3" json:"jwt_configs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StagedJwtAuthnPerRoute) Reset() {
	*x = StagedJwtAuthnPerRoute{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StagedJwtAuthnPerRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StagedJwtAuthnPerRoute) ProtoMessage() {}

func (x *StagedJwtAuthnPerRoute) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StagedJwtAuthnPerRoute.ProtoReflect.Descriptor instead.
func (*StagedJwtAuthnPerRoute) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescGZIP(), []int{2}
}

func (x *StagedJwtAuthnPerRoute) GetJwtConfigs() map[uint32]*SoloJwtAuthnPerRoute {
	if x != nil {
		return x.JwtConfigs
	}
	return nil
}

// If this is specified, one of the claims will be copied to a header
// and the route cache will be cleared.
type SoloJwtAuthnPerRoute_ClaimToHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Claim         string                 `protobuf:"bytes,1,opt,name=claim,proto3" json:"claim,omitempty"`
	Header        string                 `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Append        bool                   `protobuf:"varint,3,opt,name=append,proto3" json:"append,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeader) Reset() {
	*x = SoloJwtAuthnPerRoute_ClaimToHeader{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoloJwtAuthnPerRoute_ClaimToHeader) ProtoMessage() {}

func (x *SoloJwtAuthnPerRoute_ClaimToHeader) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoloJwtAuthnPerRoute_ClaimToHeader.ProtoReflect.Descriptor instead.
func (*SoloJwtAuthnPerRoute_ClaimToHeader) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeader) GetClaim() string {
	if x != nil {
		return x.Claim
	}
	return ""
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeader) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeader) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

type SoloJwtAuthnPerRoute_ClaimToHeaders struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Claims        []*SoloJwtAuthnPerRoute_ClaimToHeader `protobuf:"bytes,1,rep,name=claims,proto3" json:"claims,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeaders) Reset() {
	*x = SoloJwtAuthnPerRoute_ClaimToHeaders{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoloJwtAuthnPerRoute_ClaimToHeaders) ProtoMessage() {}

func (x *SoloJwtAuthnPerRoute_ClaimToHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoloJwtAuthnPerRoute_ClaimToHeaders.ProtoReflect.Descriptor instead.
func (*SoloJwtAuthnPerRoute_ClaimToHeaders) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SoloJwtAuthnPerRoute_ClaimToHeaders) GetClaims() []*SoloJwtAuthnPerRoute_ClaimToHeader {
	if x != nil {
		return x.Claims
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDesc = "" +
	"\n" +
	"\\github.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/jwt/solo_jwt_authn.proto\x12*envoy.config.filter.http.solo_jwt_authn.v2\x1a\x17validate/validate.proto\x1ajgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/filters/http/jwt_authn/v3/config.proto\"\x91\x01\n" +
	"\fJwtWithStage\x12b\n" +
	"\tjwt_authn\x18\x01 \x01(\v2E.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthenticationR\bjwtAuthn\x12\x1d\n" +
	"\x05stage\x18\x02 \x01(\rB\a\xfaB\x04*\x02\x18\n" +
	"R\x05stage\"\x9a\x05\n" +
	"\x14SoloJwtAuthnPerRoute\x12)\n" +
	"\vrequirement\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\vrequirement\x12\x81\x01\n" +
	"\x11claims_to_headers\x18\x02 \x03(\v2U.envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimsToHeadersEntryR\x0fclaimsToHeaders\x12*\n" +
	"\x11clear_route_cache\x18\x03 \x01(\bR\x0fclearRouteCache\x12.\n" +
	"\x13payload_in_metadata\x18\x04 \x01(\tR\x11payloadInMetadata\x1ag\n" +
	"\rClaimToHeader\x12\x1d\n" +
	"\x05claim\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\x05claim\x12\x1f\n" +
	"\x06header\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\x06header\x12\x16\n" +
	"\x06append\x18\x03 \x01(\bR\x06append\x1ax\n" +
	"\x0eClaimToHeaders\x12f\n" +
	"\x06claims\x18\x01 \x03(\v2N.envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeaderR\x06claims\x1a\x93\x01\n" +
	"\x14ClaimsToHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12e\n" +
	"\x05value\x18\x02 \x01(\v2O.envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeadersR\x05value:\x028\x01\"\x8e\x02\n" +
	"\x16StagedJwtAuthnPerRoute\x12s\n" +
	"\vjwt_configs\x18\x05 \x03(\v2R.envoy.config.filter.http.solo_jwt_authn.v2.StagedJwtAuthnPerRoute.JwtConfigsEntryR\n" +
	"jwtConfigs\x1a\x7f\n" +
	"\x0fJwtConfigsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12V\n" +
	"\x05value\x18\x02 \x01(\v2@.envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRouteR\x05value:\x028\x01B\x9c\x01\n" +
	"8io.envoyproxy.envoy.config.filter.http.solo_jwt_authn.v2B\x11SoloJwtAuthnProtoP\x01ZKgithub.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/extensions/jwtb\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_goTypes = []any{
	(*JwtWithStage)(nil),                        // 0: envoy.config.filter.http.solo_jwt_authn.v2.JwtWithStage
	(*SoloJwtAuthnPerRoute)(nil),                // 1: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute
	(*StagedJwtAuthnPerRoute)(nil),              // 2: envoy.config.filter.http.solo_jwt_authn.v2.StagedJwtAuthnPerRoute
	(*SoloJwtAuthnPerRoute_ClaimToHeader)(nil),  // 3: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeader
	(*SoloJwtAuthnPerRoute_ClaimToHeaders)(nil), // 4: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeaders
	nil,                          // 5: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimsToHeadersEntry
	nil,                          // 6: envoy.config.filter.http.solo_jwt_authn.v2.StagedJwtAuthnPerRoute.JwtConfigsEntry
	(*v3.JwtAuthentication)(nil), // 7: solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
}
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_depIdxs = []int32{
	7, // 0: envoy.config.filter.http.solo_jwt_authn.v2.JwtWithStage.jwt_authn:type_name -> solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
	5, // 1: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.claims_to_headers:type_name -> envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimsToHeadersEntry
	6, // 2: envoy.config.filter.http.solo_jwt_authn.v2.StagedJwtAuthnPerRoute.jwt_configs:type_name -> envoy.config.filter.http.solo_jwt_authn.v2.StagedJwtAuthnPerRoute.JwtConfigsEntry
	3, // 3: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeaders.claims:type_name -> envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeader
	4, // 4: envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimsToHeadersEntry.value:type_name -> envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute.ClaimToHeaders
	1, // 5: envoy.config.filter.http.solo_jwt_authn.v2.StagedJwtAuthnPerRoute.JwtConfigsEntry.value:type_name -> envoy.config.filter.http.solo_jwt_authn.v2.SoloJwtAuthnPerRoute
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_extensions_jwt_solo_jwt_authn_proto_depIdxs = nil
}
