// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/matching/custom_matchers/server_name/v3/server_name_matcher.proto

package v3

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v3 "github.com/cncf/xds/go/xds/type/matcher/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Matches a specific server name provided in the client request against a set server names configured for the matcher to handle, with possible prefix wildcard.
type ServerNameMatcher struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Match server names. Order doesn't matter, the most specific server name is matched.
	ServerNameMatchers []*ServerNameMatcher_ServerNameSetMatcher `protobuf:"bytes,1,rep,name=server_name_matchers,json=serverNameMatchers,proto3" json:"server_name_matchers,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ServerNameMatcher) Reset() {
	*x = ServerNameMatcher{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerNameMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameMatcher) ProtoMessage() {}

func (x *ServerNameMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameMatcher.ProtoReflect.Descriptor instead.
func (*ServerNameMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescGZIP(), []int{0}
}

func (x *ServerNameMatcher) GetServerNameMatchers() []*ServerNameMatcher_ServerNameSetMatcher {
	if x != nil {
		return x.ServerNameMatchers
	}
	return nil
}

// Specifies a list of server names and a match action.
type ServerNameMatcher_ServerNameSetMatcher struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A non-empty set of server names.
	// Server name can start with a wildcard prefix, e.g. "*.example.com".
	ServerNames []string `protobuf:"bytes,1,rep,name=server_names,json=serverNames,proto3" json:"server_names,omitempty"`
	// Match action to apply when the input matches the server name.
	OnMatch       *v3.Matcher_OnMatch `protobuf:"bytes,2,opt,name=on_match,json=onMatch,proto3" json:"on_match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerNameMatcher_ServerNameSetMatcher) Reset() {
	*x = ServerNameMatcher_ServerNameSetMatcher{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerNameMatcher_ServerNameSetMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameMatcher_ServerNameSetMatcher) ProtoMessage() {}

func (x *ServerNameMatcher_ServerNameSetMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameMatcher_ServerNameSetMatcher.ProtoReflect.Descriptor instead.
func (*ServerNameMatcher_ServerNameSetMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServerNameMatcher_ServerNameSetMatcher) GetServerNames() []string {
	if x != nil {
		return x.ServerNames
	}
	return nil
}

func (x *ServerNameMatcher_ServerNameSetMatcher) GetOnMatch() *v3.Matcher_OnMatch {
	if x != nil {
		return x.OnMatch
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDesc = "" +
	"\n" +
	"\x81\x01github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/matching/custom_matchers/server_name/v3/server_name_matcher.proto\x124envoy.config.matching.custom_matchers.server_name.v3\x1a\x17validate/validate.proto\x1a!xds/type/matcher/v3/matcher.proto\x1a\x12extproto/ext.proto\"\xab\x02\n" +
	"\x11ServerNameMatcher\x12\x8e\x01\n" +
	"\x14server_name_matchers\x18\x01 \x03(\v2\\.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcherR\x12serverNameMatchers\x1a\x84\x01\n" +
	"\x14ServerNameSetMatcher\x12+\n" +
	"\fserver_names\x18\x01 \x03(\tB\b\xfaB\x05\x92\x01\x02\b\x01R\vserverNames\x12?\n" +
	"\bon_match\x18\x02 \x01(\v2$.xds.type.matcher.v3.Matcher.OnMatchR\aonMatchB\xd0\x01\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01\n" +
	";com.github.xds.type.matching.custom_matchers.server_name.v3B\x16ServerNameMatcherProtoP\x01Zkgithub.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/config/matching/custom_matchers/server_name/v3b\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_goTypes = []any{
	(*ServerNameMatcher)(nil),                      // 0: envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher
	(*ServerNameMatcher_ServerNameSetMatcher)(nil), // 1: envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher
	(*v3.Matcher_OnMatch)(nil),                     // 2: xds.type.matcher.v3.Matcher.OnMatch
}
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_depIdxs = []int32{
	1, // 0: envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.server_name_matchers:type_name -> envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher
	2, // 1: envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.on_match:type_name -> xds.type.matcher.v3.Matcher.OnMatch
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_matching_custom_matchers_server_name_v3_server_name_matcher_proto_depIdxs = nil
}
