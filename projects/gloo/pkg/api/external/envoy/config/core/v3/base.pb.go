// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/base.proto

package v3

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v3 "github.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/type/v3"
	_ "github.com/solo-io/gloo/projects/gloo/pkg/api/external/udpa/annotations"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envoy supports :ref:`upstream priority routing
// <arch_overview_http_routing_priority>` both at the route and the virtual
// cluster level. The current priority implementation uses different connection
// pool and circuit breaking settings for each priority level. This means that
// even for HTTP/2 requests, two physical connections will be used to an
// upstream host. In the future Envoy will likely support true HTTP/2 priority
// over a single upstream connection.
type RoutingPriority int32

const (
	RoutingPriority_DEFAULT RoutingPriority = 0
	RoutingPriority_HIGH    RoutingPriority = 1
)

// Enum value maps for RoutingPriority.
var (
	RoutingPriority_name = map[int32]string{
		0: "DEFAULT",
		1: "HIGH",
	}
	RoutingPriority_value = map[string]int32{
		"DEFAULT": 0,
		"HIGH":    1,
	}
)

func (x RoutingPriority) Enum() *RoutingPriority {
	p := new(RoutingPriority)
	*p = x
	return p
}

func (x RoutingPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoutingPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes[0].Descriptor()
}

func (RoutingPriority) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes[0]
}

func (x RoutingPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoutingPriority.Descriptor instead.
func (RoutingPriority) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{0}
}

// HTTP request method.
type RequestMethod int32

const (
	RequestMethod_METHOD_UNSPECIFIED RequestMethod = 0
	RequestMethod_GET                RequestMethod = 1
	RequestMethod_HEAD               RequestMethod = 2
	RequestMethod_POST               RequestMethod = 3
	RequestMethod_PUT                RequestMethod = 4
	RequestMethod_DELETE             RequestMethod = 5
	RequestMethod_CONNECT            RequestMethod = 6
	RequestMethod_OPTIONS            RequestMethod = 7
	RequestMethod_TRACE              RequestMethod = 8
	RequestMethod_PATCH              RequestMethod = 9
)

// Enum value maps for RequestMethod.
var (
	RequestMethod_name = map[int32]string{
		0: "METHOD_UNSPECIFIED",
		1: "GET",
		2: "HEAD",
		3: "POST",
		4: "PUT",
		5: "DELETE",
		6: "CONNECT",
		7: "OPTIONS",
		8: "TRACE",
		9: "PATCH",
	}
	RequestMethod_value = map[string]int32{
		"METHOD_UNSPECIFIED": 0,
		"GET":                1,
		"HEAD":               2,
		"POST":               3,
		"PUT":                4,
		"DELETE":             5,
		"CONNECT":            6,
		"OPTIONS":            7,
		"TRACE":              8,
		"PATCH":              9,
	}
)

func (x RequestMethod) Enum() *RequestMethod {
	p := new(RequestMethod)
	*p = x
	return p
}

func (x RequestMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes[1].Descriptor()
}

func (RequestMethod) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes[1]
}

func (x RequestMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestMethod.Descriptor instead.
func (RequestMethod) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{1}
}

// Identifies the direction of the traffic relative to the local Envoy.
type TrafficDirection int32

const (
	// Default option is unspecified.
	TrafficDirection_UNSPECIFIED TrafficDirection = 0
	// The transport is used for incoming traffic.
	TrafficDirection_INBOUND TrafficDirection = 1
	// The transport is used for outgoing traffic.
	TrafficDirection_OUTBOUND TrafficDirection = 2
)

// Enum value maps for TrafficDirection.
var (
	TrafficDirection_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INBOUND",
		2: "OUTBOUND",
	}
	TrafficDirection_value = map[string]int32{
		"UNSPECIFIED": 0,
		"INBOUND":     1,
		"OUTBOUND":    2,
	}
)

func (x TrafficDirection) Enum() *TrafficDirection {
	p := new(TrafficDirection)
	*p = x
	return p
}

func (x TrafficDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrafficDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes[2].Descriptor()
}

func (TrafficDirection) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes[2]
}

func (x TrafficDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrafficDirection.Descriptor instead.
func (TrafficDirection) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{2}
}

// Identifies location of where either Envoy runs or where upstream hosts run.
type Locality struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Region this zone belongs to.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Defines the local service zone where Envoy is running. Though optional, it
	// should be set if discovery service routing is used and the discovery
	// service exposes zone data,
	// either in this message or via `--service-zone`. The meaning of zone
	// is context dependent, e.g. [Availability Zone (AZ)](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html)
	// on AWS, [Zone](https://cloud.google.com/compute/docs/regions-zones/) on
	// GCP, etc.
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	// When used for locality of upstream hosts, this field further splits zone
	// into smaller chunks of sub-zones so they can be load balanced
	// independently.
	SubZone       string `protobuf:"bytes,3,opt,name=sub_zone,json=subZone,proto3" json:"sub_zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Locality) Reset() {
	*x = Locality{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Locality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Locality) ProtoMessage() {}

func (x *Locality) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Locality.ProtoReflect.Descriptor instead.
func (*Locality) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{0}
}

func (x *Locality) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Locality) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Locality) GetSubZone() string {
	if x != nil {
		return x.SubZone
	}
	return ""
}

// BuildVersion combines SemVer version of extension with free-form build information
// (i.e. 'alpha', 'private-build') as a set of strings.
type BuildVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SemVer version of extension.
	Version *v3.SemanticVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Free-form build information.
	// Envoy defines several well known keys in the source/common/common/version.h file
	Metadata      *structpb.Struct `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildVersion) Reset() {
	*x = BuildVersion{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildVersion) ProtoMessage() {}

func (x *BuildVersion) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildVersion.ProtoReflect.Descriptor instead.
func (*BuildVersion) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{1}
}

func (x *BuildVersion) GetVersion() *v3.SemanticVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *BuildVersion) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Version and identification for an Envoy extension.
// [#next-free-field: 6]
type Extension struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is the name of the Envoy filter as specified in the Envoy
	// configuration, e.g. envoy.filters.http.router, com.acme.widget.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Category of the extension.
	// Extension category names use reverse DNS notation. For instance "envoy.filters.listener"
	// for Envoy's built-in listener filters or "com.acme.filters.http" for HTTP filters from
	// acme.com vendor.
	// [#comment:TODO(yanavlasov): Link to the doc with existing envoy category names.]
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// [#not-implemented-hide:] Type descriptor of extension configuration proto.
	// [#comment:TODO(yanavlasov): Link to the doc with existing configuration protos.]
	// [#comment:TODO(yanavlasov): Add tests when PR #9391 lands.]
	TypeDescriptor string `protobuf:"bytes,3,opt,name=type_descriptor,json=typeDescriptor,proto3" json:"type_descriptor,omitempty"`
	// The version is a property of the extension and maintained independently
	// of other extensions and the Envoy API.
	// This field is not set when extension did not provide version information.
	Version *BuildVersion `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Indicates that the extension is present but was disabled via dynamic configuration.
	Disabled      bool `protobuf:"varint,5,opt,name=disabled,proto3" json:"disabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extension) Reset() {
	*x = Extension{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension) ProtoMessage() {}

func (x *Extension) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension.ProtoReflect.Descriptor instead.
func (*Extension) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{2}
}

func (x *Extension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Extension) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Extension) GetTypeDescriptor() string {
	if x != nil {
		return x.TypeDescriptor
	}
	return ""
}

func (x *Extension) GetVersion() *BuildVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Extension) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

// Identifies a specific Envoy instance. The node identifier is presented to the
// management server, which may use this identifier to distinguish per Envoy
// configuration for serving.
// [#next-free-field: 12]
type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An opaque node identifier for the Envoy node. This also provides the local
	// service node name. It should be set if any of the following features are
	// used: statsd, :ref:`CDS
	// <config_cluster_manager_cds>`, and :ref:`HTTP tracing
	// <arch_overview_tracing>`, either in this message or via
	// `--service-node`.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Defines the local service cluster name where Envoy is running. Though
	// optional, it should be set if any of the following features are used:
	// statsd, :ref:`health check cluster
	// verification
	// <envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.service_name_matcher>`,
	// runtime override directory,
	// :ref:`user agent addition
	// <envoy_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.add_user_agent>`,
	// HTTP global rate limiting,
	// CDS, and :ref:`HTTP tracing
	// <arch_overview_tracing>`, either in this message or via
	// `--service-cluster`.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Opaque metadata extending the node identifier. Envoy will pass this
	// directly to the management server.
	Metadata *structpb.Struct `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Locality specifying where the Envoy instance is running.
	Locality *Locality `protobuf:"bytes,4,opt,name=locality,proto3" json:"locality,omitempty"`
	// Free-form string that identifies the entity requesting config.
	// E.g. "envoy" or "grpc"
	UserAgentName string `protobuf:"bytes,6,opt,name=user_agent_name,json=userAgentName,proto3" json:"user_agent_name,omitempty"`
	// Types that are valid to be assigned to UserAgentVersionType:
	//
	//	*Node_UserAgentVersion
	//	*Node_UserAgentBuildVersion
	UserAgentVersionType isNode_UserAgentVersionType `protobuf_oneof:"user_agent_version_type"`
	// List of extensions and their versions supported by the node.
	Extensions []*Extension `protobuf:"bytes,9,rep,name=extensions,proto3" json:"extensions,omitempty"`
	// Client feature support list. These are well known features described
	// in the Envoy API repository for a given major version of an API. Client features
	// use reverse DNS naming scheme, for example `com.acme.feature`.
	// See the list of features that xDS client may
	// support.
	ClientFeatures []string `protobuf:"bytes,10,rep,name=client_features,json=clientFeatures,proto3" json:"client_features,omitempty"`
	// Known listening ports on the node as a generic hint to the management server
	// for filtering listeners to be returned. For example,
	// if there is a listener bound to port 80, the list can optionally contain the
	// SocketAddress `(0.0.0.0,80)`. The field is optional and just a hint.
	ListeningAddresses []*Address `protobuf:"bytes,11,rep,name=listening_addresses,json=listeningAddresses,proto3" json:"listening_addresses,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Node) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Node) GetLocality() *Locality {
	if x != nil {
		return x.Locality
	}
	return nil
}

func (x *Node) GetUserAgentName() string {
	if x != nil {
		return x.UserAgentName
	}
	return ""
}

func (x *Node) GetUserAgentVersionType() isNode_UserAgentVersionType {
	if x != nil {
		return x.UserAgentVersionType
	}
	return nil
}

func (x *Node) GetUserAgentVersion() string {
	if x != nil {
		if x, ok := x.UserAgentVersionType.(*Node_UserAgentVersion); ok {
			return x.UserAgentVersion
		}
	}
	return ""
}

func (x *Node) GetUserAgentBuildVersion() *BuildVersion {
	if x != nil {
		if x, ok := x.UserAgentVersionType.(*Node_UserAgentBuildVersion); ok {
			return x.UserAgentBuildVersion
		}
	}
	return nil
}

func (x *Node) GetExtensions() []*Extension {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *Node) GetClientFeatures() []string {
	if x != nil {
		return x.ClientFeatures
	}
	return nil
}

func (x *Node) GetListeningAddresses() []*Address {
	if x != nil {
		return x.ListeningAddresses
	}
	return nil
}

type isNode_UserAgentVersionType interface {
	isNode_UserAgentVersionType()
}

type Node_UserAgentVersion struct {
	// Free-form string that identifies the version of the entity requesting config.
	// E.g. "1.12.2" or "abcd1234", or "SpecialEnvoyBuild"
	UserAgentVersion string `protobuf:"bytes,7,opt,name=user_agent_version,json=userAgentVersion,proto3,oneof"`
}

type Node_UserAgentBuildVersion struct {
	// Structured version of the entity requesting config.
	UserAgentBuildVersion *BuildVersion `protobuf:"bytes,8,opt,name=user_agent_build_version,json=userAgentBuildVersion,proto3,oneof"`
}

func (*Node_UserAgentVersion) isNode_UserAgentVersionType() {}

func (*Node_UserAgentBuildVersion) isNode_UserAgentVersionType() {}

// Metadata provides additional inputs to filters based on matched listeners,
// filter chains, routes and endpoints. It is structured as a map, usually from
// filter name (in reverse DNS format) to metadata specific to the filter. Metadata
// key-values for a filter are merged as connection and request handling occurs,
// with later values for the same key overriding earlier values.
//
// An example use of metadata is providing additional values to
// http_connection_manager in the envoy.http_connection_manager.access_log
// namespace.
//
// Another example use of metadata is to per service config info in cluster metadata, which may get
// consumed by multiple filters.
//
// For load balancing, Metadata provides a means to subset cluster endpoints.
// Endpoints have a Metadata object associated and routes contain a Metadata
// object to match against. There are some well defined metadata used today for
// this purpose:
//
//   - `{"envoy.lb": {"canary": <bool> }}` This indicates the canary status of an
//     endpoint and is also used during header processing
//     (x-envoy-upstream-canary) and for stats purposes.
//
// [#next-major-version: move to type/metadata/v2]
type Metadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Key is the reverse DNS filter name, e.g. com.acme.widget. The envoy.*
	// namespace is reserved for Envoy's built-in filters.
	FilterMetadata map[string]*structpb.Struct `protobuf:"bytes,1,rep,name=filter_metadata,json=filterMetadata,proto3" json:"filter_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{4}
}

func (x *Metadata) GetFilterMetadata() map[string]*structpb.Struct {
	if x != nil {
		return x.FilterMetadata
	}
	return nil
}

// Runtime derived uint32 with a default when not specified.
type RuntimeUInt32 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default value if runtime value is not available.
	DefaultValue uint32 `protobuf:"varint,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key to get value for comparison. This value is used if defined.
	RuntimeKey    string `protobuf:"bytes,3,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeUInt32) Reset() {
	*x = RuntimeUInt32{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeUInt32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeUInt32) ProtoMessage() {}

func (x *RuntimeUInt32) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeUInt32.ProtoReflect.Descriptor instead.
func (*RuntimeUInt32) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{5}
}

func (x *RuntimeUInt32) GetDefaultValue() uint32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *RuntimeUInt32) GetRuntimeKey() string {
	if x != nil {
		return x.RuntimeKey
	}
	return ""
}

// Runtime derived double with a default when not specified.
type RuntimeDouble struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default value if runtime value is not available.
	DefaultValue float64 `protobuf:"fixed64,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key to get value for comparison. This value is used if defined.
	RuntimeKey    string `protobuf:"bytes,2,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeDouble) Reset() {
	*x = RuntimeDouble{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeDouble) ProtoMessage() {}

func (x *RuntimeDouble) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeDouble.ProtoReflect.Descriptor instead.
func (*RuntimeDouble) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{6}
}

func (x *RuntimeDouble) GetDefaultValue() float64 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *RuntimeDouble) GetRuntimeKey() string {
	if x != nil {
		return x.RuntimeKey
	}
	return ""
}

// Runtime derived bool with a default when not specified.
type RuntimeFeatureFlag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default value if runtime value is not available.
	DefaultValue *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key to get value for comparison. This value is used if defined. The boolean value must
	// be represented via its
	// [canonical JSON encoding](https://developers.google.com/protocol-buffers/docs/proto3#json).
	RuntimeKey    string `protobuf:"bytes,2,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeFeatureFlag) Reset() {
	*x = RuntimeFeatureFlag{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeFeatureFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeFeatureFlag) ProtoMessage() {}

func (x *RuntimeFeatureFlag) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeFeatureFlag.ProtoReflect.Descriptor instead.
func (*RuntimeFeatureFlag) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{7}
}

func (x *RuntimeFeatureFlag) GetDefaultValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *RuntimeFeatureFlag) GetRuntimeKey() string {
	if x != nil {
		return x.RuntimeKey
	}
	return ""
}

// Header name/value pair.
type HeaderValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header name.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Header value.
	//
	// The same format specifier as used for
	// HTTP access logging applies here, however
	// unknown header values are replaced with the empty string instead of `-`.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderValue) Reset() {
	*x = HeaderValue{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValue) ProtoMessage() {}

func (x *HeaderValue) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderValue.ProtoReflect.Descriptor instead.
func (*HeaderValue) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{8}
}

func (x *HeaderValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeaderValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Header name/value pair plus option to control append behavior.
type HeaderValueOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header name/value pair that this option applies to.
	Header *HeaderValue `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Should the value be appended? If true (default), the value is appended to
	// existing values.
	Append        *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=append,proto3" json:"append,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderValueOption) Reset() {
	*x = HeaderValueOption{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderValueOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValueOption) ProtoMessage() {}

func (x *HeaderValueOption) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderValueOption.ProtoReflect.Descriptor instead.
func (*HeaderValueOption) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{9}
}

func (x *HeaderValueOption) GetHeader() *HeaderValue {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HeaderValueOption) GetAppend() *wrapperspb.BoolValue {
	if x != nil {
		return x.Append
	}
	return nil
}

// Wrapper for a set of headers.
type HeaderMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Headers       []*HeaderValue         `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderMap) Reset() {
	*x = HeaderMap{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderMap) ProtoMessage() {}

func (x *HeaderMap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderMap.ProtoReflect.Descriptor instead.
func (*HeaderMap) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{10}
}

func (x *HeaderMap) GetHeaders() []*HeaderValue {
	if x != nil {
		return x.Headers
	}
	return nil
}

// Data source consisting of either a file or an inline value.
type DataSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Specifier:
	//
	//	*DataSource_Filename
	//	*DataSource_InlineBytes
	//	*DataSource_InlineString
	Specifier     isDataSource_Specifier `protobuf_oneof:"specifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSource) Reset() {
	*x = DataSource{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSource) ProtoMessage() {}

func (x *DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSource.ProtoReflect.Descriptor instead.
func (*DataSource) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{11}
}

func (x *DataSource) GetSpecifier() isDataSource_Specifier {
	if x != nil {
		return x.Specifier
	}
	return nil
}

func (x *DataSource) GetFilename() string {
	if x != nil {
		if x, ok := x.Specifier.(*DataSource_Filename); ok {
			return x.Filename
		}
	}
	return ""
}

func (x *DataSource) GetInlineBytes() []byte {
	if x != nil {
		if x, ok := x.Specifier.(*DataSource_InlineBytes); ok {
			return x.InlineBytes
		}
	}
	return nil
}

func (x *DataSource) GetInlineString() string {
	if x != nil {
		if x, ok := x.Specifier.(*DataSource_InlineString); ok {
			return x.InlineString
		}
	}
	return ""
}

type isDataSource_Specifier interface {
	isDataSource_Specifier()
}

type DataSource_Filename struct {
	// Local filesystem data source.
	Filename string `protobuf:"bytes,1,opt,name=filename,proto3,oneof"`
}

type DataSource_InlineBytes struct {
	// Bytes inlined in the configuration.
	InlineBytes []byte `protobuf:"bytes,2,opt,name=inline_bytes,json=inlineBytes,proto3,oneof"`
}

type DataSource_InlineString struct {
	// String inlined in the configuration.
	InlineString string `protobuf:"bytes,3,opt,name=inline_string,json=inlineString,proto3,oneof"`
}

func (*DataSource_Filename) isDataSource_Specifier() {}

func (*DataSource_InlineBytes) isDataSource_Specifier() {}

func (*DataSource_InlineString) isDataSource_Specifier() {}

// The message specifies the retry policy of remote data source when fetching fails.
type RetryPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies parameters that control retry backoff strategy.
	// This parameter is optional, in which case the default base interval is 1000 milliseconds. The
	// default maximum interval is 10 times the base interval.
	RetryBackOff *BackoffStrategy `protobuf:"bytes,1,opt,name=retry_back_off,json=retryBackOff,proto3" json:"retry_back_off,omitempty"`
	// Specifies the allowed number of retries. This parameter is optional and
	// defaults to 1.
	NumRetries    *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=num_retries,json=numRetries,proto3" json:"num_retries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryPolicy) Reset() {
	*x = RetryPolicy{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryPolicy) ProtoMessage() {}

func (x *RetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryPolicy.ProtoReflect.Descriptor instead.
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{12}
}

func (x *RetryPolicy) GetRetryBackOff() *BackoffStrategy {
	if x != nil {
		return x.RetryBackOff
	}
	return nil
}

func (x *RetryPolicy) GetNumRetries() *wrapperspb.UInt32Value {
	if x != nil {
		return x.NumRetries
	}
	return nil
}

// The message specifies how to fetch data from remote and how to verify it.
type RemoteDataSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The HTTP URI to fetch the remote data.
	HttpUri *HttpUri `protobuf:"bytes,1,opt,name=http_uri,json=httpUri,proto3" json:"http_uri,omitempty"`
	// SHA256 string for verifying data.
	Sha256 string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// Retry policy for fetching remote data.
	RetryPolicy   *RetryPolicy `protobuf:"bytes,3,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteDataSource) Reset() {
	*x = RemoteDataSource{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteDataSource) ProtoMessage() {}

func (x *RemoteDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteDataSource.ProtoReflect.Descriptor instead.
func (*RemoteDataSource) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{13}
}

func (x *RemoteDataSource) GetHttpUri() *HttpUri {
	if x != nil {
		return x.HttpUri
	}
	return nil
}

func (x *RemoteDataSource) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *RemoteDataSource) GetRetryPolicy() *RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

// Async data source which support async data fetch.
type AsyncDataSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Specifier:
	//
	//	*AsyncDataSource_Local
	//	*AsyncDataSource_Remote
	Specifier     isAsyncDataSource_Specifier `protobuf_oneof:"specifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AsyncDataSource) Reset() {
	*x = AsyncDataSource{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncDataSource) ProtoMessage() {}

func (x *AsyncDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncDataSource.ProtoReflect.Descriptor instead.
func (*AsyncDataSource) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{14}
}

func (x *AsyncDataSource) GetSpecifier() isAsyncDataSource_Specifier {
	if x != nil {
		return x.Specifier
	}
	return nil
}

func (x *AsyncDataSource) GetLocal() *DataSource {
	if x != nil {
		if x, ok := x.Specifier.(*AsyncDataSource_Local); ok {
			return x.Local
		}
	}
	return nil
}

func (x *AsyncDataSource) GetRemote() *RemoteDataSource {
	if x != nil {
		if x, ok := x.Specifier.(*AsyncDataSource_Remote); ok {
			return x.Remote
		}
	}
	return nil
}

type isAsyncDataSource_Specifier interface {
	isAsyncDataSource_Specifier()
}

type AsyncDataSource_Local struct {
	// Local async data source.
	Local *DataSource `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type AsyncDataSource_Remote struct {
	// Remote async data source.
	Remote *RemoteDataSource `protobuf:"bytes,2,opt,name=remote,proto3,oneof"`
}

func (*AsyncDataSource_Local) isAsyncDataSource_Specifier() {}

func (*AsyncDataSource_Remote) isAsyncDataSource_Specifier() {}

// Configuration for transport socket in listeners and
// clusters. If the configuration is
// empty, a default transport socket implementation and configuration will be
// chosen based on the platform and existence of tls_context.
type TransportSocket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the transport socket to instantiate. The name must match a supported transport
	// socket implementation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Implementation specific configuration which depends on the implementation being instantiated.
	// See the supported transport socket implementations for further documentation.
	//
	// Types that are valid to be assigned to ConfigType:
	//
	//	*TransportSocket_TypedConfig
	ConfigType    isTransportSocket_ConfigType `protobuf_oneof:"config_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransportSocket) Reset() {
	*x = TransportSocket{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransportSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportSocket) ProtoMessage() {}

func (x *TransportSocket) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportSocket.ProtoReflect.Descriptor instead.
func (*TransportSocket) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{15}
}

func (x *TransportSocket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransportSocket) GetConfigType() isTransportSocket_ConfigType {
	if x != nil {
		return x.ConfigType
	}
	return nil
}

func (x *TransportSocket) GetTypedConfig() *anypb.Any {
	if x != nil {
		if x, ok := x.ConfigType.(*TransportSocket_TypedConfig); ok {
			return x.TypedConfig
		}
	}
	return nil
}

type isTransportSocket_ConfigType interface {
	isTransportSocket_ConfigType()
}

type TransportSocket_TypedConfig struct {
	TypedConfig *anypb.Any `protobuf:"bytes,3,opt,name=typed_config,json=typedConfig,proto3,oneof"`
}

func (*TransportSocket_TypedConfig) isTransportSocket_ConfigType() {}

// Runtime derived FractionalPercent with defaults for when the numerator or denominator is not
// specified via a runtime key.
//
// **Note**:
//
//	Parsing of the runtime key's data is implemented such that it may be represented as a
//	FractionalPercent proto represented as JSON/YAML
//	and may also be represented as an integer with the assumption that the value is an integral
//	percentage out of 100. For instance, a runtime key lookup returning the value "42" would parse
//	as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.
type RuntimeFractionalPercent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default value if the runtime value's for the numerator/denominator keys are not available.
	DefaultValue *v3.FractionalPercent `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key for a YAML representation of a FractionalPercent.
	RuntimeKey    string `protobuf:"bytes,2,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeFractionalPercent) Reset() {
	*x = RuntimeFractionalPercent{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeFractionalPercent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeFractionalPercent) ProtoMessage() {}

func (x *RuntimeFractionalPercent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeFractionalPercent.ProtoReflect.Descriptor instead.
func (*RuntimeFractionalPercent) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{16}
}

func (x *RuntimeFractionalPercent) GetDefaultValue() *v3.FractionalPercent {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *RuntimeFractionalPercent) GetRuntimeKey() string {
	if x != nil {
		return x.RuntimeKey
	}
	return ""
}

// Identifies a specific ControlPlane instance that Envoy is connected to.
type ControlPlane struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An opaque control plane identifier that uniquely identifies an instance
	// of control plane. This can be used to identify which control plane instance,
	// the Envoy is connected to.
	Identifier    string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlPlane) Reset() {
	*x = ControlPlane{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlPlane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlane) ProtoMessage() {}

func (x *ControlPlane) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlane.ProtoReflect.Descriptor instead.
func (*ControlPlane) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP(), []int{17}
}

func (x *ControlPlane) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

var File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDesc = "" +
	"\n" +
	"Rgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/base.proto\x12\x1csolo.io.envoy.config.core.v3\x1aUgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/address.proto\x1aUgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/backoff.proto\x1aVgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/http_uri.proto\x1aNgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/type/v3/percent.proto\x1aWgithub.com/solo-io/gloo/projects/gloo/api/external/envoy/type/v3/semantic_version.proto\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1eudpa/annotations/migrate.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\x1a\x12extproto/ext.proto\"~\n" +
	"\bLocality\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x12\n" +
	"\x04zone\x18\x02 \x01(\tR\x04zone\x12\x19\n" +
	"\bsub_zone\x18\x03 \x01(\tR\asubZone:+\x8a\xc8ގ\x04%\n" +
	"#.solo.io.envoy.api.v2.core.Locality\"\xb6\x01\n" +
	"\fBuildVersion\x12@\n" +
	"\aversion\x18\x01 \x01(\v2&.solo.io.envoy.type.v3.SemanticVersionR\aversion\x123\n" +
	"\bmetadata\x18\x02 \x01(\v2\x17.google.protobuf.StructR\bmetadata:/\x8a\xc8ގ\x04)\n" +
	"'.solo.io.envoy.api.v2.core.BuildVersion\"\xf4\x01\n" +
	"\tExtension\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12'\n" +
	"\x0ftype_descriptor\x18\x03 \x01(\tR\x0etypeDescriptor\x12D\n" +
	"\aversion\x18\x04 \x01(\v2*.solo.io.envoy.config.core.v3.BuildVersionR\aversion\x12\x1a\n" +
	"\bdisabled\x18\x05 \x01(\bR\bdisabled:,\x8a\xc8ގ\x04&\n" +
	"$.solo.io.envoy.api.v2.core.Extension\"\x8b\x05\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acluster\x18\x02 \x01(\tR\acluster\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12B\n" +
	"\blocality\x18\x04 \x01(\v2&.solo.io.envoy.config.core.v3.LocalityR\blocality\x12&\n" +
	"\x0fuser_agent_name\x18\x06 \x01(\tR\ruserAgentName\x12.\n" +
	"\x12user_agent_version\x18\a \x01(\tH\x00R\x10userAgentVersion\x12e\n" +
	"\x18user_agent_build_version\x18\b \x01(\v2*.solo.io.envoy.config.core.v3.BuildVersionH\x00R\x15userAgentBuildVersion\x12G\n" +
	"\n" +
	"extensions\x18\t \x03(\v2'.solo.io.envoy.config.core.v3.ExtensionR\n" +
	"extensions\x12'\n" +
	"\x0fclient_features\x18\n" +
	" \x03(\tR\x0eclientFeatures\x12V\n" +
	"\x13listening_addresses\x18\v \x03(\v2%.solo.io.envoy.config.core.v3.AddressR\x12listeningAddresses:'\x8a\xc8ގ\x04!\n" +
	"\x1f.solo.io.envoy.api.v2.core.NodeB\x19\n" +
	"\x17user_agent_version_typeJ\x04\b\x05\x10\x06R\rbuild_version\"\xf8\x01\n" +
	"\bMetadata\x12c\n" +
	"\x0ffilter_metadata\x18\x01 \x03(\v2:.solo.io.envoy.config.core.v3.Metadata.FilterMetadataEntryR\x0efilterMetadata\x1aZ\n" +
	"\x13FilterMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05value:\x028\x01:+\x8a\xc8ގ\x04%\n" +
	"#.solo.io.envoy.api.v2.core.Metadata\"\x90\x01\n" +
	"\rRuntimeUInt32\x12#\n" +
	"\rdefault_value\x18\x02 \x01(\rR\fdefaultValue\x12(\n" +
	"\vruntime_key\x18\x03 \x01(\tB\a\xfaB\x04r\x02 \x01R\n" +
	"runtimeKey:0\x8a\xc8ގ\x04*\n" +
	"(.solo.io.envoy.api.v2.core.RuntimeUInt32\"\x90\x01\n" +
	"\rRuntimeDouble\x12#\n" +
	"\rdefault_value\x18\x01 \x01(\x01R\fdefaultValue\x12(\n" +
	"\vruntime_key\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\n" +
	"runtimeKey:0\x8a\xc8ގ\x04*\n" +
	"(.solo.io.envoy.api.v2.core.RuntimeDouble\"\xc0\x01\n" +
	"\x12RuntimeFeatureFlag\x12I\n" +
	"\rdefault_value\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueB\b\xfaB\x05\x8a\x01\x02\x10\x01R\fdefaultValue\x12(\n" +
	"\vruntime_key\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\n" +
	"runtimeKey:5\x8a\xc8ގ\x04/\n" +
	"-.solo.io.envoy.api.v2.core.RuntimeFeatureFlag\"\x89\x01\n" +
	"\vHeaderValue\x12#\n" +
	"\x03key\x18\x01 \x01(\tB\x11\xfaB\x0er\f \x01(\x80\x80\x01\xc8\x01\x00\xc0\x01\x01R\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\tB\x0f\xfaB\fr\n" +
	"(\x80\x80\x01\xc8\x01\x00\xc0\x01\x02R\x05value:.\x8a\xc8ގ\x04(\n" +
	"&.solo.io.envoy.api.v2.core.HeaderValue\"\xca\x01\n" +
	"\x11HeaderValueOption\x12K\n" +
	"\x06header\x18\x01 \x01(\v2).solo.io.envoy.config.core.v3.HeaderValueB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06header\x122\n" +
	"\x06append\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x06append:4\x8a\xc8ގ\x04.\n" +
	",.solo.io.envoy.api.v2.core.HeaderValueOption\"~\n" +
	"\tHeaderMap\x12C\n" +
	"\aheaders\x18\x01 \x03(\v2).solo.io.envoy.config.core.v3.HeaderValueR\aheaders:,\x8a\xc8ގ\x04&\n" +
	"$.solo.io.envoy.api.v2.core.HeaderMap\"\xd2\x01\n" +
	"\n" +
	"DataSource\x12%\n" +
	"\bfilename\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01H\x00R\bfilename\x12,\n" +
	"\finline_bytes\x18\x02 \x01(\fB\a\xfaB\x04z\x02\x10\x01H\x00R\vinlineBytes\x12.\n" +
	"\rinline_string\x18\x03 \x01(\tB\a\xfaB\x04r\x02 \x01H\x00R\finlineString:-\x8a\xc8ގ\x04'\n" +
	"%.solo.io.envoy.api.v2.core.DataSourceB\x10\n" +
	"\tspecifier\x12\x03\xf8B\x01\"\xe6\x01\n" +
	"\vRetryPolicy\x12S\n" +
	"\x0eretry_back_off\x18\x01 \x01(\v2-.solo.io.envoy.config.core.v3.BackoffStrategyR\fretryBackOff\x12R\n" +
	"\vnum_retries\x18\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueB\x13\x82\x8a\u05ed\x04\r\n" +
	"\vmax_retriesR\n" +
	"numRetries:.\x8a\xc8ގ\x04(\n" +
	"&.solo.io.envoy.api.v2.core.RetryPolicy\"\x82\x02\n" +
	"\x10RemoteDataSource\x12J\n" +
	"\bhttp_uri\x18\x01 \x01(\v2%.solo.io.envoy.config.core.v3.HttpUriB\b\xfaB\x05\x8a\x01\x02\x10\x01R\ahttpUri\x12\x1f\n" +
	"\x06sha256\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\x06sha256\x12L\n" +
	"\fretry_policy\x18\x03 \x01(\v2).solo.io.envoy.config.core.v3.RetryPolicyR\vretryPolicy:3\x8a\xc8ގ\x04-\n" +
	"+.solo.io.envoy.api.v2.core.RemoteDataSource\"\xe3\x01\n" +
	"\x0fAsyncDataSource\x12@\n" +
	"\x05local\x18\x01 \x01(\v2(.solo.io.envoy.config.core.v3.DataSourceH\x00R\x05local\x12H\n" +
	"\x06remote\x18\x02 \x01(\v2..solo.io.envoy.config.core.v3.RemoteDataSourceH\x00R\x06remote:2\x8a\xc8ގ\x04,\n" +
	"*.solo.io.envoy.api.v2.core.AsyncDataSourceB\x10\n" +
	"\tspecifier\x12\x03\xf8B\x01\"\xba\x01\n" +
	"\x0fTransportSocket\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\x04name\x129\n" +
	"\ftyped_config\x18\x03 \x01(\v2\x14.google.protobuf.AnyH\x00R\vtypedConfig:2\x8a\xc8ގ\x04,\n" +
	"*.solo.io.envoy.api.v2.core.TransportSocketB\r\n" +
	"\vconfig_typeJ\x04\b\x02\x10\x03R\x06config\"\xd1\x01\n" +
	"\x18RuntimeFractionalPercent\x12W\n" +
	"\rdefault_value\x18\x01 \x01(\v2(.solo.io.envoy.type.v3.FractionalPercentB\b\xfaB\x05\x8a\x01\x02\x10\x01R\fdefaultValue\x12\x1f\n" +
	"\vruntime_key\x18\x02 \x01(\tR\n" +
	"runtimeKey:;\x8a\xc8ގ\x045\n" +
	"3.solo.io.envoy.api.v2.core.RuntimeFractionalPercent\"_\n" +
	"\fControlPlane\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier:/\x8a\xc8ގ\x04)\n" +
	"'.solo.io.envoy.api.v2.core.ControlPlane*(\n" +
	"\x0fRoutingPriority\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\b\n" +
	"\x04HIGH\x10\x01*\x89\x01\n" +
	"\rRequestMethod\x12\x16\n" +
	"\x12METHOD_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03GET\x10\x01\x12\b\n" +
	"\x04HEAD\x10\x02\x12\b\n" +
	"\x04POST\x10\x03\x12\a\n" +
	"\x03PUT\x10\x04\x12\n" +
	"\n" +
	"\x06DELETE\x10\x05\x12\v\n" +
	"\aCONNECT\x10\x06\x12\v\n" +
	"\aOPTIONS\x10\a\x12\t\n" +
	"\x05TRACE\x10\b\x12\t\n" +
	"\x05PATCH\x10\t*>\n" +
	"\x10TrafficDirection\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aINBOUND\x10\x01\x12\f\n" +
	"\bOUTBOUND\x10\x02B\x9a\x01\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01\xe2\xb5\xdf\xcb\a\x02\x10\x02\n" +
	"*io.envoyproxy.solo.io.envoy.config.core.v3B\tBaseProtoP\x01ZKgithub.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/config/core/v3b\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_goTypes = []any{
	(RoutingPriority)(0),             // 0: solo.io.envoy.config.core.v3.RoutingPriority
	(RequestMethod)(0),               // 1: solo.io.envoy.config.core.v3.RequestMethod
	(TrafficDirection)(0),            // 2: solo.io.envoy.config.core.v3.TrafficDirection
	(*Locality)(nil),                 // 3: solo.io.envoy.config.core.v3.Locality
	(*BuildVersion)(nil),             // 4: solo.io.envoy.config.core.v3.BuildVersion
	(*Extension)(nil),                // 5: solo.io.envoy.config.core.v3.Extension
	(*Node)(nil),                     // 6: solo.io.envoy.config.core.v3.Node
	(*Metadata)(nil),                 // 7: solo.io.envoy.config.core.v3.Metadata
	(*RuntimeUInt32)(nil),            // 8: solo.io.envoy.config.core.v3.RuntimeUInt32
	(*RuntimeDouble)(nil),            // 9: solo.io.envoy.config.core.v3.RuntimeDouble
	(*RuntimeFeatureFlag)(nil),       // 10: solo.io.envoy.config.core.v3.RuntimeFeatureFlag
	(*HeaderValue)(nil),              // 11: solo.io.envoy.config.core.v3.HeaderValue
	(*HeaderValueOption)(nil),        // 12: solo.io.envoy.config.core.v3.HeaderValueOption
	(*HeaderMap)(nil),                // 13: solo.io.envoy.config.core.v3.HeaderMap
	(*DataSource)(nil),               // 14: solo.io.envoy.config.core.v3.DataSource
	(*RetryPolicy)(nil),              // 15: solo.io.envoy.config.core.v3.RetryPolicy
	(*RemoteDataSource)(nil),         // 16: solo.io.envoy.config.core.v3.RemoteDataSource
	(*AsyncDataSource)(nil),          // 17: solo.io.envoy.config.core.v3.AsyncDataSource
	(*TransportSocket)(nil),          // 18: solo.io.envoy.config.core.v3.TransportSocket
	(*RuntimeFractionalPercent)(nil), // 19: solo.io.envoy.config.core.v3.RuntimeFractionalPercent
	(*ControlPlane)(nil),             // 20: solo.io.envoy.config.core.v3.ControlPlane
	nil,                              // 21: solo.io.envoy.config.core.v3.Metadata.FilterMetadataEntry
	(*v3.SemanticVersion)(nil),       // 22: solo.io.envoy.type.v3.SemanticVersion
	(*structpb.Struct)(nil),          // 23: google.protobuf.Struct
	(*Address)(nil),                  // 24: solo.io.envoy.config.core.v3.Address
	(*wrapperspb.BoolValue)(nil),     // 25: google.protobuf.BoolValue
	(*BackoffStrategy)(nil),          // 26: solo.io.envoy.config.core.v3.BackoffStrategy
	(*wrapperspb.UInt32Value)(nil),   // 27: google.protobuf.UInt32Value
	(*HttpUri)(nil),                  // 28: solo.io.envoy.config.core.v3.HttpUri
	(*anypb.Any)(nil),                // 29: google.protobuf.Any
	(*v3.FractionalPercent)(nil),     // 30: solo.io.envoy.type.v3.FractionalPercent
}
var file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_depIdxs = []int32{
	22, // 0: solo.io.envoy.config.core.v3.BuildVersion.version:type_name -> solo.io.envoy.type.v3.SemanticVersion
	23, // 1: solo.io.envoy.config.core.v3.BuildVersion.metadata:type_name -> google.protobuf.Struct
	4,  // 2: solo.io.envoy.config.core.v3.Extension.version:type_name -> solo.io.envoy.config.core.v3.BuildVersion
	23, // 3: solo.io.envoy.config.core.v3.Node.metadata:type_name -> google.protobuf.Struct
	3,  // 4: solo.io.envoy.config.core.v3.Node.locality:type_name -> solo.io.envoy.config.core.v3.Locality
	4,  // 5: solo.io.envoy.config.core.v3.Node.user_agent_build_version:type_name -> solo.io.envoy.config.core.v3.BuildVersion
	5,  // 6: solo.io.envoy.config.core.v3.Node.extensions:type_name -> solo.io.envoy.config.core.v3.Extension
	24, // 7: solo.io.envoy.config.core.v3.Node.listening_addresses:type_name -> solo.io.envoy.config.core.v3.Address
	21, // 8: solo.io.envoy.config.core.v3.Metadata.filter_metadata:type_name -> solo.io.envoy.config.core.v3.Metadata.FilterMetadataEntry
	25, // 9: solo.io.envoy.config.core.v3.RuntimeFeatureFlag.default_value:type_name -> google.protobuf.BoolValue
	11, // 10: solo.io.envoy.config.core.v3.HeaderValueOption.header:type_name -> solo.io.envoy.config.core.v3.HeaderValue
	25, // 11: solo.io.envoy.config.core.v3.HeaderValueOption.append:type_name -> google.protobuf.BoolValue
	11, // 12: solo.io.envoy.config.core.v3.HeaderMap.headers:type_name -> solo.io.envoy.config.core.v3.HeaderValue
	26, // 13: solo.io.envoy.config.core.v3.RetryPolicy.retry_back_off:type_name -> solo.io.envoy.config.core.v3.BackoffStrategy
	27, // 14: solo.io.envoy.config.core.v3.RetryPolicy.num_retries:type_name -> google.protobuf.UInt32Value
	28, // 15: solo.io.envoy.config.core.v3.RemoteDataSource.http_uri:type_name -> solo.io.envoy.config.core.v3.HttpUri
	15, // 16: solo.io.envoy.config.core.v3.RemoteDataSource.retry_policy:type_name -> solo.io.envoy.config.core.v3.RetryPolicy
	14, // 17: solo.io.envoy.config.core.v3.AsyncDataSource.local:type_name -> solo.io.envoy.config.core.v3.DataSource
	16, // 18: solo.io.envoy.config.core.v3.AsyncDataSource.remote:type_name -> solo.io.envoy.config.core.v3.RemoteDataSource
	29, // 19: solo.io.envoy.config.core.v3.TransportSocket.typed_config:type_name -> google.protobuf.Any
	30, // 20: solo.io.envoy.config.core.v3.RuntimeFractionalPercent.default_value:type_name -> solo.io.envoy.type.v3.FractionalPercent
	23, // 21: solo.io.envoy.config.core.v3.Metadata.FilterMetadataEntry.value:type_name -> google.protobuf.Struct
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto != nil {
		return
	}
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_address_proto_init()
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_backoff_proto_init()
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_http_uri_proto_init()
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[3].OneofWrappers = []any{
		(*Node_UserAgentVersion)(nil),
		(*Node_UserAgentBuildVersion)(nil),
	}
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[11].OneofWrappers = []any{
		(*DataSource_Filename)(nil),
		(*DataSource_InlineBytes)(nil),
		(*DataSource_InlineString)(nil),
	}
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[14].OneofWrappers = []any{
		(*AsyncDataSource_Local)(nil),
		(*AsyncDataSource_Remote)(nil),
	}
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes[15].OneofWrappers = []any{
		(*TransportSocket_TypedConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_external_envoy_config_core_v3_base_proto_depIdxs = nil
}
