// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gateway/api/v1/http_gateway.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Virtual Service Selector expression operator, while the set-based syntax differs from Kubernetes (kubernetes: `key: !mylabel`, gloo: `key: mylabel, operator: "!"` | kubernetes: `key: mylabel`, gloo: `key: mylabel, operator: exists`), the functionality remains the same.
type VirtualServiceSelectorExpressions_Expression_Operator int32

const (
	// =
	VirtualServiceSelectorExpressions_Expression_Equals VirtualServiceSelectorExpressions_Expression_Operator = 0
	// ==
	VirtualServiceSelectorExpressions_Expression_DoubleEquals VirtualServiceSelectorExpressions_Expression_Operator = 1
	// !=
	VirtualServiceSelectorExpressions_Expression_NotEquals VirtualServiceSelectorExpressions_Expression_Operator = 2
	// in
	VirtualServiceSelectorExpressions_Expression_In VirtualServiceSelectorExpressions_Expression_Operator = 3
	// notin
	VirtualServiceSelectorExpressions_Expression_NotIn VirtualServiceSelectorExpressions_Expression_Operator = 4
	// exists
	VirtualServiceSelectorExpressions_Expression_Exists VirtualServiceSelectorExpressions_Expression_Operator = 5
	// !
	VirtualServiceSelectorExpressions_Expression_DoesNotExist VirtualServiceSelectorExpressions_Expression_Operator = 6
	// gt
	VirtualServiceSelectorExpressions_Expression_GreaterThan VirtualServiceSelectorExpressions_Expression_Operator = 7
	// lt
	VirtualServiceSelectorExpressions_Expression_LessThan VirtualServiceSelectorExpressions_Expression_Operator = 8
)

// Enum value maps for VirtualServiceSelectorExpressions_Expression_Operator.
var (
	VirtualServiceSelectorExpressions_Expression_Operator_name = map[int32]string{
		0: "Equals",
		1: "DoubleEquals",
		2: "NotEquals",
		3: "In",
		4: "NotIn",
		5: "Exists",
		6: "DoesNotExist",
		7: "GreaterThan",
		8: "LessThan",
	}
	VirtualServiceSelectorExpressions_Expression_Operator_value = map[string]int32{
		"Equals":       0,
		"DoubleEquals": 1,
		"NotEquals":    2,
		"In":           3,
		"NotIn":        4,
		"Exists":       5,
		"DoesNotExist": 6,
		"GreaterThan":  7,
		"LessThan":     8,
	}
)

func (x VirtualServiceSelectorExpressions_Expression_Operator) Enum() *VirtualServiceSelectorExpressions_Expression_Operator {
	p := new(VirtualServiceSelectorExpressions_Expression_Operator)
	*p = x
	return p
}

func (x VirtualServiceSelectorExpressions_Expression_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualServiceSelectorExpressions_Expression_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_enumTypes[0].Descriptor()
}

func (VirtualServiceSelectorExpressions_Expression_Operator) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_enumTypes[0]
}

func (x VirtualServiceSelectorExpressions_Expression_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualServiceSelectorExpressions_Expression_Operator.Descriptor instead.
func (VirtualServiceSelectorExpressions_Expression_Operator) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescGZIP(), []int{1, 0, 0}
}

type HttpGateway struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Names & namespace refs of the virtual services which contain the actual routes for the gateway.
	// If the list is empty, all virtual services in all namespaces that Gloo watches will apply,
	// with accordance to `ssl` flag on `Gateway` above.
	// The default namespace matching behavior can be overridden via `virtual_service_namespaces` flag below.
	// Only one of `virtualServices`, `virtualServiceExpressions` or `virtualServiceSelector` should be provided.
	// If more than one is provided only one will be checked with priority virtualServiceExpressions, virtualServiceSelector, virtualServices
	VirtualServices []*core.ResourceRef `protobuf:"bytes,1,rep,name=virtual_services,json=virtualServices,proto3" json:"virtual_services,omitempty"`
	// Select virtual services by their label. If `virtual_service_namespaces` is provided below, this will apply only
	// to virtual services in the namespaces specified.
	// Only one of `virtualServices`, `virtualServiceExpressions` or `virtualServiceSelector` should be provided.
	// If more than one is provided only one will be checked with priority virtualServiceExpressions, virtualServiceSelector, virtualServices
	VirtualServiceSelector map[string]string `protobuf:"bytes,2,rep,name=virtual_service_selector,json=virtualServiceSelector,proto3" json:"virtual_service_selector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Select virtual services using expressions. If `virtual_service_namespaces` is provided below, this will apply only
	// to virtual services in the namespaces specified.
	// Only one of `virtualServices`, `virtualServiceExpressions` or `virtualServiceSelector` should be provided.
	// If more than one is provided only one will be checked with priority virtualServiceExpressions, virtualServiceSelector, virtualServices
	VirtualServiceExpressions *VirtualServiceSelectorExpressions `protobuf:"bytes,9,opt,name=virtual_service_expressions,json=virtualServiceExpressions,proto3" json:"virtual_service_expressions,omitempty"`
	// Restrict the search by providing a list of valid search namespaces here.
	// Setting '*' will search all namespaces, equivalent to omitting this value.
	VirtualServiceNamespaces []string `protobuf:"bytes,3,rep,name=virtual_service_namespaces,json=virtualServiceNamespaces,proto3" json:"virtual_service_namespaces,omitempty"`
	// HTTP Gateway configuration
	Options       *v1.HttpListenerOptions `protobuf:"bytes,8,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpGateway) Reset() {
	*x = HttpGateway{}
	mi := &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpGateway) ProtoMessage() {}

func (x *HttpGateway) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpGateway.ProtoReflect.Descriptor instead.
func (*HttpGateway) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *HttpGateway) GetVirtualServices() []*core.ResourceRef {
	if x != nil {
		return x.VirtualServices
	}
	return nil
}

func (x *HttpGateway) GetVirtualServiceSelector() map[string]string {
	if x != nil {
		return x.VirtualServiceSelector
	}
	return nil
}

func (x *HttpGateway) GetVirtualServiceExpressions() *VirtualServiceSelectorExpressions {
	if x != nil {
		return x.VirtualServiceExpressions
	}
	return nil
}

func (x *HttpGateway) GetVirtualServiceNamespaces() []string {
	if x != nil {
		return x.VirtualServiceNamespaces
	}
	return nil
}

func (x *HttpGateway) GetOptions() *v1.HttpListenerOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Expressions to define which virtual services to select
// Example:
// expressions:
//   - key: domain
//     operator: in
//     values: example.com
type VirtualServiceSelectorExpressions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expressions allow for more flexible virtual service label matching, such as equality-based requirements, set-based requirements, or a combination of both.
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#equality-based-requirement
	Expressions   []*VirtualServiceSelectorExpressions_Expression `protobuf:"bytes,3,rep,name=expressions,proto3" json:"expressions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualServiceSelectorExpressions) Reset() {
	*x = VirtualServiceSelectorExpressions{}
	mi := &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualServiceSelectorExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualServiceSelectorExpressions) ProtoMessage() {}

func (x *VirtualServiceSelectorExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualServiceSelectorExpressions.ProtoReflect.Descriptor instead.
func (*VirtualServiceSelectorExpressions) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *VirtualServiceSelectorExpressions) GetExpressions() []*VirtualServiceSelectorExpressions_Expression {
	if x != nil {
		return x.Expressions
	}
	return nil
}

type VirtualServiceSelectorExpressions_Expression struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kubernetes label key, must conform to Kubernetes syntax requirements
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The operator can only be in, notin, =, ==, !=, exists, ! (DoesNotExist), gt (GreaterThan), lt (LessThan).
	Operator      VirtualServiceSelectorExpressions_Expression_Operator `protobuf:"varint,2,opt,name=operator,proto3,enum=gateway.solo.io.VirtualServiceSelectorExpressions_Expression_Operator" json:"operator,omitempty"`
	Values        []string                                              `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualServiceSelectorExpressions_Expression) Reset() {
	*x = VirtualServiceSelectorExpressions_Expression{}
	mi := &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualServiceSelectorExpressions_Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualServiceSelectorExpressions_Expression) ProtoMessage() {}

func (x *VirtualServiceSelectorExpressions_Expression) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualServiceSelectorExpressions_Expression.ProtoReflect.Descriptor instead.
func (*VirtualServiceSelectorExpressions_Expression) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescGZIP(), []int{1, 0}
}

func (x *VirtualServiceSelectorExpressions_Expression) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VirtualServiceSelectorExpressions_Expression) GetOperator() VirtualServiceSelectorExpressions_Expression_Operator {
	if x != nil {
		return x.Operator
	}
	return VirtualServiceSelectorExpressions_Expression_Equals
}

func (x *VirtualServiceSelectorExpressions_Expression) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto protoreflect.FileDescriptor

const file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDesc = "" +
	"\n" +
	"Bgithub.com/solo-io/gloo/projects/gateway/api/v1/http_gateway.proto\x12\x0fgateway.solo.io\x1a\x12extproto/ext.proto\x1a,github.com/solo-io/solo-kit/api/v1/ref.proto\x1a8github.com/solo-io/gloo/projects/gloo/api/v1/proxy.proto\x1aHgithub.com/solo-io/gloo/projects/gloo/api/v1/http_listener_options.proto\"\x81\x04\n" +
	"\vHttpGateway\x12D\n" +
	"\x10virtual_services\x18\x01 \x03(\v2\x19.core.solo.io.ResourceRefR\x0fvirtualServices\x12r\n" +
	"\x18virtual_service_selector\x18\x02 \x03(\v28.gateway.solo.io.HttpGateway.VirtualServiceSelectorEntryR\x16virtualServiceSelector\x12r\n" +
	"\x1bvirtual_service_expressions\x18\t \x01(\v22.gateway.solo.io.VirtualServiceSelectorExpressionsR\x19virtualServiceExpressions\x12<\n" +
	"\x1avirtual_service_namespaces\x18\x03 \x03(\tR\x18virtualServiceNamespaces\x12;\n" +
	"\aoptions\x18\b \x01(\v2!.gloo.solo.io.HttpListenerOptionsR\aoptions\x1aI\n" +
	"\x1bVirtualServiceSelectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x03\n" +
	"!VirtualServiceSelectorExpressions\x12_\n" +
	"\vexpressions\x18\x03 \x03(\v2=.gateway.solo.io.VirtualServiceSelectorExpressions.ExpressionR\vexpressions\x1a\xa4\x02\n" +
	"\n" +
	"Expression\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12b\n" +
	"\boperator\x18\x02 \x01(\x0e2F.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.OperatorR\boperator\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values\"\x87\x01\n" +
	"\bOperator\x12\n" +
	"\n" +
	"\x06Equals\x10\x00\x12\x10\n" +
	"\fDoubleEquals\x10\x01\x12\r\n" +
	"\tNotEquals\x10\x02\x12\x06\n" +
	"\x02In\x10\x03\x12\t\n" +
	"\x05NotIn\x10\x04\x12\n" +
	"\n" +
	"\x06Exists\x10\x05\x12\x10\n" +
	"\fDoesNotExist\x10\x06\x12\x0f\n" +
	"\vGreaterThan\x10\a\x12\f\n" +
	"\bLessThan\x10\bBA\xb8\xf5\x04\x01\xc0\xf5\x04\x01\xd0\xf5\x04\x01Z3github.com/solo-io/gloo/projects/gateway/pkg/api/v1b\x06proto3"

var (
	file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_goTypes = []any{
	(VirtualServiceSelectorExpressions_Expression_Operator)(0), // 0: gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator
	(*HttpGateway)(nil),                       // 1: gateway.solo.io.HttpGateway
	(*VirtualServiceSelectorExpressions)(nil), // 2: gateway.solo.io.VirtualServiceSelectorExpressions
	nil, // 3: gateway.solo.io.HttpGateway.VirtualServiceSelectorEntry
	(*VirtualServiceSelectorExpressions_Expression)(nil), // 4: gateway.solo.io.VirtualServiceSelectorExpressions.Expression
	(*core.ResourceRef)(nil),                             // 5: core.solo.io.ResourceRef
	(*v1.HttpListenerOptions)(nil),                       // 6: gloo.solo.io.HttpListenerOptions
}
var file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_depIdxs = []int32{
	5, // 0: gateway.solo.io.HttpGateway.virtual_services:type_name -> core.solo.io.ResourceRef
	3, // 1: gateway.solo.io.HttpGateway.virtual_service_selector:type_name -> gateway.solo.io.HttpGateway.VirtualServiceSelectorEntry
	2, // 2: gateway.solo.io.HttpGateway.virtual_service_expressions:type_name -> gateway.solo.io.VirtualServiceSelectorExpressions
	6, // 3: gateway.solo.io.HttpGateway.options:type_name -> gloo.solo.io.HttpListenerOptions
	4, // 4: gateway.solo.io.VirtualServiceSelectorExpressions.expressions:type_name -> gateway.solo.io.VirtualServiceSelectorExpressions.Expression
	0, // 5: gateway.solo.io.VirtualServiceSelectorExpressions.Expression.operator:type_name -> gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_init() }
func file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_init() {
	if File_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto = out.File
	file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gateway_api_v1_http_gateway_proto_depIdxs = nil
}
