{{- define "gateway.validationWebhookSpec" }}
{{- if and .Values.gateway.enabled .Values.gateway.validation.enabled .Values.gateway.validation.webhook.enabled }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: gloo-gateway-validation-webhook-{{ .Release.Namespace }}
  labels:
{{ include "gloo.labels" . | indent 4}}
    gloo: gateway
  annotations:
    {{- if not .Values.gateway.validation.webhook.disableHelmHook }}
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "5" # must be executed before cert-gen job
    {{- end }}
    {{- range $key, $value := .Values.gateway.validation.webhook.extraAnnotations }}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end }}
webhooks:
- name: gloo.{{ .Release.Namespace }}.svc  # must be a domain with at least three segments separated by dots
  clientConfig:
    service:
      name: gloo
      namespace: {{ .Release.Namespace }}
      path: "/validation"
    caBundle: "" # update manually or use certgen job or cert-manager's ca-injector
  rules:
{{- if and .Values.kubeGateway.enabled .Values.gateway.validation.webhook.enablePolicyApi }}
  - operations: [ "CREATE", "UPDATE" ]
    # RouteOption and VirtualHostOption DELETEs are not supported.
    # Their validation is currently limited to usage as Kube Gateway API Policies
    # and are hermetically validated for semantic correctness only. This means there
    # is no validation needed for DELETEs, as a DELETE will never result be semantically invalid
    apiGroups: ["gateway.solo.io"]
    apiVersions: ["v1"]
    resources: ["routeoptions", "virtualhostoptions"]
{{- end }}{{/* if and .Values.kubeGateway.enabled .Values.gateway.validation.webhook.enablePolicyApi */}}
  - operations: {{ include "gloo.webhookvalidation.operationsForResource" (list "virtualservices" .Values.gateway.validation.webhook.skipDeleteValidationResources) }}
    apiGroups: ["gateway.solo.io"]
    apiVersions: ["v1"]
    resources: ["virtualservices"]
  - operations: {{ include "gloo.webhookvalidation.operationsForResource" (list "routetables" .Values.gateway.validation.webhook.skipDeleteValidationResources) }}
    apiGroups: ["gateway.solo.io"]
    apiVersions: ["v1"]
    resources: ["routetables"]
  - operations: [ "CREATE", "UPDATE" ]
{{/* gateway deletions are not supported at the moment. Since we have no longer use resource flags to support
specific resources, we will manage the resources that the webhook receives via the helm configurations*/}}
    apiGroups: ["gateway.solo.io"]
    apiVersions: ["v1"]
    resources: ["gateways"]
  - operations: {{ include "gloo.webhookvalidation.operationsForResource" (list "upstreams" .Values.gateway.validation.webhook.skipDeleteValidationResources) }}
    apiGroups: ["gloo.solo.io"]
    apiVersions: ["v1"]
    resources: ["upstreams"]{{/* TODO(https://github.com/solo-io/gloo/issues/2797): Extend to all gloo resources */}}
  - operations: {{ include "gloo.webhookvalidation.operationsForResource" (list "ratelimitconfigs" .Values.gateway.validation.webhook.skipDeleteValidationResources) }}
    apiGroups: ["ratelimit.solo.io"]
    apiVersions: ["v1alpha1"]
    resources: ["ratelimitconfigs"]
  sideEffects: None
  matchPolicy: Exact
{{- if .Values.gateway.validation.webhook.timeoutSeconds }}
  timeoutSeconds: {{ .Values.gateway.validation.webhook.timeoutSeconds }}
{{- end }}
{{- with .Values.gateway.validation.matchConditions }}
  matchConditions:
    {{- toYaml . | nindent 4 }}
{{- end }}
  admissionReviewVersions:
    - v1beta1 # v1beta1 still live in 1.22 https://github.com/kubernetes/api/blob/release-1.22/admission/v1beta1/types.go#L33
{{- if .Values.gateway.validation.failurePolicy }}
  failurePolicy: {{ .Values.gateway.validation.failurePolicy }}
{{- end }} {{- /* if .Values.gateway.validation.failurePolicy */}}

{{/* Webhook for core resources - only render if we need to */}}
{{- if and
  (not (has "*" .Values.gateway.validation.webhook.skipDeleteValidationResources))
  (or (not (has "secrets" .Values.gateway.validation.webhook.skipDeleteValidationResources))
       (not (has "namespaces" .Values.gateway.validation.webhook.skipDeleteValidationResources)))
}}
- name: kube.{{ .Release.Namespace }}.svc  # must be a domain with at least three segments separated by dots
  clientConfig:
    service:
      name: gloo
      namespace: {{ .Release.Namespace }}
      path: "/validation"
    caBundle: "" # update manually or use certgen job or cert-manager's ca-injector
  rules:
{{- /* Can't use the include for this one because if the operations are empty, we need to drop the whole list element */}}
{{- if and (not (has "*" .Values.gateway.validation.webhook.skipDeleteValidationResources)) (not (has "secrets" .Values.gateway.validation.webhook.skipDeleteValidationResources)) }}
  - operations: [ "DELETE" ]
    apiGroups: [""]{{/* We do not have internal secret CRDs. We want to validate the deletion of secrets such as TLS, so we add "" which refers to Kubernetes' core APIs. */}}
    apiVersions: ["v1"]
    resources: ["secrets"]
{{- end }}
{{- if and (not (has "*" .Values.gateway.validation.webhook.skipDeleteValidationResources)) (not (has "namespaces" .Values.gateway.validation.webhook.skipDeleteValidationResources)) }}
{{- /* A namespace with an updated to a label can cause it to no longer be watched, equivalent to deleting it from the controller's perspective */}}
  - operations: [ "UPDATE", "DELETE"]
    apiGroups: [""]{{/* We do not have internal namespace CRDs. We want to validate the updation and deletion of namespaces that are watched. */}}
    apiVersions: ["v1"]
    resources: ["namespaces"]
{{- end }}
  sideEffects: None
  matchPolicy: Exact
{{- if .Values.gateway.validation.webhook.timeoutSeconds }}
  timeoutSeconds: {{ .Values.gateway.validation.webhook.timeoutSeconds }}
{{- end }}
{{- with .Values.gateway.validation.kubeCoreMatchConditions }}
  matchConditions:
    {{- toYaml . | nindent 4 }}
{{- end }}
  admissionReviewVersions:
    - v1beta1 # v1beta1 still live in 1.22 https://github.com/kubernetes/api/blob/release-1.22/admission/v1beta1/types.go#L33
{{- if .Values.gateway.validation.kubeCoreFailurePolicy }}
  failurePolicy: {{ .Values.gateway.validation.kubeCoreFailurePolicy -}}
{{- end }} {{/* if .Values.gateway.validation.kubeCoreFailurePolicy */}}
{{- end }} {{/* render webhook if */}}

{{- end }} {{/* if and .Values.gateway.enabled .Values.gateway.validation.enabled .Values.gateway.validation.webhook.enabled */}}
{{- end }} {{/* define "gateway.validationWebhookSpec" */}}

{{/* Render template with yaml overrides */}}
{{- $kubeResourceOverride := dict -}}
{{- if .Values.gateway.validation -}}
{{- if .Values.gateway.validation.webhook -}}
{{- $kubeResourceOverride = .Values.gateway.validation.webhook.kubeResourceOverride   -}}
{{- end -}} {{/* if .Values.gateway.validation.webhook */ -}}
{{- end -}} {{/* if .Values.gateway.validation */ -}}
{{- include "gloo.util.merge" (list . $kubeResourceOverride "gateway.validationWebhookSpec") -}}