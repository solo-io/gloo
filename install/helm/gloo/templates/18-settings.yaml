{{- define "settings.settingsSpec"}}
{{ if .Values.settings.create }}

apiVersion: gloo.solo.io/v1
kind: Settings
metadata:
  labels:
{{ include "gloo.labels" . | indent 4}}
    gloo: settings
  name: default
  namespace: {{ .Release.Namespace }}
spec:
{{- if .Values.settings.devMode }}
  devMode:
    {{ .Values.settings.devMode}}
{{- end }}
{{- if and .Values.settings.secretOptions .Values.settings.secretOptions.sources }}
  secretOptions:
    sources:
{{- toYaml .Values.settings.secretOptions.sources | nindent 6 }}
{{- end }}
  gloo:
{{- if .Values.settings.xdsAddress }}
    xdsClusterAddr: {{ .Values.settings.xdsAddress }}
{{- end }}
{{- if .Values.global.glooMtls.enabled }}
    xdsBindAddr: "127.0.0.1:9999"
    restXdsBindAddr: "127.0.0.1:9998"
{{- else }}
    xdsBindAddr: "0.0.0.0:{{ .Values.gloo.deployment.xdsPort }}"
    restXdsBindAddr: "0.0.0.0:{{ .Values.gloo.deployment.restXdsPort }}"
{{- end }}
    proxyDebugBindAddr: "0.0.0.0:{{ .Values.gloo.deployment.proxyDebugPort }}"
    enableRestEds: {{ .Values.settings.enableRestEds | default false }}
{{- /* .Values.settings.replaceInvalidRoutes for backwards compatibility */}}
{{- if or (.Values.settings.invalidConfigPolicy) (.Values.settings.replaceInvalidRoutes) }}
    invalidConfigPolicy:
    {{- if .Values.settings.replaceInvalidRoutes }}
      replaceInvalidRoutes: {{ .Values.settings.replaceInvalidRoutes }}
    {{- end }}
{{ toYaml .Values.settings.invalidConfigPolicy | indent 6}}
{{- end }}
    disableKubernetesDestinations: {{ .Values.settings.disableKubernetesDestinations | default false }}
    disableProxyGarbageCollection: {{ .Values.settings.disableProxyGarbageCollection | default false }}
{{- if .Values.settings.regexMaxProgramSize }}
    regexMaxProgramSize: {{ .Values.settings.regexMaxProgramSize }}
{{- end }}
{{- if .Values.settings.circuitBreakers }}
    circuitBreakers:
{{ toYaml .Values.settings.circuitBreakers | indent 6}}
{{- end }}
{{- if .Values.settings.aws }}
    awsOptions:
{{- if .Values.settings.aws.enableServiceAccountCredentials }}
      serviceAccountCredentials:
        cluster: aws_sts_cluster
{{- if not .Values.settings.aws.stsCredentialsRegion }}
        uri: sts.amazonaws.com
        region: us-east-1
{{- else }}
        uri: sts.{{ .Values.settings.aws.stsCredentialsRegion }}.amazonaws.com
        region: {{ .Values.settings.aws.stsCredentialsRegion }}
{{- end }}
{{- else if .Values.settings.aws.enableCredentialsDiscovery }}
      enableCredentialsDiscovey: true
{{- end }}

 {{- if  .Values.settings.aws.credential_refresh_delay }}
      credentialRefreshDelay: {{  .Values.settings.aws.credential_refresh_delay }}
{{- end }}
{{- if  .Values.settings.aws.propagateOriginalRouting }}
      propagateOriginalRouting: {{ .Values.settings.aws.propagateOriginalRouting }}
{{- end }}
  {{- if .Values.settings.aws.fallbackToFirstFunction }}
      fallbackToFirstFunction: {{ .Values.settings.aws.fallbackToFirstFunction }}
  {{- end }}
{{- end }}
  {{- if .Values.global.istioIntegration }}
    istioOptions:
      appendXForwardedHost: {{ .Values.global.istioIntegration.appendXForwardedHost }}
      enableAutoMtls: {{ .Values.global.istioIntegration.enableAutoMtls }}
      {{- if .Values.global.istioIntegration.enabled }}
      enableIntegration: true
      {{- else }}
      enableIntegration: false
      {{- end }}
  {{- end }}

  {{- if .Values.settings.integrations.consul }}
  consul:
  {{- toYaml .Values.settings.integrations.consul | nindent 4 }}
  {{- end }}
  {{- if .Values.settings.integrations.consulUpstreamDiscovery }}
  consulDiscovery:
  {{- toYaml .Values.settings.integrations.consulUpstreamDiscovery | nindent 4 }}
  {{- end }}

{{- if .Values.settings.writeNamespace }}
  discoveryNamespace: {{ .Values.settings.writeNamespace }}
{{- else }}
  discoveryNamespace: {{ .Release.Namespace }}
{{- end }}
  kubernetesArtifactSource: {}
  kubernetesConfigSource: {}
  kubernetesSecretSource: {}
  refreshRate: 60s
{{- if .Values.settings.linkerd }}
  linkerd: true
{{- end }}
{{- if .Values.settings.integrations.knative.enabled }}
  knative:
{{- if (semverCompare "< 0.8.0" .Values.settings.integrations.knative.version ) }}
    clusterIngressProxyAddress: "clusteringress-proxy.{{ .Release.Namespace }}.svc.{{ $.Values.k8s.clusterName}}"
{{- else }}
    knativeExternalProxyAddress: "knative-external-proxy.{{ .Release.Namespace }}.svc.{{ $.Values.k8s.clusterName}}"
    knativeInternalProxyAddress: "knative-internal-proxy.{{ .Release.Namespace }}.svc.{{ $.Values.k8s.clusterName}}"
{{- end }}
{{- end }}

  gateway:
    isolateVirtualHostsBySslConfig: {{ .Values.gateway.isolateVirtualHostsBySslConfig }}
    readGatewaysFromAllNamespaces: {{ .Values.gateway.readGatewaysFromAllNamespaces }}
{{- if .Values.gateway.translateEmptyGateways}}
    translateEmptyGateways: {{ .Values.gateway.translateEmptyGateways}}
{{- end}}
{{- if or .Values.gateway.persistProxySpec (not .Values.gateway.enabled) }}
    persistProxySpec: true
{{- end}}
{{- if .Values.gateway.compressedProxySpec}}
    compressedProxySpec: {{ .Values.gateway.compressedProxySpec}}
{{- end}}
    enableGatewayController: {{ .Values.gateway.enabled }}
{{- if .Values.gateway.validation.enabled }}
    validation:
      proxyValidationServerAddr: "gloo:{{ .Values.gloo.deployment.validationPort }}"
      alwaysAccept: {{ .Values.gateway.validation.alwaysAcceptResources }}
      allowWarnings: {{ .Values.gateway.validation.allowWarnings }}
      warnMissingTlsSecret: {{ .Values.gateway.validation.warnMissingTlsSecret }}
      serverEnabled: {{ .Values.gateway.validation.serverEnabled }}
      disableTransformationValidation: {{ .Values.gateway.validation.disableTransformationValidation }}
      warnRouteShortCircuiting: {{ .Values.gateway.validation.warnRouteShortCircuiting }}
      validationServerGrpcMaxSizeBytes: {{ .Values.gateway.validation.validationServerGrpcMaxSizeBytes }}
      fullEnvoyValidation: {{ .Values.gateway.validation.fullEnvoyValidation }}
{{- end }}

{{- if .Values.discovery }}
  discovery:
{{- if ne .Values.discovery.fdsMode "" }}
    fdsMode: {{.Values.discovery.fdsMode}}
{{- end }}
{{- if .Values.discovery.udsOptions }}
    udsOptions:
    {{- toYaml .Values.discovery.udsOptions | nindent 6 }}
{{- end }} {{/* if .Values.discovery.udsOptions */}}
{{- if .Values.discovery.fdsOptions }}
    fdsOptions:
    {{- toYaml .Values.discovery.fdsOptions | nindent 6 }}
{{- end }} {{/* if .Values.discovery.fdsOptions */}}
{{- end }} {{/* if .Values.discovery */}}

{{- if .Values.settings.extensions }}
  extensions:
{{- toYaml .Values.settings.extensions | nindent 4 }}
{{- end }}

{{- if .Values.settings.rateLimit }}
  ratelimit:
{{- toYaml .Values.settings.rateLimit | nindent 4 }}
{{- end }}

{{- if .Values.settings.ratelimitServer }}
  ratelimitServer:
{{- toYaml .Values.settings.ratelimitServer | nindent 4 }}
{{- end }}

{{/* extauth have specified yaml in Enterprise (as opposed to generic yaml insertion for third party configs here) */}}
{{- if .Values.global.extauthCustomYaml }}
{{- if .Values.global.extensions }}
{{- if .Values.global.extensions.extAuth }}
  extauth:
{{- toYaml .Values.global.extensions.extAuth | nindent 4 }}
{{- end }}
{{- end }}
{{- end -}}

{{- if .Values.global.extraSpecs }}
{{- include "gloo.extraSpecs"  . }}
{{- end -}}

{{- if .Values.settings.singleNamespace }}
  watchNamespaces:
  - {{ .Release.Namespace }}
{{- else }}
{{- with .Values.settings.watchNamespaces }}
  watchNamespaces:
  {{- range . }}
  - {{ . }}
  {{- end }}
{{- end }} {{/* with .Values.settings.watchNamespaces */}}
{{- end }} {{/* if .Values.settings.singleNamespace */}}

{{- if .Values.settings.watchNamespaceSelectors }}
  watchNamespaceSelectors:
  {{ toYaml .Values.settings.watchNamespaceSelectors | nindent 4 }}
{{- end }} {{/* if .Values.settings.watchNamespaceSelectors */}}

{{- end }} {{/* if .Values.settings.create  */}}
{{- end }} {{/* define "settings.settingsSpec" */}}


{{/* Render template with yaml overrides */}}
{{- $kubeResourceOverride := dict -}}
{{- if .Values.settings -}}
{{- $kubeResourceOverride = .Values.settings.kubeResourceOverride  -}}
{{- end -}}
{{- include "gloo.util.merge" (list . $kubeResourceOverride "settings.settingsSpec") -}}
