{{- define "discovery.deploymentSpec"}}
{{- if .Values.discovery.enabled }}
{{- $statsConfig := coalesce .Values.discovery.deployment.stats .Values.global.glooStats -}}
{{- $image := .Values.discovery.deployment.image }}
{{- $overrideImage := (dict) }}
{{- if .Values.global.deploymentImages }}
  {{- range .Values.global.deploymentImages.deployments }}
    {{- if and (eq .  "discovery") $.Values.global.deploymentImages.image }}
      {{- $overrideImage = $.Values.global.deploymentImages.image }}
    {{- end }}
  {{- end }}
{{- end }}

{{- $image = merge .Values.discovery.deployment.image $overrideImage  (or .Values.global.image (dict)) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
{{ include "gloo.labels" . | indent 4}}
    gloo: discovery
  name: discovery
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.discovery.deployment.replicas }}
  selector:
    matchLabels:
      gloo: discovery
  template:
    metadata:
      labels:
        gloo: discovery
        {{- if .Values.discovery.deployment.extraDiscoveryLabels }}
        {{- range $key, $value := .Values.discovery.deployment.extraDiscoveryLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if and .Values.global.istioIntegration.whitelistDiscovery .Values.global.istioIntegration.istioSidecarRevTag }}
        istio.io/rev: {{ .Values.global.istioIntegration.istioSidecarRevTag }}
        {{- else if .Values.global.istioIntegration.whitelistDiscovery }}
        sidecar.istio.io/inject: "true"
        {{- else if .Values.global.istioIntegration.disableAutoinjection }}
        sidecar.istio.io/inject: "false"
        {{- end }}
      annotations:
        {{- if $statsConfig.enabled }}
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        {{- end}}
        {{- if .Values.discovery.deployment.extraDiscoveryAnnotations }}
        {{- range $key, $value := .Values.discovery.deployment.extraDiscoveryAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: discovery
      {{- include "gloo.podSpecStandardFields" .Values.discovery.deployment | nindent 6 -}}
      containers:
      - image: {{template "gloo.image" $image}}
        imagePullPolicy: {{ $image.pullPolicy }}
        name: discovery
{{- if .Values.discovery.deployment.resources }}
        resources:
{{ toYaml .Values.discovery.deployment.resources | indent 10}}
{{- end}}
        # container security context
        {{- $capabilities := dict "drop" (list "ALL") -}}
        {{- $securityDefaults := dict
            "readOnlyRootFilesystem" true
            "allowPrivilegeEscalation" false
            "runAsNonRoot" true
            "capabilities" $capabilities -}}
        {{- if not .Values.discovery.deployment.floatingUserId -}}
          {{- $_ := set $securityDefaults "runAsUser" .Values.discovery.deployment.runAsUser }}
        {{- end -}}
        {{- include "gloo.containerSecurityContext" (dict "values" .Values.discovery.deployment.discoveryContainerSecurityContext "defaults" $securityDefaults "podSecurityStandards" .Values.global.podSecurityStandards "indent" 8 "globalSec" .Values.global.securitySettings) }}
        env:
{{- if .Values.license_secret_name }}
          - name: GLOO_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.license_secret_name }}
                key: license-key
{{- end }}
{{- if (((.Values.discovery.deployment.resources).limits).memory) }}
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "1"
                resource: limits.memory
{{- end -}}
{{- if (((.Values.discovery.deployment.resources).limits).cpu) }}
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "1"
                resource: limits.cpu
{{- end -}}
{{- if .Values.discovery.deployment.customEnv }}
{{ toYaml .Values.discovery.deployment.customEnv | indent 10 }}
{{- end }}
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{- if $statsConfig.enabled }}
          - name: START_STATS_SERVER
            value: "true"
        {{- end}}
        {{- if .Values.discovery.logLevel }}
          - name: LOG_LEVEL
            value: {{ .Values.discovery.logLevel }}
        {{- end}}
        {{- if and $statsConfig.enabled $statsConfig.podMonitorEnabled }}
        ports:
          - name: http-monitoring
            containerPort: 9091
        {{- end }}
      {{- /* Pod Security Context */ -}}
      {{- if and .Values.discovery.deployment.enablePodSecurityContext (not .Values.global.securitySettings.floatingUserId) }}
        {{- $securityDefaults := dict -}}
        {{- if .Values.discovery.deployment.fsGroup }}
          {{- $_ := set $securityDefaults "fsGroup" (int64 (printf "%.0f" (float64 .Values.discovery.deployment.fsGroup))) -}}
        {{- end -}}
        {{- if .Values.discovery.deployment.runAsUser }}
          {{- $_ := set $securityDefaults "runAsUser" (int64 (printf "%.0f" (float64 .Values.discovery.deployment.runAsUser))) -}}
        {{- end }}
        {{- include "gloo.securityContext" (dict "defaults" $securityDefaults "indent" 6 "globalSec" .Values.global.securitySettings) -}}
      {{- end}}
{{- end }}
{{- end }} {{/* define "discovery.deploymentSpec"*/}}

{{/* Render template with yaml overrides */}}
{{- $kubeResourceOverride := dict -}}
{{- if .Values.discovery.deployment -}}
{{- $kubeResourceOverride = .Values.discovery.deployment.kubeResourceOverride  -}}
{{- end -}}
{{- include "gloo.util.merge" (list . $kubeResourceOverride "discovery.deploymentSpec") -}}

