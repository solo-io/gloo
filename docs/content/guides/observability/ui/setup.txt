---
title: Set up the Gloo UI
weight: 
description: Install the Gloo UI to get an at-a-glance view of the configuration, health, and compliance status of your Gloo Gateway setup and the workloads in your cluster. 
---
Install the Gloo UI to get an at-a-glance view of the configuration, health, and compliance status of your Gloo Gateway setup and the workloads in your cluster. 

To learn more about the features of the Gloo UI, see [About the Gloo UI]({{< versioned_link_path fromRoot="/guides/observability/ui/explore#about-the-gloo-ui" >}}).

## Before you begin

Install GG

## Set up the Gloo UI

Use these instructions to install the Gloo UI in the same cluster as Gloo Gateway. The Gloo UI analyzes your Gloo Gateway setup and provides metrics and insights to you. 

1. Set the name of your cluster and your Gloo Gateway license key as an environment variable.
   ```sh
   export CLUSTER_NAME=<cluster-name>
   export GLOO_GATEWAY_LICENSE_KEY=<license-key>
   ```

2. Add the Helm repo for the Gloo UI. 
   ```sh
   helm repo add gloo-platform https://storage.googleapis.com/gloo-platform/helm-charts
   helm repo update  
   ```
   
3. Install the custom resources for the Gloo UI. 
   ```sh
   helm upgrade -i gloo-platform-crds gloo-platform/gloo-platform-crds \
    --namespace=gloo-system \
    --version={{< readfile file="/static/content/version-platform.md" markdown="true">}} \
    --set installEnterpriseCrds=false
   ```

4. Install the Gloo UI and configure it for Gloo Gateway.
   ```yaml 
   helm upgrade -i gloo-platform gloo-platform/gloo-platform \
   --namespace gloo-system \
   --version={{< readfile file="static/content/version-platform.md" markdown="true">}} \
   -f - <<EOF
   common:
     adminNamespace: "gloo-system"
     cluster: $CLUSTER_NAME
   featureGates:
     insightsConfiguration: true
   glooInsightsEngine:
     enabled: true
   glooAnalyzer:
     enabled: true
   glooUi:
     enabled: true
   licensing:
     glooGatewayLicenseKey: $GLOO_GATEWAY_LICENSE_KEY
   prometheus:
     enabled: true
   telemetryCollector:
     enabled: true
     mode: deployment
     replicaCount: 1
   EOF
   ```

5. Verify that the Gloo UI components are successfully installed. 
   ```sh
   kubectl get pods -n gloo-system
   ```
   
   Example output: 
   {{< highlight yaml "hl_lines=4-6" >}}
   NAME                                        READY   STATUS    RESTARTS   AGE
   extauth-f7695bf7f-f6dkt                     1/1     Running   0          10m
   gloo-587b79d556-tpvfj                       1/1     Running   0          10m
   gloo-mesh-ui-66db8d9584-kgjld               3/3     Running   0          72m
   gloo-telemetry-collector-68b8cf6f49-zhx87   1/1     Running   0          57m
   prometheus-server-7484d8bfd-tx5s4           2/2     Running   0          72m
   rate-limit-557dcb857f-9zq2t                 1/1     Running   0          10m
   redis-5d6c6bcd4-cnmbm                       1/1     Running   0          10m
   {{< /highlight >}}
   
   
## Visualize traffic

1. Follow the petstore [hello world example]({{< versioned_link_path fromRoot="/guides/traffic_management/hello_world/" >}}). This example deploys the petstore sample app and exposes a route to the app on your gateway proxy.  
   
2. Send a few requests to the httpbin app. 
   ```sh
   for i in {1..10}; do curl $(glooctl proxy url --name gateway-proxy)/all-pets; done
   ```
   
7. Open the Gloo UI. 
   1. Port-forward the Gloo UI pod. 
      ```sh
      kubectl port-forward deployment/gloo-mesh-ui -n gloo-system 8090
      ```
   2. Open the Gloo UI dashboard. 
      ```sh
      open http://localhost:8090/dashboard
      ```
      
      ![Gloo UI dashboard]({{% versioned_link_path fromRoot="/img/ui-dashboard.png" %}})

8. Go to **Observability** > **Graph** to see the Gloo UI Graph. Select your cluster from the **Cluster** drop-down list, and the `httpbin` and `gloo-system` namespaces from the **Namespace** drop-down list. Verify that you see requests from the gateway proxy to the httpbin app. Note that it might take a few seconds for the graph to show the requests that you sent.

   ![Gloo UI Graph]({{< versioned_link_path fromRoot="/img/ui-graph.png" >}})
         


## Next

Continue with [exploring the features of the Gloo UI]({{< versioned_link_path fromRoot="/guides/observability/ui/explore" >}}). 