name: Nightly

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # necessary to pass upgrade tests

on:
  # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
  # Minute [0,59]
  # Hour [0,23]
  # Day of the month [1,31]
  # Month of the year [1,12]
  # Day of the week ([0,6] with 0=Sunday)
  schedule:
    - cron: "0 5 * * 1-5" # weekdays @ 05:00 UTC, run tests against latest main
    - cron: "0 6 * * 1"   # monday   @ 06:00 UTC, run expanded tests against v1.15.x
    - cron: "0 7 * * 1"   # monday   @ 07:00 UTC, run expanded tests against v1.14.x
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to run tests against"
        type: choice
        options:
          - main
          - v1.15.x
          - v1.14.x
      run-regression:
        description: "Run regression tests"
        type: boolean
      run-performance:
        description: "Run performance tests"
        type: boolean

jobs:
  regression_tests_main:
    name: main regression tests
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-regression && inputs.branch == 'main') || github.event.schedule == '0 5 * * 1-5' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    # Previously, there was an environment variable, RELEASED_VERSION="LATEST" set.  This made use of some internal code:
    #       https://github.com/solo-io/gloo/blob/main/test/kube2e/util.go#L229-L241
    # which modified our testing process to pull the latest beta release.
    #
    # NOW, however, running this job is the same as normal CI.  (building a local chart, then using it)
    strategy:
      fail-fast: false
      matrix:
        kube-e2e-test-type: ['gateway', 'gloo', 'ingress', 'helm', 'gloomtls', 'glooctl', 'upgrade']
        kube-version: [ { node: 'v1.24.15@sha256:7db4f8bea3e14b82d12e044e25e34bd53754b7f2b0e9d56df21774e6f66a70ab', kubectl: 'v1.24.17', kind: 'v0.20.0', helm: 'v3.12.2' },
                        { node: 'v1.28.0@sha256:b7a4cad12c197af3ba43202d3efe03246b3f0793f162afb40a33c923952d5b31', kubectl: 'v1.28.4', kind: 'v0.20.0', helm: 'v3.13.2' }]
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - uses: ./.github/workflows/composite-actions/regression-tests

  regression_tests_15:
    name: v1.15.x regression tests
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-regression && inputs.branch == 'v1.15.x') || github.event.schedule == '0 6 * * 1' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        kube-e2e-test-type: ['gateway', 'gloo', 'ingress', 'helm', 'gloomtls', 'glooctl', 'upgrade']
        kube-version: [ { node: 'v1.23.13@sha256:ef453bb7c79f0e3caba88d2067d4196f427794086a7d0df8df4f019d5e336b61', kubectl: 'v1.23.17', kind: 'v0.17.0', helm: 'v3.11.2' },
                        { node: 'v1.27.3@sha256:3966ac761ae0136263ffdb6cfd4db23ef8a83cba8a463690e98317add2c9ba72', kubectl: 'v1.27.3', kind: 'v0.20.0', helm: 'v3.12.2' } ]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v1.15.x
      - uses: ./.github/workflows/composite-actions/regression-tests

  regression_tests_14:
    name: v1.14.x regression tests
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-regression && inputs.branch == 'v1.14.x') || github.event.schedule == '0 7 * * 1' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        kube-e2e-test-type: ['gateway', 'gloo', 'ingress', 'helm', 'gloomtls', 'glooctl', 'upgrade']
        kube-version: [ { node: 'v1.23.13@sha256:ef453bb7c79f0e3caba88d2067d4196f427794086a7d0df8df4f019d5e336b61', kubectl: 'v1.23.17', kind: 'v0.17.0', helm: 'v3.11.2' },
                        { node: 'v1.25.3@sha256:f52781bc0d7a19fb6c405c2af83abfeb311f130707a0e219175677e366cc45d1', kubectl: 'v1.25.8',  kind: 'v0.17.0', helm: 'v3.11.2' }]
    steps:
    - uses: actions/checkout@v3
      with:
        ref: v1.14.x
    - uses: ./.github/workflows/composite-actions/regression-tests

  performance_tests_main:
    name: main performance tests
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-performance && inputs.branch == 'main') || github.event.schedule == '0 5 * * 1-5' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: ./.github/workflows/composite-actions/prep-go-runner
      - uses: ./.github/workflows/composite-actions/performance-tests

  performance_tests_15:
    name: v1.15.x performance tests
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.run-performance && inputs.branch == 'v1.15.x') || github.event.schedule == '0 6 * * 1' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v1.15.x
      - uses: ./.github/workflows/composite-actions/prep-go-runner
      - uses: ./.github/workflows/composite-actions/performance-tests

  performance_tests_14:
    # There are no performance tests for v1.14.x.
    # As a result, we don't use an 8core runner and don't include a schedule trigger
    name: v1.14.x performance tests
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.run-performance && inputs.branch == 'v1.14.x'}}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - run: echo "v1.14.x performance tests do not exist"
        shell: bash

  publish_results:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    if: ${{ always() }}
    needs:
      - regression_tests_main
      - regression_tests_15
      - regression_tests_14
      - performance_tests_main
      - performance_tests_15
      - performance_tests_14
    steps:
      - uses: actions/checkout@v3
      - name: compute-preamble
        id: compute-preamble
        shell: bash
        run: |
          echo "SLACK_CHANNEL=C04CJMXAH7A" >> $GITHUB_ENV     #edge-nightly-results by default
          if [[ ${{github.event_name == 'workflow_dispatch'}} = true ]]; then
            trigger="Gloo OSS Manual run"
            branch=${{ inputs.branch }}
            echo "SLACK_CHANNEL=C0314KESVNV" >> $GITHUB_ENV   #slack-integration-testing if manually run
          elif [[ ${{github.event.schedule == '0 7 * * 1'}} = true ]]; then
            trigger="Gloo OSS weeklies"
            branch="v1.14.x"
          elif [[ ${{github.event.schedule == '0 6 * * 1'}} = true ]]; then
            trigger="Gloo OSS weeklies"
            branch="v1.15.x"
          elif [[ ${{github.event.schedule == '0 5 * * 1-5'}} = true ]]; then
            trigger="Gloo OSS nightlies"
            branch="main"
          fi
          preamble="$trigger ($branch)"
          echo "Setting PREAMBLE as $preamble"
          echo "preamble=$preamble" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@v4
        with:
          # Caching in setup-go is on by default
          # In our prep-go-runner we use a more configurable cache https://github.com/actions/cache
          # In this step, we don't need to store a new cache entry because it runs infrequently and
          # will pollute the cache entries
          cache: false
          go-version-file: go.mod
      - uses: actions/download-artifact@v4
      - name: send slack message
        env:
          PARENT_JOB_URL: https://github.com/solo-io/gloo/actions/runs/${{github.run_id}} # parent job hyperlink
          PREAMBLE: ${{ steps.compute-preamble.outputs.preamble }}  # text to hyperlink at start of slack message
          SLACKBOT_BEARER: ${{ secrets.SLACKBOT_BEARER }}
        run: |
          test_results="$(cat */test-out.json | jq -c --slurp .)"
          echo $test_results
          go run .github/workflows/helpers/notify-from-json.go $test_results