# Whenever a release is cut, copies the auto-generated reference documentation to the solo-io/docs repo.
name: push-docs

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      branch:
        description: 'LTS branch to execute the workflow for, such as v1.17.x, or main. Supported ONLY for v1.17.x and later (1.16.x and earlier are not in the new docs repo).'
        required: true
  repository_dispatch:
    types: [glooe-release-created]

jobs:
  receiver:
    runs-on: ubuntu-latest
    outputs:
      dispatch_lts: ${{ steps.dispatch-receiver.outputs.dispatch_lts }}
    steps:
      - name: The glooe-release-created event is received when a relase is cut in solo-projects repo
        id: dispatch-receiver
        run: |
          dispatch_lts=""
          payload="${{ github.event.client_payload.lts }}"
          echo "dispatch_lts=$payload" >> $GITHUB_OUTPUT

  copy-docs:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: receiver
    outputs:
      minor: ${{ steps.version-variables.outputs.minor }}
    steps:
    - name: Get LTS branch version
      id: lts-version
      run: |
        version=""
        if [[ "${{ github.event_name }}" == "release" ]]; then
          version=${{ github.event.release.target_commitish }}
        elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
          version=${{ needs.receiver.outputs.dispatch_lts }}
        else
          version=${{ inputs.branch }}
        fi
        echo "lts=$version" >> $GITHUB_OUTPUT
    # ON_LTS_UPDATE - bump version
    - name: Set version variables
      id: version-variables
      run: |
        minor=""
        directory=""
        if [[ "${{ steps.lts-version.outputs.lts }}" == "main" ]]; then
          minor="1.20"
          directory="main"
        elif [[ "${{ steps.lts-version.outputs.lts }}" == "${{ vars.LATEST_STABLE_BRANCH }}" ]]; then
          minor="1.19"
          directory="latest"
        elif [[ "${{ steps.lts-version.outputs.lts }}" == "${{ vars.LATEST_STABLE_MINUS_ONE_BRANCH }}" ]]; then
          minor="1.18"
          directory="${{ vars.LATEST_STABLE_MINUS_ONE_BRANCH }}"
        elif [[ "${{ steps.lts-version.outputs.lts }}" == "${{ vars.LATEST_STABLE_MINUS_TWO_BRANCH }}" ]]; then
          minor="1.17"
          directory="${{ vars.LATEST_STABLE_MINUS_TWO_BRANCH }}"
        else
          minor="1.20"
          directory="main"
        fi
        echo "minor=${minor}" >> $GITHUB_OUTPUT
        echo "directory=${directory}" >> $GITHUB_OUTPUT
    - name: Checkout docs repo
      uses: actions/checkout@v4
      with:
        repository: "solo-io/docs"
        token: ${{ secrets.DOCS_TOKEN }}
        path: docs
        fetch-depth: 0
        fetch-tags: "true"
    - name: Checkout gloo repo
      uses: actions/checkout@v4
      with:
        repository: "solo-io/gloo"
        token: ${{ secrets.DOCS_TOKEN }}
        path: gloo
        ref: ${{ steps.lts-version.outputs.lts }}
    - name: Generate docs
      env:
        GITHUB_TOKEN: ${{ secrets.DOCS_TOKEN }}
      run: |
        git config --global url."https://github_runner_solo:${GITHUB_TOKEN}@github.com".insteadOf "https://github.com"
        pushd gloo || exit 1
        make site-common -C docs
        popd || exit 1
    - name: Copy version changelogs
      run: |
        pushd docs || exit 1
        cp ../gloo/docs/content/static/content/gloo-changelog.docgen static/changelog/gloo-changelog.docgen
        cp ../gloo/docs/content/static/content/glooe-changelog.docgen static/changelog/glooe-changelog.docgen
        popd || exit 1
    - name: Copy security scans
      run: |
        pushd docs || exit 1
        # OSS
        [ -f ../gloo/docs/content/static/content/gloo-security-scan.docgen ] && cp ../gloo/docs/content/static/content/gloo-security-scan.docgen static/content/gg-security-updates/gloo-security-scan.docgen
        [ -f ../gloo/docs/content/static/content/gloo-security-scan-0.docgen ] && cp ../gloo/docs/content/static/content/gloo-security-scan-0.docgen static/content/gg-security-updates/gloo-security-scan-0.docgen
        [ -f ../gloo/docs/content/static/content/gloo-security-scan-1.docgen ] && cp ../gloo/docs/content/static/content/gloo-security-scan-1.docgen static/content/gg-security-updates/gloo-security-scan-1.docgen
        [ -f ../gloo/docs/content/static/content/gloo-security-scan-2.docgen ] && cp ../gloo/docs/content/static/content/gloo-security-scan-2.docgen static/content/gg-security-updates/gloo-security-scan-2.docgen
        [ -f ../gloo/docs/content/static/content/gloo-security-scan-3.docgen ] && cp ../gloo/docs/content/static/content/gloo-security-scan-3.docgen static/content/gg-security-updates/gloo-security-scan-3.docgen
        [ -f ../gloo/docs/content/static/content/gloo-security-scan-4.docgen ] && cp ../gloo/docs/content/static/content/gloo-security-scan-4.docgen static/content/gg-security-updates/gloo-security-scan-4.docgen
        # Enterprise
        [ -f ../gloo/docs/content/static/content/glooe-security-scan.docgen ] && cp ../gloo/docs/content/static/content/glooe-security-scan.docgen static/content/gg-security-updates/glooe-security-scan.docgen
        [ -f ../gloo/docs/content/static/content/glooe-security-scan-0.docgen ] && cp ../gloo/docs/content/static/content/glooe-security-scan-0.docgen static/content/gg-security-updates/glooe-security-scan-0.docgen
        [ -f ../gloo/docs/content/static/content/glooe-security-scan-1.docgen ] && cp ../gloo/docs/content/static/content/glooe-security-scan-1.docgen static/content/gg-security-updates/glooe-security-scan-1.docgen
        [ -f ../gloo/docs/content/static/content/glooe-security-scan-2.docgen ] && cp ../gloo/docs/content/static/content/glooe-security-scan-2.docgen static/content/gg-security-updates/glooe-security-scan-2.docgen
        [ -f ../gloo/docs/content/static/content/glooe-security-scan-3.docgen ] && cp ../gloo/docs/content/static/content/glooe-security-scan-3.docgen static/content/gg-security-updates/glooe-security-scan-3.docgen
        [ -f ../gloo/docs/content/static/content/glooe-security-scan-4.docgen ] && cp ../gloo/docs/content/static/content/glooe-security-scan-4.docgen static/content/gg-security-updates/glooe-security-scan-4.docgen
        popd || exit 1
    - name: Copy security posture
      run: |
        pushd docs || exit 1
        cp ../gloo/docs/content/reference/security-posture.yaml static/content/examples/manual/security-posture.yaml
        popd || exit 1
    - name: Copy OSA
      run: |
        pushd docs || exit 1
        cp ../gloo/docs/content/static/content/osa_included.md assets/conrefs/pages/gateway/reference/osa_included_${{ steps.version-variables.outputs.minor }}.md
        cp ../gloo/docs/content/static/content/osa_provided.md assets/conrefs/pages/gateway/reference/osa_provided_${{ steps.version-variables.outputs.minor }}.md
        popd || exit 1
    - name: Copy Helm
      run: |
        pushd docs || exit 1
        # OSS
        cp ../gloo/docs/content/reference/values.txt assets/conrefs/pages/reference/helm/values_${{ steps.version-variables.outputs.minor }}.txt
        # Enterprise
        cp ../gloo/docs/content/static/content/glooe-values.docgen assets/conrefs/pages/reference/helm/glooe-values_${{ steps.version-variables.outputs.minor }}.md
    - name: Copy CLI
      run: |
        pushd docs || exit 1
        cp ../gloo/docs/content/reference/cli/glooctl_check.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_check.md
        cp ../gloo/docs/content/reference/cli/glooctl_debug.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_debug.md
        cp ../gloo/docs/content/reference/cli/glooctl_debug_yaml.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_debug_yaml.md
        cp ../gloo/docs/content/reference/cli/glooctl_install_gateway.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_install_gateway.md
        cp ../gloo/docs/content/reference/cli/glooctl_install_gateway_enterprise.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_install_gateway_enterprise.md
        cp ../gloo/docs/content/reference/cli/glooctl_uninstall.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_uninstall.md
        cp ../gloo/docs/content/reference/cli/glooctl_upgrade.md content/en/gateway/${{ steps.version-variables.outputs.directory }}/reference/cli/glooctl_upgrade.md
        popd || exit 1
    - name: Copy API
      run: |
        pushd docs || exit 1
        cp ../gloo/docs/content/reference/api/github.com/solo-io/gloo/projects/gateway2/api/v1alpha1/direct_responses.md assets/conrefs/pages/gateway/reference/direct_responses_${{ steps.version-variables.outputs.minor }}.md
        sed -i '1,2d' assets/conrefs/pages/gateway/reference/direct_responses_${{ steps.version-variables.outputs.minor }}.md
        cp ../gloo/docs/content/reference/api/github.com/solo-io/gloo/projects/gateway2/api/v1alpha1/gateway_parameters.md assets/conrefs/pages/gateway/reference/gateway_parameters_${{ steps.version-variables.outputs.minor }}.md
        sed -i '1,2d' assets/conrefs/pages/gateway/reference/gateway_parameters_${{ steps.version-variables.outputs.minor }}.md
        popd || exit 1
    - name: Push and create PR
      uses: peter-evans/create-pull-request@v7
      with:
        base: main
        body: 'Copy auto-generated docs from the gloo repo, post-release of Gloo Gateway ${{ steps.version-variables.outputs.minor }}'
        branch: post-${{ steps.version-variables.outputs.minor }}-release-docs-copy
        commit-message: 'Copy auto-generated docs from ${{ steps.version-variables.outputs.minor }}'
        committer: github-runner-solo <github-runner-solo@github.com>
        delete-branch: true
        path: docs
        team-reviewers: solo-io/solo-docs
        title: '[Automated] Post-release docsgen for ${{ steps.version-variables.outputs.minor }}'
        token: ${{ secrets.DOCS_TOKEN }}
    - name: Notify in slack of success
      if: success()
      uses: slackapi/slack-github-action@v2.0.0
      env:
        # channel: #doctopus-tests - https://solo-io-corp.slack.com/archives/C04DYBSJK0R
        SLACK_CHANNEL_ID: C04DYBSJK0R
        MESSAGE: "✅ *Success:* Automated copy of reference docs for ${{ steps.version-variables.outputs.minor }} was successful. <https://github.com/solo-io/docs/pulls|Review the PR>"
      with:
        method: chat.postMessage
        token: ${{ secrets.SLACK_BOT_TOKEN }}
        payload: |
          channel: ${{ env.SLACK_CHANNEL_ID }}
          text: ${{ env.MESSAGE }}
          blocks:
            - type: section
              text:
                type: mrkdwn
                text: ${{ env.MESSAGE }}
    - name: Notify in slack of failure
      if: failure()
      uses: slackapi/slack-github-action@v2.0.0
      env:
        # channel: #doctopus-tests - https://solo-io-corp.slack.com/archives/C04DYBSJK0R
        SLACK_CHANNEL_ID: C04DYBSJK0R
        JOB_URL: https://github.com/solo-io/gloo-cli/actions/runs/${GITHUB_RUN_ID}
        MESSAGE: "❌ *Failure:* Automated copy of reference docs for ${VERSION} failed. <${JOB_URL}|Review the workflow failure>"
      with:
        method: chat.postMessage
        token: ${{ secrets.SLACK_BOT_TOKEN }}
        payload: |
          channel: ${{ env.SLACK_CHANNEL_ID }}
          text: ${{ env.MESSAGE }}
          blocks:
            - type: section
              text:
                type: mrkdwn
                text: ${{ env.MESSAGE }}
