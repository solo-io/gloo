name: Conformance Tests
description: run kubernetes gateway api conformance tests
runs:
  using: "composite"
  steps:
  - name: Prep Go Runner
    uses: ./.github/workflows/composite-actions/prep-go-runner
  - name: Dotenv Action
    id: dotenv
    uses: falti/dotenv-action@v1.1.4
    if: ${{ inputs.version-file != '' }}
    with:
      path: ${{ inputs.version-file }}
      log-variables: true  
  - name: Install kind
    uses: helm/kind-action@v1.12.0
    with:
      install_only: true
      version: ${{ steps.dotenv.outputs.kind_version || inputs.kind-version }}
      kubectl_version: ${{ steps.dotenv.outputs.kubectl_version || inputs.kubectl-version }}
      node_image: kindest/node:${{ steps.dotenv.outputs.node_version || inputs.kind-node-version }}
  - uses: azure/setup-kubectl@v4
    id: kubectl
    with:
      version: ${{ steps.dotenv.outputs.kubectl_version || inputs.kubectl-version }}
  - uses: azure/setup-helm@v4
    with:
      version: ${{ steps.dotenv.outputs.helm_version || inputs.helm-version }}
  - name: Set and retrieve environment variables
    shell: bash
    run: |
      # We want to conditionally set the VERSION variable based on the matrix value
      if [[ -z "${{ matrix.version }}" ]]; then
        echo "VERSION=$(make print-VERSION)" >> $GITHUB_ENV
      else
        # else, set the VERSION variable to the matrix value and
        # skip the docker build step so we use real image tags from
        # the helm repository.
        echo "VERSION=${{ matrix.version }}" >> $GITHUB_ENV
        echo "SKIP_DOCKER=true" >> $GITHUB_ENV
      fi
  - name: Setup test env
    shell: bash
    env:
      CLUSTER_NODE_VERSION: ${{ steps.dotenv.outputs.node_version || inputs.kind-node-version }}
      IMAGE_VARIANT: ${{ matrix.image-variant }}
      CONFORMANCE: "true"
    run: ./ci/kind/setup-kind.sh
  - name: Install Gloo Gateway with the k8s gateway integration enabled
    shell: bash
    run: |
      if [[ -z "${{ matrix.version }}" ]]; then
        # If matrix.version is empty, use the local chart path specified in the Makefile.
        helm upgrade -i -n gloo-system gloo ./_test/gloo-${VERSION}.tgz --create-namespace \
          --set kubeGateway.enabled=true \
          --set global.image.variant=${{ matrix.image-variant }}
      else
        # Else, use the provided version to install Gloo from the helm repository.
        helm upgrade -i -n gloo-system gloo gloo/gloo --version ${VERSION} --create-namespace \
          --set kubeGateway.enabled=true \
          --set global.image.variant=${{ matrix.image-variant }}
      fi
  - name: Run the kubernetes gateway API conformance tests
    shell: bash
    run: make conformance
  - name: Capture debug information when tests fail
    if: ${{ failure() }}
    shell: bash
    run: |
      kubectl -n gloo-system get events --sort-by='{.lastTimestamp}'
      echo
      kubectl -n gateway-conformance-infra get events --sort-by='{.lastTimestamp}'
      echo
      kubectl -n gateway-conformance-app-backend get events --sort-by='{.lastTimestamp}'
      echo
      kubectl -n gateway-conformance-web-backend get events --sort-by='{.lastTimestamp}'
      echo
      kubectl -n gloo-system logs deploy/gloo
  - name: Upload reports
    if: ${{ failure() }}
    uses: ./.github/workflows/composite-actions/upload-artifact
    with:
      # Name of the path to upload. The VERSION variable refers to the Makefile
      # VERSION variable.
      name: conformance-gloo-gateway-report-attempt-${{ github.run_attempt }}@k8s${{ steps.dotenv.outputs.kubectl_version || inputs.kubectl-version }}
      path: _test/conformance/${{ env.VERSION }}-report.yaml
