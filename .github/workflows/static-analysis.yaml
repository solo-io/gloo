name: Static Code Analysis

on:
  pull_request: { }

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  codegen:
    name: Generated Code
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Prep Go Runner
      uses: ./.github/workflows/composite-actions/prep-go-runner
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: "3.6.1"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate Code
      run: |
        ./ci/check-generated-code.sh
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v45
    - name: Check for DO_NOT_SUBMIT
      # documentation for where we get the list of files to pass into the script:
      # https://github.com/marketplace/actions/changed-files?version=v37#outputs
      run: ./ci/do-not-submit.sh ${{ steps.changed-files.outputs.all_changed_files }}

  static-analysis:
    name: Lint Checks
    runs-on: ubuntu-24.04
    # The linter is intended to run quickly.
    # We define a 10-minute timeout on the linter config (.golangci.yaml) as well.
    # If we exceed this timeout, we should consider only running the linter on changed files.
    timeout-minutes: 10
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Prep Go Runner
      uses: ./.github/workflows/composite-actions/prep-go-runner
    - uses: golangci/golangci-lint-action@v6
      # `make analyze` runs the linter with similar arguments to what we use here.
      # If this action fails, try running `make analyze` locally.
      with:
        version: v1.64.5
        args: --verbose --modules-download-mode=readonly --allow-parallel-runners
        skip-cache: true
        skip-save-cache: true
        only-new-issues: false
